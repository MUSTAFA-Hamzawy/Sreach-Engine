[, , c# is a general-purpose, modern and object-oriented programming language pronounced as “c sharp”. it was developed by microsoft led by anders hejlsberg and his team within the .net initiative and was approved by the european computer manufacturers association (ecma) and international standards organization (iso). c# is among the languages for common language infrastructure. c# is a lot similar to java syntactically and is easy for users who have knowledge of c, c++ or java., overview, fundamentals, important keywords, control statements, oop concepts, methods, delegates, constructors, arrays, arraylist, string, tuple, valuetuple, indexers, inheritance, interfaces, multithreading, exception handling, collections and generics, collections namespace, generic namespace, system namespace, specialized namespace, what’s new in c# 8.0, windows forms,  , , , , , , , , , , , , , , , , , , , , , , , , , writing code in comment? please use ide.geeksforgeeks.org, generate link and share the link here.][table of contents, table of contents, c# programming language, recent articles on c# !, , start your coding journey now!]c# programming language - geeksforgeeks[recent articles on c# !, overview, fundamentals, important keywords, control statements, oop concepts, methods, delegates, constructors, arrays, arraylist, string, tuple, valuetuple, indexers & properties, inheritance, interfaces, multithreading, exception handling, collections & generics, collections namespace, generic namespace, system namespace, specialized namespace, what’s new in c# 8.0, windows forms][courses for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more school courses school guide python programming learn to make apps explore more all courses, for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more, live dsa live classes system design java backend development full stack live explore more, dsa live classes, system design, java backend development, full stack live, explore more, self-paced dsa- self paced sde theory must-do coding questions explore more, dsa- self paced, sde theory, must-do coding questions, explore more, for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more, live competitive programming data structures with c++ data science explore more, competitive programming, data structures with c++, data science, explore more, self-paced dsa- self paced cip java / python / c++ explore more, dsa- self paced, cip, java / python / c++, explore more, school courses school guide python programming learn to make apps explore more, school guide, python programming, learn to make apps, explore more, all courses, tutorials practice ds & algo. must do questions dsa topic-wise dsa company-wise algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin ml & data science machine learning data science cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php software designs software design patterns system design tutorial school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, practice ds & algo. must do questions dsa topic-wise dsa company-wise, must do questions, dsa topic-wise, dsa company-wise, algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms, analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question, asymptotic analysis, worst, average and best cases, asymptotic notations, little o and little omega notations, lower and upper bound theory, analysis of loops, solving recurrences, amortized analysis, what does 'space complexity' mean ?, pseudo-polynomial algorithms, polynomial time approximation scheme, a time complexity question, searching algorithms, sorting algorithms, graph algorithms, pattern searching, geometric algorithms, mathematical, bitwise algorithms, randomized algorithms, greedy algorithms, dynamic programming, divide and conquer, backtracking, branch and bound, all algorithms, data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures, arrays, linked list, stack, queue, binary tree, binary search tree, heap, hashing, graph, advanced data structure, matrix, strings, all data structures, interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes, company preparation, top topics, practice company questions, interview experiences, experienced interviews, internship interviews, competititve programming, design patterns, system design tutorial, multiple choice quizzes, languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin, c, c++, java, python, c#, javascript, jquery, sql, php, scala, perl, go language, html, css, kotlin, ml & data science machine learning data science, machine learning, data science, cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering, mathematics, operating system, dbms, computer networks, computer organization and architecture, theory of computation, compiler design, digital logic, software engineering, gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs, gate computer science notes, last minute notes, gate cs solved papers, gate cs original papers and official keys, gate 2021 dates, gate cs 2021 syllabus, important topics for gate cs, web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php, html, css, javascript, angularjs, reactjs, nodejs, bootstrap, jquery, php, software designs software design patterns system design tutorial, software design patterns, system design tutorial, school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, school programming, mathematics number system algebra trigonometry statistics probability geometry mensuration calculus, number system, algebra, trigonometry, statistics, probability, geometry, mensuration, calculus, maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, class 12 notes, ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam, isro cs original papers and official keys, isro cs solved papers, isro cs syllabus for scientist/engineer exam, ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, ugc net cs notes paper ii, ugc net cs notes paper iii, ugc net cs solved papers, student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, campus ambassador program, school ambassador program, project, geek of the month, campus geek of the month, placement course, competititve programming, testimonials, student chapter, geek on the top, internship, careers, jobs apply for jobs post a job job-a-thon, apply for jobs, post a job, job-a-thon, events, , write come write articles for us and get featured practice learn and code with the best industry experts premium get access to ad-free content, doubt assistance and more! jobs come and find your dream job with us geeks digest quizzes geeks campus gblog articles ide campus mantri, geeks digest, quizzes, geeks campus, gblog articles, ide, campus mantri, , , home, saved videos, courses, , gblog, puzzles, what's new ?, data structures, algorithms, interview preparation, topic-wise practice, c++, java, python, competitive programming, machine learning, html, sde sheet, puzzles, gfg school, projects, c# programming language, introduction to .net framework, c# | .net framework (basic architecture and component stack), hello world in c#, common language runtime (clr) in c#, c# | identifiers, c# | data types, c# | variables, c# | literals, c# | operators, c# | keywords, c# decision making (if, if-else, if-else-if ladder, nested if, switch, nested switch), switch statement in c#, loops in c#, c# | jump statements (break, continue, goto, return and throw), c# | class and object, c# | constructors, c# | inheritance, c# | encapsulation, c# | abstraction, c# | methods, c# | method overloading, c# | method parameters, c# | method overriding, anonymous method in c#, c# | arrays, c# | jagged arrays, c# | array class, how to sort an array in c# | array.sort() method set – 1, how to find the rank of an array in c#, arraylist in c#, c# | arraylist class, c# | array vs arraylist, c# | string, c# | verbatim string literal – @, c# | string class, stringbuilder in c#, c# | string vs stringbuilder, c# | tuple, c# | tuple class, valuetuple in c#, valuetuple struct in c#, c# | indexers, c# | multidimensional indexers, c# | overloading of indexers, c# | properties, c# | restrictions on properties, collections in c#, c# | collection class, c# | generics – introduction, list implementation in c#, c# sortedlist with examples, hashset in c# with examples, sortedset in c# with examples, c# dictionary with examples, sorteddictionary implementation in c#, c# hashtable with examples, c# stack with examples, c# queue with examples, linked list implementation in c#, c# programming language, introduction to .net framework, c# | .net framework (basic architecture and component stack), hello world in c#, common language runtime (clr) in c#, c# | identifiers, c# | data types, c# | variables, c# | literals, c# | operators, c# | keywords, c# decision making (if, if-else, if-else-if ladder, nested if, switch, nested switch), switch statement in c#, loops in c#, c# | jump statements (break, continue, goto, return and throw), c# | class and object, c# | constructors, c# | inheritance, c# | encapsulation, c# | abstraction, c# | methods, c# | method overloading, c# | method parameters, c# | method overriding, anonymous method in c#, c# | arrays, c# | jagged arrays, c# | array class, how to sort an array in c# | array.sort() method set – 1, how to find the rank of an array in c#, arraylist in c#, c# | arraylist class, c# | array vs arraylist, c# | string, c# | verbatim string literal – @, c# | string class, stringbuilder in c#, c# | string vs stringbuilder, c# | tuple, c# | tuple class, valuetuple in c#, valuetuple struct in c#, c# | indexers, c# | multidimensional indexers, c# | overloading of indexers, c# | properties, c# | restrictions on properties, collections in c#, c# | collection class, c# | generics – introduction, list implementation in c#, c# sortedlist with examples, hashset in c# with examples, sortedset in c# with examples, c# dictionary with examples, sorteddictionary implementation in c#, c# hashtable with examples, c# stack with examples, c# queue with examples, linked list implementation in c#, last updated : 06 may, 2022, introduction to .net framework, .net framework (basic architecture and component stack), managed code and unmanaged code in .net, managed vs unmanaged code, cil or msil, .net framework class library (fcl), introduction to c#, setting up the environment in c#, how to install and setup visual studio for c#?, evolution of c#, hello world in c#, how to execute c# program on cmd (command-line)?, main method, getting familiar with visual studio, common language runtime(clr), architecture of common language runtime (clr), jit(just-in-time) compiler, garbage collection, windows form applications, c vs c#, c++ vs c#, java vs c#, python vs c#, interesting facts about c#, type system unification in c# .net, identifiers, data types, variables, types of variables, implicitly typed local variables – var, dynamic type in c#, var vs dynamic, binary literals and digit separators, scope of variables, access modifiers, constants or literals, operators, command line arguments, boxing and unboxing, boxing vs unboxing, params in c#, comments in c#, type casting or type conversion, enumeration in c#, properties in c#, nullable types, structures, keywords, as keyword, is keyword, is vs as operator keyword, static keyword, typeof keyword, difference between readonly and const keyword, ref keyword, decision-making statements, switch statement, loops, foreach loop, jump statements(break, continue, goto, return and throw), class and object, nested classes, difference between class and structure, early and late binding, overloading of constructors, inheritance in c#, encapsulation in c#, abstraction in c#, this keyword, static class, partial classes, shallow copy and deep copy, different ways to create an object, object and collection initializer, accessing structure’s elements using pointers, methods, method overloading, method returning an object, method parameters, runtime(dynamic) polymorphsim, method overriding, method hiding, method overriding vs method hiding, optional parameters, different ways to make method parameter optional, out parameters with examples, difference between ref and out keywords, anonymous method, partial methods, extension method, local function, delegates, predicate delegate, action delegate, func delegate, constructors in c#, default constructor, copy constructor, private constructor, constructor overloading, static constructors vs non-static constructors, invoking an overloaded constructor using this keyword, destructors, arrays, jagged arrays, arrays of strings, using foreach loop in arrays, array class, sorting an array, length of an array, array.binarysearch() method, check if two array objects are equal or not, number of elements in a specified dimension of an array, longlength property of an array, rank of an array, passing arrays as arguments, implicitly typed arrays, object and dynamic arrays, array indexoutofrange exception, different ways to sort an array in descending order, what is arraylist?, how to create the arraylist?, arraylist class, array vs arraylist, adding the elements to the end of the arraylist, removing all the elements from the arraylist, removing a range of elements from the arraylist, arraylist to array conversion, copying the entire arraylist to a 1-d array, copying the entire arraylist to 1-d array starting at the specified index, check if two arraylist objects are equal, string, verbatim string literal – @, string class, string class properties, how to use strings in switch statement, stringbuilder in c#, string vs stringbuilder, length of the stringbuilder, remove all characters from stringbuilder, check if two stringbuilder objects are equal, capacity of a stringbuilder, what is tuple in c#?, tuple class, tuple<t1> class, tuple<t1,t2> class, tuple<t1,t2,t3> class, tuple<t1,t2,t3,t4> class, tuple<t1,t2,t3,t4,t5> class, tuple<t1,t2,t3,t4,t5,t6> class, tuple<t1,t2,t3,t4,t5,t6,t7> class, tuple<t1,t2,t3,t4,t5,t6,t7,trest> class, what is valuetuple in c#?, valuetuple struct, valuetuple <t1> struct, valuetuple <t1,t2> struct, valuetuple <t1,t2,t3> struct, valuetuple <t1,t2,t3,t4> struct, valuetuple <t1,t2,t3,t4,t5> struct, valuetuple <t1,t2,t3,t4,t5,t6> struct, valuetuple <t1,t2,t3,t4,t5,t6,t7> struct, valuetuple <t1,t2,t3,t4,t5,t6,t7,trest> struct, indexers, multidimensional indexers, overloading of indexers, properties, restrictions on properties, inheritance in c#, multilevel inheritance, multiple inheritance using interfaces, inheritance in constructors, inheritance in interfaces, abstract classes, using sealed class to prevent inheritance, object class, interface in c#, how to use interface references, how to implement multiple interfaces having same method name, difference between abstract class and interface, delegates vs interfaces, explicit interface implementation, introduction to multithreading, types of threads, how to create threads, main thread, lifecycle and states of a thread, thread class, scheduling a thread for execution, check whether a thread is alive or not, joining threads, terminating a thread, check whether a thread is a background thread or not, naming a thread and fetching name of current thread, thread priority in multithreading, exceptions, system level exception vs application level exception, how to use multiple catch clause, nesting of try and catch blocks, using finally, list, sortedlist with examples, hashset, sortedset, dictionary with examples, sorteddictionary, hashtable with examples, stack with examples, queue with examples, linkedlist, hashtable vs dictionary, sortedlist vs sorteddictionary, c# | stack class, c# | queue class, c# | array class, c# | arraylist class, c# | hashtable class, c# | bitarray class, c# | sortedlist class, c# | hashset<t> class, c# | linkedlist<t> class, c# | list<t> class, c# | sortedset<t> class, dictionary class, sorteddictionary class, bitconverter class, console class, convert class, decimal struct, byte struct, char struct, int16 struct, int32 struct, int64 struct, uint16 struct, uint32 struct, uint64 struct, c# | listdictionary class, c# | stringcollection class, c# | ordereddictionary class, c# | hybriddictionary class, c# | stringdictionary class, static local function, range and indices, range structure, index struct, what is windows forms(wf) in c#?, button control, label control, radiobutton control, checkbox control, textbox control, combobox control, tooltip class, richtextbox class, maskedbox class, numericupdown class, datetimepicker class, listbox class, groupbox class, flowlayoutpanel class, must do coding questions for product based companies, axios in react: a guide for beginners, how to calculate moving average in a pandas dataframe?, difference between edge computing and fog computing, how to insert a pandas dataframe to an existing postgresql table?, what is "network id" and "host id" in ip addresses?, difference between var, let and const keywords in javascript, what is transmission control protocol (tcp)?, array of objects in c++ with examples, top 50 software engineering interview questions and answers, company, about us, careers, in media, contact us, privacy policy, copyright policy, learn, algorithms, data structures, sde cheat sheet, machine learning, cs subjects, video tutorials, news, top news, technology, work & career, business, finance, lifestyle, languages, python, java, cpp, golang, c#, sql, web development, web tutorials, django tutorial, html, css, javascript, bootstrap, contribute, write an article, improve an article, pick topics to write, write interview experience, internships, video internship]