[note  as of december 2011, this topic has been archived and is no longer actively maintained. for more information, see archived content. for information, recommendations, and guidance regarding the current version of windows internet explorer, see internet explorer developer center., persistence enables authors to specify an object to persist on the client during the current and later sessions using dynamic html (dhtml) behaviors. persistence allows microsoft internet explorer 5 and later to retain web page information, styles, variables, and state. for example, a collapsible list of links within a table of contents can remain expanded to the user's choice upon leaving and later returning to the page. or, a search engine query form can retain the last-used search string., persistence is implemented as a behavior. the new persistence behaviors include:, persistence creates new opportunities for the author. information that persists beyond a single page without support from the server, or within the finite scope of cookies, can increase the speed of navigation and content authoring., these behaviors can be used to preserve information in the browser's history, in favorites, in an xml store, or directly within a web page saved to disk. when a user returns to a persisted page, the state of the page can be restored. by allowing information to safely reside on the client, fewer server transactions are required. custom start pages and web applications prosper because information can continue to exist without the paternal support of the server, or repeated server queries. a web page can remain interactive to a degree, after the connection with the host has been severed, by persisting required information on the client., , use of persistence in internet explorer 5 breaks away from the tradition of using cookies and session files to store information. the microsoft model for client/server relationships using persistence and internet explorer 5 is pragmatic; it maintains the same-domain security policy associated with cookies while increasing storage and management capabilities.,  , persistence behaviors require certain conditions before they can be used. a meta tag directs the browser that the page is persistent. persistent elements are identified with a class and an id property. the onsave and onload event handlers can be defined for nondefault handling., the getattribute and setattribute methods are used to store information on a persistent object. the onload and onsave event handlers can be used to call the methods., the savefavorite behavior is ideal for persisting user-selected styles within a favorite or shortcut. the persisted information is stored within each favorite, allowing multiple favorites with different persisted information to exist., the getattribute and setattribute methods can be used to store information on objects participating in persistence. the onload and onsave event handlers can be used to call the methods., the savehistory behavior is ideal for storing information only while the browser is open, such as page state for collapsible content, or dynamic styles., form elements persist automatically. script blocks designated to persist can contain only variables. script objects and comments are removed. qualifying variables from external sources on persisting script blocks are inserted., the savesnapshot behavior is ideal for persisting web application information to the client's disk for later retrieval., form elements, styles, and dynamic values can be persisted using the getattribute and setattribute methods, and then explicitly saved using the load and save methods., the userdata behavior is ideal for persisting information across sessions and storing information in a hierarchical structure. it provides a good alternative to using cookies. the capacity of the userdata store is 64 kb per page, with a limit of 640 kb per domain, for restricted sites. for security reasons, a userdata store is available only in the same directory and with the same protocol used to persist the store.,  , security warning:  using these behavior incorrectly can compromise the security of your application. the savefavorite, savesnapshot, and userdata behaviors persist data as plain text in a saved web page. text is not encrypted and therefore not secure. any application that has access to the drive where the page is saved also has access to the data and can tamper with it. therefore, it is recommended that you not persist sensitive data like credit card numbers. for more information, see security considerations: dhtml and default behaviors., an id is not required for the savefavorite and savehistory behaviors, but is recommended for performance. the style element also can be set inline on a persistent object., the following examples show how to use behaviors to implement persistence., the following examples shows the savefavorite behavior., click to view sample., the following example shows the savehistory behavior., click to view sample., the following example shows the savesnapshot behavior., click to view sample., the following example shows the userdata behavior., click to view sample., the xmldocument property allows the savefavorite, savehistory, and userdata behaviors to access the xml document object model (dom). using the xml dom, persistent objects have access to the objects, properties, and methods that allow the author to build hierarchical data structures., in xml, this would yield:, persistence introduces a broad expanse of possibilities. the following how-to articles cover some of the more interesting, albeit easy-to-employ, uses of persistence.,  ,  ][introduction to persistence, benefits, using persistence, example uses of persistence, persisting content in xml, persistence how-tos, related topics]introduction to persistence (internet explorer)[oct, apr, 2013, 2016, note, behavior, cookies, meta, class, id, onsave, onload, getattribute, setattribute, onload, onsave, getattribute, setattribute, onload, onsave, getattribute, setattribute, load, save, security warning:  , id, style, xmldocument][http://www.facebook.com/microsoftdeveloper, https://twitter.com/msdev, http://plus.google.com/111221966647232053570/, technologies cloud mobile web business data gaming, cloud, mobile, web, business, data, gaming, downloads visual studio msdn subscriptions sdks, visual studio, msdn subscriptions, sdks, programs bizspark students develop apps blog architects overview case studies blueprints blog forums events, bizspark, students develop apps blog, develop apps, blog, architects overview case studies blueprints blog forums, overview, case studies, blueprints, blog, forums, events, community forums blogs tech advisors channel 9, forums, blogs, tech advisors, channel 9, documentation apis and reference dev centers, apis and reference, dev centers, samples, savefavorite—persists page state and information when the web page is saved as a favorite., savehistory—persists page state and information within the current session's memory., savesnapshot—persists page state and information directly in the page when users save the web page to their hard disk., userdata—persists page state and information within an xml store, a hierarchical data structure., benefits, using persistence, example uses of persistence, persisting content in xml, persistence how-tos, related topics, savefavorite persisting custom and dynamic styles, persisting custom and dynamic styles, savehistory persisting collapsible table of contents state, persisting collapsible table of contents state, savesnapshot persisting form data, persisting form data, userdata persisting session information, persisting session information, windows, office, visual studio, nokia, microsoft azure, more..., microsoft virtual academy, channel 9, interoperability bridges, msdn magazine, forums, blogs, codeplex, self support, bizspark (for startups), dreamspark, imagine cup, newsletter, privacy & cookies, terms of use, trademarks]