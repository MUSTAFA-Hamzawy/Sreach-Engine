[this is a joint post from nomadic labs.&& marigold.&& tq.&& tarides.&& and dailambda..&& we were proud to see florence go live on the chain on 11th may 2021. in keeping with our policy of proposing upgrades on a regularly scheduled basis.&& we’re happy to announce our latest tezos protocol proposal.&& granada..&& (as is usual.&& granada’s “true name” is its hash.&& which is ptgranadsdu8r9daykagwnqyaj64omn1o3kmgvcyksha97vqbvv)..&& granada contains several major improvements to the protocol.&& as well as numerous bug fixes and minor improvements. below we discuss some of the most interesting and important changes:.&& emmy*: the current tezos consensus algorithm is emmy+ and we propose to replace it with emmy*. as described in this blog post.&& if granada is adopted.&& emmy* will generally halve the time between blocks.&& from 60 seconds to 30 seconds.&& and allow transactions to achieve significantly faster finality than under the current consensus algorithm. (we expect several significant further improvements to our consensus algorithm and reductions in block times in coming proposals.).&& liquidity baking: the availability of low-slippage exchange of tez into other currencies and vice-versa is key to allow the widespread use of tezos. liquidity baking addresses this directly by piggybacking off the liquidity and global availability of bitcoin.&& and incentivizing large amounts of decentralized liquidity provision between tez and wrapped bitcoins..&& gas improvements: a number of substantial improvements to performance have been made.&& which in turn result in dramatic reductions in gas consumption. we have generally observed a decrease of a factor of three to six in the gas consumed in the execution of already deployed contracts. for some contracts.&& the improvement has been almost a factor of eight. this reduction in gas consumption.&& the latest in a series we began with delphi.&& will enable developers to deploy richer.&& more complicated.&& and more interesting applications on tezos at reasonable real-world cost..&& granada contains numerous other bug fixes and small improvements.&& and we encourage you to look at the changelog for a full description of the contents of the proposal..&& we strongly encourage you to test your own tezos-based applications to check for compatibility problems with granada. granada.&& and the configuration for its test network granadanet.&& are included in version 9.2 of the tezos node..&& if granada is adopted.&& the next proposal (which likely will have a name starting with the letter “h”) should be proposed and enter the tezos amendment process this summer..&& we hope that “h” will introduce a new consensus algorithm that.&& if adopted.&& will bring fast finality to tezos..&& over the course of the coming months.&& our team also intends to continue to develop and propose amendments to increase performance.&& lower gas consumption.&& reduce block times.&& and increase tezos’ throughput (as measured.&& for example.&& in transactions per seconds.&& or smart contract invocations per second)..&& © 2021.&& réalisé avec ❤ par verywell digital.&& back to top][announcing granada, contact, follow us :]nomadic labs - announcing granada[granada, emmy*, from 60 seconds to 30 seconds, liquidity baking, gas improvements, we have generally observed a decrease of a factor of three to six in the gas consumed in the execution of already deployed contracts.][expertise, academic, blog, training, research seminars, contact, research & development, > blog >, announcing granada, emmy*: the current tezos consensus algorithm is emmy+ and we propose to replace it with emmy*. as described in this blog post, if granada is adopted, emmy* will generally halve the time between blocks, from 60 seconds to 30 seconds, and allow transactions to achieve significantly faster finality than under the current consensus algorithm. (we expect several significant further improvements to our consensus algorithm and reductions in block times in coming proposals.), liquidity baking: the availability of low-slippage exchange of tez into other currencies and vice-versa is key to allow the widespread use of tezos. liquidity baking addresses this directly by piggybacking off the liquidity and global availability of bitcoin, and incentivizing large amounts of decentralized liquidity provision between tez and wrapped bitcoins., gas improvements: a number of substantial improvements to performance have been made, which in turn result in dramatic reductions in gas consumption. we have generally observed a decrease of a factor of three to six in the gas consumed in the execution of already deployed contracts. for some contracts, the improvement has been almost a factor of eight. this reduction in gas consumption, the latest in a series we began with delphi, will enable developers to deploy richer, more complicated, and more interesting applications on tezos at reasonable real-world cost.]