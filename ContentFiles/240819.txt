[the broken-link-checker plugin through 1.11.8 for wordpress (aka broken link checker) is susceptible to reflected xss due to improper encoding and insertion of an http get parameter into html. the filter function on the page listing all detected broken links can be exploited by providing an xss payload in the s_filter get parameter in a filter_id=search request. note: this is an end-of-life product..&& this plugin will monitor your blog looking for broken links and let you know if any are found..&& active installations: 700.&&000+.&& source: https://wordpress.org/plugins/broken-link-checker/.&& by exploiting the documented vulnerability.&& an external attacker without any privileges can execute javascript code in a victims browser. this can be misused.&& e.g for phishing attacks by displaying a fake login form and sending the victims credentials to the attacker. furthermore malicious actions can be performed in the context of an authenticated user. the impact depends on the level of access of the attacked user. in case of an admin this can lead to the execution of php code and the compromise of the server..&& the filter function on the page listing all detected broken links can be exploited by providing html and javascript code in one of the parameters. all users with access to the broken link checker are in danger..&& this is possible because the css class of the table contains the value of the s_filter get parameter if it is not empty. additionally it is necessary to provide the special filter id search via parameter filter_id=search in order to reach this execution path:.&& in includes/link-query.php (l803-810) the value of $base_filter is determined.&& with filter_id=search the right path will be reached:.&& in admin/table-printer.php (l71-82) the value of the css class of the table is determined and set. here the value of the get parameter is inside $current_filter[base_filter]..&& this example shows how an attacker can craft a url to execute a payload in the browser of the victim. when a user clicks on the link and is logged-in.&& the payload (in this case a simple javascript alert) will be executed. otherwise the user will be taken to the login page and redirected to the exploit after a successful login. replace <your_domain_here> with the url to your wordpress installation:.&& we recommend to properly escape the output by using the encoding functions provided by wordpress.&& like the esc_*- or wp_kses_*-functions.][sbaresearch / advisories public, latest commit, git stats, files, readme.md, wordpress plugin - broken link checker - reflected xss, vulnerability overview, vendor description, impact, vulnerability description, proof of concept, recommended countermeasures, timeline, references, credits]advisories/2019/sba-adv-20190913-02_wordpress_plugin_broken_link_checker at public · sbaresearch/advisories · github[advisories, sba-adv-20190913-02_wordpress_plugin_broken_link_checker, sba-adv-20190913-02_wordpress_plugin_broken_link_checker, history, identifier, type of vulnerability, software/product name, vendor, affected versions, fixed in version, cve id, cvssv3 vector, cvssv3 base score][product features mobile actions codespaces packages security code review issues integrations github sponsors customer stories, features, mobile, actions, codespaces, packages, security, code review, issues, integrations, github sponsors, customer stories, team, enterprise, explore explore github learn and contribute topics collections trending learning lab open source guides connect with others the readme project events community forum github education github stars program, explore github, learn and contribute, topics, collections, trending, learning lab, open source guides, connect with others, the readme project, events, community forum, github education, github stars program, marketplace, pricing plans compare plans contact sales education, plans, compare plans, contact sales, education, in this repository all github ↵ jump to ↵, no suggested jump to results, in this repository all github ↵ jump to ↵, in this organization all github ↵ jump to ↵, in this repository all github ↵ jump to ↵, notifications, fork 3, star 22, code, issues 0, pull requests 0, actions, projects 0, wiki, security, insights, code, issues, pull requests, actions, projects, wiki, security, insights, history, identifier : sba-adv-20190913-02, type of vulnerability : cross-site scripting, software/product name : broken link checker, vendor : managewp, affected versions : <= 1.11.8, fixed in version : -, cve id : cve-2019-16521, cvssv3 vector : av:n/ac:l/pr:n/ui:r/s:u/c:h/i:h/a:n, cvssv3 base score : 8.1 (high), 2019-09-05 identified the vulnerability, 2019-09-06 contacted managewp, 2019-09-09 contacted plugins@wordpress.org, 2019-09-10 response by managewp requesting more details, 2019-09-11 response by managewp that they are not actively maintaining the plugin and dont provide support, 2019-09-20 cve assigned, 2019-10-16 public disclosure, https://wordpress.org/plugins/broken-link-checker/, https://wordpress.org/plugins/broken-link-checker/#developers, tobias fink (sba research), © 2022 github, inc., terms, privacy, security, status, docs, contact github, pricing, api, training, blog, about]