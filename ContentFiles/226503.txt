[, , node.js is an open-source and cross-platform runtime environment built on chrome’s v8 javascript engine for executing javascript code outside of a browser. you need to recollect that nodejs isn’t a framework, and it’s not a programing language. it provides an event-driven, non-blocking (asynchronous) i/o and cross-platform runtime environment for building highly scalable server-side applications using javascript., , most people are confused and understand it’s a framework or a programing language. we often use node.js for building back-end services like apis, web app, or mobile app. it’s utilized in production by large companies like paypal, uber, netflix, walmart, etc.,  , why to learn nodejs?, example:, steps to run: first, download and install in your system and then use the following command to run your code., output: the output will dispaly on console screen., learn more about node.js:, complete references:, please write comments if you find anything incorrect, or you want to share more information about the topic discussed above, writing code in comment? please use ide.geeksforgeeks.org, generate link and share the link here.][table of contents, table of contents, nodejs, recent articles on node.js, , start your coding journey now!]nodejs - geeksforgeeks[why to learn nodejs?, example:, steps to run:, output:, learn more about node.js:, complete references:][courses for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more school courses school guide python programming learn to make apps explore more all courses, for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more, live dsa live classes system design java backend development full stack live explore more, dsa live classes, system design, java backend development, full stack live, explore more, self-paced dsa- self paced sde theory must-do coding questions explore more, dsa- self paced, sde theory, must-do coding questions, explore more, for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more, live competitive programming data structures with c++ data science explore more, competitive programming, data structures with c++, data science, explore more, self-paced dsa- self paced cip java / python / c++ explore more, dsa- self paced, cip, java / python / c++, explore more, school courses school guide python programming learn to make apps explore more, school guide, python programming, learn to make apps, explore more, all courses, tutorials practice ds & algo. must do questions dsa topic-wise dsa company-wise algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin ml & data science machine learning data science cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php software designs software design patterns system design tutorial school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, practice ds & algo. must do questions dsa topic-wise dsa company-wise, must do questions, dsa topic-wise, dsa company-wise, algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms, analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question, asymptotic analysis, worst, average and best cases, asymptotic notations, little o and little omega notations, lower and upper bound theory, analysis of loops, solving recurrences, amortized analysis, what does 'space complexity' mean ?, pseudo-polynomial algorithms, polynomial time approximation scheme, a time complexity question, searching algorithms, sorting algorithms, graph algorithms, pattern searching, geometric algorithms, mathematical, bitwise algorithms, randomized algorithms, greedy algorithms, dynamic programming, divide and conquer, backtracking, branch and bound, all algorithms, data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures, arrays, linked list, stack, queue, binary tree, binary search tree, heap, hashing, graph, advanced data structure, matrix, strings, all data structures, interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes, company preparation, top topics, practice company questions, interview experiences, experienced interviews, internship interviews, competititve programming, design patterns, system design tutorial, multiple choice quizzes, languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin, c, c++, java, python, c#, javascript, jquery, sql, php, scala, perl, go language, html, css, kotlin, ml & data science machine learning data science, machine learning, data science, cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering, mathematics, operating system, dbms, computer networks, computer organization and architecture, theory of computation, compiler design, digital logic, software engineering, gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs, gate computer science notes, last minute notes, gate cs solved papers, gate cs original papers and official keys, gate 2021 dates, gate cs 2021 syllabus, important topics for gate cs, web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php, html, css, javascript, angularjs, reactjs, nodejs, bootstrap, jquery, php, software designs software design patterns system design tutorial, software design patterns, system design tutorial, school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, school programming, mathematics number system algebra trigonometry statistics probability geometry mensuration calculus, number system, algebra, trigonometry, statistics, probability, geometry, mensuration, calculus, maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, class 12 notes, ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam, isro cs original papers and official keys, isro cs solved papers, isro cs syllabus for scientist/engineer exam, ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, ugc net cs notes paper ii, ugc net cs notes paper iii, ugc net cs solved papers, student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, campus ambassador program, school ambassador program, project, geek of the month, campus geek of the month, placement course, competititve programming, testimonials, student chapter, geek on the top, internship, careers, jobs apply for jobs post a job job-a-thon, apply for jobs, post a job, job-a-thon, events, , write come write articles for us and get featured practice learn and code with the best industry experts premium get access to ad-free content, doubt assistance and more! jobs come and find your dream job with us geeks digest quizzes geeks campus gblog articles ide campus mantri, geeks digest, quizzes, geeks campus, gblog articles, ide, campus mantri, , , home, saved videos, courses, , gblog, puzzles, what's new ?, data structures, algorithms, interview preparation, topic-wise practice, c++, java, python, competitive programming, machine learning, html, sde sheet, puzzles, gfg school, projects, nodejs, introduction to node.js, installation of node.js on linux, installation of node.js on windows, node.js basics, node.js first application, node.js repl (read, eval, print, loop), node.js | npm (node package manager), node.js global objects, node.js modules, node.js local module, node.js assert module, node.js assert() function, node.js assert.deepstrictequal() function, node.js assert.doesnotthrow() function, node.js assert.equal() function, node.js assert.iferror() function, node.js assert.match() function, node.js assert.notdeepequal() function, node.js assert complete reference, node.js buffers, node.js buffer.copy() method, node.js buffer.includes() method, node.js buffer.compare() method, node.js buffer.alloc() method, node.js buffer.equals() method, node.js buffer.subarray() method, node.js buffer.readintbe() method, node.js buffer.write() method, node.js buffer complete reference, node.js console, node.js console.assert() method, node.js console.clear() method, node.js console.count() method, node.js console.countreset() method, node.js console.debug() method, node.js console.dir() method, node.js console.error() function, node.js console.info() method, node.js console complete reference, node.js cipher.final() method, node.js cipher.update() method, node.js crypto.getciphers() method, node.js crypto.createdecipheriv() method, node.js crypto.createcipheriv() method, node.js crypto.getdiffiehellman() method, node.js crypto.pbkdf2() method, node.js crypto.createhash() method, node.js crypto.createhmac() method, node.js crypto complete reference, node.js dns, node.js dns.getservers() method, node.js dns.lookup() method, node.js dns.lookupservice() method, node.js dns.resolve() method, node.js dns.resolve4() method, node.js dns.resolve6() method, node.js dns.resolveany() method, node.js dns.resolvecname() method, node.js dns complete reference, node.js file system, node.js fs.readfile() method, node.js fs.exists() method, node.js fs.existssync() method, node.js fs.mkdir() method, node.js fs.truncate() method, node.js fs.renamesync() method, node.js fs.rmdir() method, node.js fs.stat() method, node.js file system complete reference, node.js timers module, import and export in node.js, node.js export module, node.js url() method, node.js urlsearchparams api, node.js globals complete reference, node.js http module, node.js new agent() method, node.js agent.createconnection() method, node.js agent.maxsockets method, node.js agent.maxfreesockets method, node.js http.clientrequest.abort() method, node.js http.clientrequest.connection property, node.js http.clientrequest.protocol method, node.js http.clientrequest.aborted property, node.js http module complete reference, node.js http2session close event, node.js http2session.state method, node.js http2session timeout event, node.js http2session.socket method, node.js http2session.remotesettings method, node.js http2session.destroyed method, node.js http2session.type method, node.js http2session.encrypted method, node.js http2session.localsettings method, node.js http2 complete reference, node.js os, node.js os.eol, node.js os.arch() method, node.js os.cpus() method, node.js os.endianness() method, node.js os.freemem() method, node.js os.getpriority() method, node.js os.homedir() method, node.js os.hostname() method, node.js os complete reference, node.js path.basename() method, node.js path.delimiter property, node.js path.dirname() method, node.js path.extname() method, node.js path.format() method, node.js path.isabsolute() method, node.js | path.join() method, node.js path.normalize() method, node.js path.parse() method, node.js path module complete reference, node.js process.arch property, node.js process.argv property, node.js process.argv0 property, node.js process.chdir() method, node.js process.config property, node.js process.cpuusage() method, node.js process.cwd() method, node.js process.debugport property, node.js process.env property, node.js process complete reference, node.js querystring.parse() method, node.js querystring.stringify() method, node.js query string complete reference, node.js streams, node.js stream writable.cork() method, node.js stream writable.writablelength property, node.js stream writable.writableobjectmode property, node.js stream writable.writablefinished property, node.js stream writable.destroy() method, node.js stream writable.writablecorked property, node.js stream writable.end() method, node.js stream.writable close event, node.js stream complete reference, node.js stringdecoder.end() method, node.js stringdecoder.write() method, node.js string decoder complete reference, node.js immediate timer class, node.js timeout timer class, node.js timers complete reference, node.js tls.createserver() method, node.js tls.rootcertificates() method, node.js tls.getciphers() method, node.js request.writableended property, node.js tlssocket.address() method, node.js tlssocket.authorized property, node.js tlssocket.authorizationerror property, node.js tlssocket.disablerenegotiation() method, node.js tls/ssl complete reference, node.js socket.address() method, node.js socket.addmembership() method, node.js socket.bind() method, node.js socket.connect() method, node.js socket.dropmembership() method, node.js socket.getsendbuffersize() method, node.js socket.getrecvbuffersize() method, node.js socket.setttl() method, node.js socket.setmulticastttl() method, node.js udp/datagram complete reference, node.js url.hash api, node.js url.host api, node.js url.origin api, node.js url.username api, node.js url.search api, node.js url.port api, node.js url.pathname api, node.js url.password api, node.js url complete reference, node.js utility module, node.js util.callbackify() method, node.js util.debuglog() method, node.js util.format() method, node.js util.inherits() method, node.js util.formatwithoptions() method, node.js util.inspect() method, node.js util.promisify() method, node.js util.isdeepstrictequal() method, node.js utility complete reference, node.js v8.cacheddataversiontag() method, node.js v8.getheapspacestatistics() method, node.js v8.getheapstatistics() method, node.js v8.serialize() method, node.js v8.deserialize() method, node.js v8.serializer.writeheader() method, node.js v8.serializer.writevalue() method, node.js v8.serializer.releasebuffer() method, node.js v8.serializer.writeuint32() method, node.js v8 complete reference, node.js constructor: new vm.script() method, node.js script.createcacheddata() method, node.js script.runincontext() method, node.js script.runinnewcontext() method, node.js | script.runinthiscontext() method, node.js vm.createcontext() method, node.js vm.runinthiscontext() method, node.js vm.iscontext() method, node.js vm.runincontext() method, node.js vm complete reference, node.js zlib.constants property, node.js zlib.createbrotlicompress() method, node.js zlib.createbrotlidecompress() method, node.js zlib.createunzip() method, node.js zlib.createdeflateraw() method, node.js zlib.creategunzip() method, node.js zlib.createinflateraw() method, node.js zlib.createdeflate() method, node.js zlib.createinflate() method, node.js zlib complete reference, why node.js ?, how to set node.js console font color ?, how to read command line arguments in node.js ?, what is the difference between –save and –save-dev in node.js ?, essence of node.js, reading environment variables from node.js, how to install the previous version of node.js and npm ?, how to create a directory using node.js ?, node.js questions complete reference, node.js examples, nodejs, introduction to node.js, installation of node.js on linux, installation of node.js on windows, node.js basics, node.js first application, node.js repl (read, eval, print, loop), node.js | npm (node package manager), node.js global objects, node.js modules, node.js local module, node.js assert module, node.js assert() function, node.js assert.deepstrictequal() function, node.js assert.doesnotthrow() function, node.js assert.equal() function, node.js assert.iferror() function, node.js assert.match() function, node.js assert.notdeepequal() function, node.js assert complete reference, node.js buffers, node.js buffer.copy() method, node.js buffer.includes() method, node.js buffer.compare() method, node.js buffer.alloc() method, node.js buffer.equals() method, node.js buffer.subarray() method, node.js buffer.readintbe() method, node.js buffer.write() method, node.js buffer complete reference, node.js console, node.js console.assert() method, node.js console.clear() method, node.js console.count() method, node.js console.countreset() method, node.js console.debug() method, node.js console.dir() method, node.js console.error() function, node.js console.info() method, node.js console complete reference, node.js cipher.final() method, node.js cipher.update() method, node.js crypto.getciphers() method, node.js crypto.createdecipheriv() method, node.js crypto.createcipheriv() method, node.js crypto.getdiffiehellman() method, node.js crypto.pbkdf2() method, node.js crypto.createhash() method, node.js crypto.createhmac() method, node.js crypto complete reference, node.js dns, node.js dns.getservers() method, node.js dns.lookup() method, node.js dns.lookupservice() method, node.js dns.resolve() method, node.js dns.resolve4() method, node.js dns.resolve6() method, node.js dns.resolveany() method, node.js dns.resolvecname() method, node.js dns complete reference, node.js file system, node.js fs.readfile() method, node.js fs.exists() method, node.js fs.existssync() method, node.js fs.mkdir() method, node.js fs.truncate() method, node.js fs.renamesync() method, node.js fs.rmdir() method, node.js fs.stat() method, node.js file system complete reference, node.js timers module, import and export in node.js, node.js export module, node.js url() method, node.js urlsearchparams api, node.js globals complete reference, node.js http module, node.js new agent() method, node.js agent.createconnection() method, node.js agent.maxsockets method, node.js agent.maxfreesockets method, node.js http.clientrequest.abort() method, node.js http.clientrequest.connection property, node.js http.clientrequest.protocol method, node.js http.clientrequest.aborted property, node.js http module complete reference, node.js http2session close event, node.js http2session.state method, node.js http2session timeout event, node.js http2session.socket method, node.js http2session.remotesettings method, node.js http2session.destroyed method, node.js http2session.type method, node.js http2session.encrypted method, node.js http2session.localsettings method, node.js http2 complete reference, node.js os, node.js os.eol, node.js os.arch() method, node.js os.cpus() method, node.js os.endianness() method, node.js os.freemem() method, node.js os.getpriority() method, node.js os.homedir() method, node.js os.hostname() method, node.js os complete reference, node.js path.basename() method, node.js path.delimiter property, node.js path.dirname() method, node.js path.extname() method, node.js path.format() method, node.js path.isabsolute() method, node.js | path.join() method, node.js path.normalize() method, node.js path.parse() method, node.js path module complete reference, node.js process.arch property, node.js process.argv property, node.js process.argv0 property, node.js process.chdir() method, node.js process.config property, node.js process.cpuusage() method, node.js process.cwd() method, node.js process.debugport property, node.js process.env property, node.js process complete reference, node.js querystring.parse() method, node.js querystring.stringify() method, node.js query string complete reference, node.js streams, node.js stream writable.cork() method, node.js stream writable.writablelength property, node.js stream writable.writableobjectmode property, node.js stream writable.writablefinished property, node.js stream writable.destroy() method, node.js stream writable.writablecorked property, node.js stream writable.end() method, node.js stream.writable close event, node.js stream complete reference, node.js stringdecoder.end() method, node.js stringdecoder.write() method, node.js string decoder complete reference, node.js immediate timer class, node.js timeout timer class, node.js timers complete reference, node.js tls.createserver() method, node.js tls.rootcertificates() method, node.js tls.getciphers() method, node.js request.writableended property, node.js tlssocket.address() method, node.js tlssocket.authorized property, node.js tlssocket.authorizationerror property, node.js tlssocket.disablerenegotiation() method, node.js tls/ssl complete reference, node.js socket.address() method, node.js socket.addmembership() method, node.js socket.bind() method, node.js socket.connect() method, node.js socket.dropmembership() method, node.js socket.getsendbuffersize() method, node.js socket.getrecvbuffersize() method, node.js socket.setttl() method, node.js socket.setmulticastttl() method, node.js udp/datagram complete reference, node.js url.hash api, node.js url.host api, node.js url.origin api, node.js url.username api, node.js url.search api, node.js url.port api, node.js url.pathname api, node.js url.password api, node.js url complete reference, node.js utility module, node.js util.callbackify() method, node.js util.debuglog() method, node.js util.format() method, node.js util.inherits() method, node.js util.formatwithoptions() method, node.js util.inspect() method, node.js util.promisify() method, node.js util.isdeepstrictequal() method, node.js utility complete reference, node.js v8.cacheddataversiontag() method, node.js v8.getheapspacestatistics() method, node.js v8.getheapstatistics() method, node.js v8.serialize() method, node.js v8.deserialize() method, node.js v8.serializer.writeheader() method, node.js v8.serializer.writevalue() method, node.js v8.serializer.releasebuffer() method, node.js v8.serializer.writeuint32() method, node.js v8 complete reference, node.js constructor: new vm.script() method, node.js script.createcacheddata() method, node.js script.runincontext() method, node.js script.runinnewcontext() method, node.js | script.runinthiscontext() method, node.js vm.createcontext() method, node.js vm.runinthiscontext() method, node.js vm.iscontext() method, node.js vm.runincontext() method, node.js vm complete reference, node.js zlib.constants property, node.js zlib.createbrotlicompress() method, node.js zlib.createbrotlidecompress() method, node.js zlib.createunzip() method, node.js zlib.createdeflateraw() method, node.js zlib.creategunzip() method, node.js zlib.createinflateraw() method, node.js zlib.createdeflate() method, node.js zlib.createinflate() method, node.js zlib complete reference, why node.js ?, how to set node.js console font color ?, how to read command line arguments in node.js ?, what is the difference between –save and –save-dev in node.js ?, essence of node.js, reading environment variables from node.js, how to install the previous version of node.js and npm ?, how to create a directory using node.js ?, node.js questions complete reference, node.js examples, last updated : 31 jan, 2022, easy scalability, real time web apps, fast suite, easy to learn and code, advantage of caching, data streaming, hosting, corporate support, introduction to nodejs, node.js npm (node package manager), installation of node.js on windows, installation of node.js on linux, node.js assert complete reference, node.js buffer complete reference, node.js console complete reference, node.js crypto complete reference, node.js dns complete reference, node.js file system complete reference, node.js globals complete reference, node.js http module complete reference, node.js http2 complete reference, node.js os complete reference, node.js path module complete reference, node.js process complete reference, node.js query string complete reference, node.js stream complete reference, node.js string decoder complete reference, node.js timers complete reference, node.js tls/ssl complete reference, node.js udp/datagram complete reference, node.js url complete reference, node.js utility complete reference, node.js v8 complete reference, node.js vm complete reference, node.js zlib complete reference, node.js questions complete reference, python program for breadth first search or bfs for a graph, best time to buy and sell stock, must do coding questions for product based companies, axios in react: a guide for beginners, implementation of bit stuffing and bit destuffing, how to calculate moving average in a pandas dataframe?, session vs token based authentication, difference between edge computing and fog computing, how to insert a pandas dataframe to an existing postgresql table?, what is "network id" and "host id" in ip addresses?, company, about us, careers, in media, contact us, privacy policy, copyright policy, learn, algorithms, data structures, sde cheat sheet, machine learning, cs subjects, video tutorials, news, top news, technology, work & career, business, finance, lifestyle, languages, python, java, cpp, golang, c#, sql, web development, web tutorials, django tutorial, html, css, javascript, bootstrap, contribute, write an article, improve an article, pick topics to write, write interview experience, internships, video internship]