[interactive canvas is a framework built on google assistant that allows developers to add visual, immersive experiences to conversational actions. this visual experience is an interactive web app that assistant sends as a response to the user in conversation. unlike rich responses that exist in-line in an assistant conversation, the interactive canvas web app renders as a full-screen web view., use interactive canvas if you want to do any of the following in your action:, interactive canvas is currently available on the following devices:, an action that uses interactive canvas consists of two main components:, users interacting with an interactive canvas action have a back-and-forth conversation with google assistant to fulfill their goal. however, for interactive canvas, the bulk of this conversation occurs within the context of your web app. when connecting your conversational action to your web app, you must include the interactive canvas api in your web app code., in addition to including the interactive canvas library, you must return the canvas response type in your conversation to open your web app on the user's device. you can also use a canvas response to update your web app based on the user's input., to illustrate how interactive canvas works, imagine a hypothetical action called cool colors that changes the device screen color to a color the user specifies. after the user invokes the action, the following flow happens:, when building an interactive canvas action, you can choose between two fulfillment implementation paths: server fulfillment or client fulfillment. with server fulfillment, you primarily use apis that require a webhook. with client fulfillment, you can use client-side apis and, if needed, apis that require a webhook for non-canvas features (such as account linking)., if you choose to build with server webhook fulfillment in the project creation stage, you must deploy a webhook to handle the conversational logic and client-side javascript to update the web app and manage communication between the two., if you choose to build with client fulfillment (currently available in developer preview), you can use new client-side apis to build your action’s logic exclusively in the web app, which simplifies the development experience, reduces latency between conversational turns, and enables you to use on-device capabilities. if needed, you can also switch to server-side logic from the client., for more information about client-side capabilities, see build with client-side fulfillment., to learn how to build a web app for interactive canvas, see web apps., to see the code for a complete interactive canvas action, see the sample on github., except as otherwise noted, the content of this page is licensed under the creative commons attribution 4.0 license, and code samples are licensed under the apache 2.0 license. for details, see the google developers site policies. java is a registered trademark of oracle and/or its affiliates., last updated 2021-09-21 utc.][interactive canvas, supported devices, how it works, client-side and server-side fulfillment, next steps, more information, programs, developer consoles]interactive canvas  |  conversational actions  |  google developers[note:, note:, conversational action:, web app:, interactive canvas api, interactive canvas library:, canvas:, warning:, server webhook fulfillment, client fulfillment][google assistant, ways to build, overview learn all the ways to build actions., extend your mobile app provide faster ways for users to access your android app via assistant., build rich and natural conversations build custom voice and visual experiences for smart devices., enhance your web presence present your content in rich ways for google search and assistant., connect your smart home devices let users control lights, doors, coffee machines, and many other devices., get inspired, why build help users find answers and get things done with google assistant., reach 1 billion devices help users at home, on the go, and in the car—on over 1 billion devices., build games build fun, voice-enabled games for smart displays., explore all actions see what others are building for google assistant., get discovered publish your actions to the assistant directory., mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, language, english, bahasa indonesia, deutsch, español, français, português – brasil, русский, 中文 – 简体, 日本語, 한국어, conversational actions, google assistant, actions on google more, more, docs more guides reference codelabs samples, more, guides, reference, codelabs, samples, community, support, get started, overview, quick start, fundamentals, actions, intents, types, scenes overview condition syntax, overview, condition syntax, prompts overview simple rich selection media ssml ssml beta features ssml phonemes, overview, simple, rich, selection, media, ssml, ssml beta features, ssml phonemes, build, overview, actions projects, invocation models overview main invocation deep link invocations built-in intents, overview, main invocation, deep link invocations, built-in intents, conversation models, webhooks, interactive canvas overview prompts web apps configure your web app continue building with client or server-side fulfillment implement callbacks debug your web app design guidelines api reference, overview, prompts, web apps configure your web app continue building with client or server-side fulfillment implement callbacks debug your web app, configure your web app, continue building with client or server-side fulfillment, implement callbacks, debug your web app, design guidelines, api reference, storage overview session storage user storage home storage, overview, session storage, user storage, home storage, testing, nlu best practices, add more features, user engagement, account linking, localization, transactions, permissions, deploy and manage, pre-launch checklists, submit your project, actions console overview, other workflows, dialogflow, legacy actions sdk, ways to build, overview, extend your mobile app, build rich and natural conversations, enhance your web presence, connect your smart home devices, get inspired, why build, reach 1 billion devices, build games, explore all actions, get discovered, mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, home, products, google assistant, docs, conversational actions, create full-screen visuals, create custom animations and transitions, do data visualization, create custom layouts and guis, smart displays, android mobile devices, conversational action: an action that uses a conversational interface to fulfill user requests. you can use either actions builder or the actions sdk to build your conversation., web app: a front-end web app with customized visuals that your action sends as a response to users during a conversation. you build the web app with web technologies like html, javascript, and css., interactive canvas library: a javascript library that you include in the web app to enable communication between the web app and your conversational action using an api. for more information, see the interactive canvas api documentation., canvas: a response that contains a url of the web app and data to pass it. actions builder can automatically populate the canvas response with the matched intent and current scene data to update the web app. alternatively, you can send a canvas response from a webhook using the node.js fulfillment library. for more information, see canvas prompts., the user says, "turn the screen blue." to the assistant device., the actions on google platform routes the user's request to your conversational logic to match an intent., the platform matches the intent with the action's scene, which triggers an event and sends a canvas response to the device. the device loads a web app using a url provided in the response (if it has not yet been loaded)., when the web app loads, it registers callbacks with the interactive canvas api. if the canvas response contains a data field, the object value of the data field is passed into the registered onupdate callback of the web app. in this example, the conversational logic sends a canvas response with a data field that includes a variable with the value of blue., upon receiving the data value of the canvas response, the onupdate callback can execute custom logic for your web app and make the defined changes. in this example, the onupdate callback reads the color from data and turns the screen blue., more information google assistant why build for the assistant? how google assistant works assistant directory support community, google assistant, why build for the assistant?, how google assistant works, assistant directory, support, community, programs women techmakers google developer groups google developers experts accelerators google developer student clubs, women techmakers, google developer groups, google developers experts, accelerators, google developer student clubs, developer consoles google api console google cloud platform console google play console firebase console actions on google console cast sdk developer console chrome web store dashboard, google api console, google cloud platform console, google play console, firebase console, actions on google console, cast sdk developer console, chrome web store dashboard, android, chrome, firebase, google cloud platform, all products, terms, privacy, sign up for the google developers newsletter subscribe, language, english, bahasa indonesia, deutsch, español, français, português – brasil, русский, 中文 – 简体, 日本語, 한국어]