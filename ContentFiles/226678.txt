[, this page contains ugc net computer science preparation notes / tutorials on mathematics, algorithms, programming and data structures, operating systems, database management systems (dbms), computer networks, computer organization and architecture, theory of computation, compiler design, digital logic, and software engineering listed according to paper-ii of the ugc net cs syllabus., discrete structures :, programming in c and c++ :, unix:, operating systems (with case study of unix) :, computer networks :, relational database design and sql :, computer arithmetic :, system software and compilers :, software engineering :, current trends and technology :, please write comments if you find anything incorrect, or you want to share more information about the topic discussed above!][ugc net cs notes according to syllabus of paper-ii, other useful links :, , start your coding journey now!]ugc net cs notes according to syllabus of paper-ii - geeksforgeeks[according to paper-ii of the ugc net cs syllabus.][courses for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more school courses school guide python programming learn to make apps explore more all courses, for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more, live dsa live classes system design java backend development full stack live explore more, dsa live classes, system design, java backend development, full stack live, explore more, self-paced dsa- self paced sde theory must-do coding questions explore more, dsa- self paced, sde theory, must-do coding questions, explore more, for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more, live competitive programming data structures with c++ data science explore more, competitive programming, data structures with c++, data science, explore more, self-paced dsa- self paced cip java / python / c++ explore more, dsa- self paced, cip, java / python / c++, explore more, school courses school guide python programming learn to make apps explore more, school guide, python programming, learn to make apps, explore more, all courses, tutorials practice ds & algo. must do questions dsa topic-wise dsa company-wise algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin ml & data science machine learning data science cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php software designs software design patterns system design tutorial school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, practice ds & algo. must do questions dsa topic-wise dsa company-wise, must do questions, dsa topic-wise, dsa company-wise, algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms, analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question, asymptotic analysis, worst, average and best cases, asymptotic notations, little o and little omega notations, lower and upper bound theory, analysis of loops, solving recurrences, amortized analysis, what does 'space complexity' mean ?, pseudo-polynomial algorithms, polynomial time approximation scheme, a time complexity question, searching algorithms, sorting algorithms, graph algorithms, pattern searching, geometric algorithms, mathematical, bitwise algorithms, randomized algorithms, greedy algorithms, dynamic programming, divide and conquer, backtracking, branch and bound, all algorithms, data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures, arrays, linked list, stack, queue, binary tree, binary search tree, heap, hashing, graph, advanced data structure, matrix, strings, all data structures, interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes, company preparation, top topics, practice company questions, interview experiences, experienced interviews, internship interviews, competititve programming, design patterns, system design tutorial, multiple choice quizzes, languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin, c, c++, java, python, c#, javascript, jquery, sql, php, scala, perl, go language, html, css, kotlin, ml & data science machine learning data science, machine learning, data science, cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering, mathematics, operating system, dbms, computer networks, computer organization and architecture, theory of computation, compiler design, digital logic, software engineering, gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs, gate computer science notes, last minute notes, gate cs solved papers, gate cs original papers and official keys, gate 2021 dates, gate cs 2021 syllabus, important topics for gate cs, web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php, html, css, javascript, angularjs, reactjs, nodejs, bootstrap, jquery, php, software designs software design patterns system design tutorial, software design patterns, system design tutorial, school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, school programming, mathematics number system algebra trigonometry statistics probability geometry mensuration calculus, number system, algebra, trigonometry, statistics, probability, geometry, mensuration, calculus, maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, class 12 notes, ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam, isro cs original papers and official keys, isro cs solved papers, isro cs syllabus for scientist/engineer exam, ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, ugc net cs notes paper ii, ugc net cs notes paper iii, ugc net cs solved papers, student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, campus ambassador program, school ambassador program, project, geek of the month, campus geek of the month, placement course, competititve programming, testimonials, student chapter, geek on the top, internship, careers, jobs apply for jobs post a job job-a-thon, apply for jobs, post a job, job-a-thon, events, , write come write articles for us and get featured practice learn and code with the best industry experts premium get access to ad-free content, doubt assistance and more! jobs come and find your dream job with us geeks digest quizzes geeks campus gblog articles ide campus mantri, geeks digest, quizzes, geeks campus, gblog articles, ide, campus mantri, , , home, saved videos, courses, , gblog, puzzles, what's new ?, data structures, algorithms, interview preparation, topic-wise practice, c++, java, python, competitive programming, machine learning, html, sde sheet, puzzles, gfg school, projects, last updated : 22 nov, 2021, set theory : sets, relations, functions. pigeonhole principle, inclusion-exclusion principle, equivalence and partial orderings elementary counting techniques, probability. measure(s) for information and mutual information, sets, relations, functions. pigeonhole principle, inclusion-exclusion principle, equivalence and partial orderings, elementary counting techniques, probability. measure(s) for information and mutual information, group theory : finite fields and error correcting / detecting codes, finite fields and error correcting / detecting codes, graph theory : definition, walks, paths, trails, connected graphs, regular and bipartite graphs, cycles and circuits tree and rooted tree. spanning trees eccentricity of a vertex radius and diameter of a graph. central graphs. centre(s) of a tree hamiltonian and eulerian graphs, planar graphs, definition, walks, paths, trails, connected graphs, regular and bipartite graphs, cycles and circuits, tree and rooted tree. spanning trees, eccentricity of a vertex radius and diameter of a graph. central graphs. centre(s) of a tree, hamiltonian and eulerian graphs, planar graphs, comptutability : models of computation-finite automata, pushdown automata non – determinism and nfa, dpda and pdas and languages accepted by these structures grammars, languages, non – computability and examples of non – computable problems., models of computation-finite automata, pushdown automata, non – determinism and nfa, dpda and pdas and languages accepted by these structures, grammars, languages, non – computability and examples of non – computable problems., set theory : introduction of set theory set operations (set theory) power set and its properties introduction and types of relations representations of matrices and graphs in relations closure of relations and equivalence relations classes (injective, surjective, bijective) of functions total number of possible functions number of possible equivalence relations inclusion-exclusion and its various applications algebraic structure partial orders combinatorics basics the pigeonhole principle pnc and binomial coefficients generalized pnc set 1 generalized pnc set 2 random variables mean, variance and standard deviation conditional probability bayes’s theorem probability distributions set 1 (uniform distribution) probability distributions set 2 (exponential distribution) probability distributions set 3 (normal distribution) probability distributions set 4 (binomial distribution) probability distributions set 5 (poisson distribution), introduction of set theory, set operations (set theory), power set and its properties, introduction and types of relations, representations of matrices and graphs in relations, closure of relations and equivalence relations, classes (injective, surjective, bijective) of functions, total number of possible functions, number of possible equivalence relations, inclusion-exclusion and its various applications, algebraic structure, partial orders, combinatorics basics, the pigeonhole principle, pnc and binomial coefficients, generalized pnc set 1, generalized pnc set 2, random variables, mean, variance and standard deviation, conditional probability, bayes’s theorem, probability distributions set 1 (uniform distribution), probability distributions set 2 (exponential distribution), probability distributions set 3 (normal distribution), probability distributions set 4 (binomial distribution), probability distributions set 5 (poisson distribution), group theory : hamming code, hamming code, graph theory : graph theory basics – set 1 graph theory basics – set 2 number of nodes and height of binary tree graph isomorphisms and connectivity planar graphs and graph coloring euler and hamiltonian paths independent sets, covering and matching matching (graph theory), graph theory basics – set 1, graph theory basics – set 2, number of nodes and height of binary tree, graph isomorphisms and connectivity, planar graphs and graph coloring, euler and hamiltonian paths, independent sets, covering and matching, matching (graph theory), comptutability : introduction of theory of computation finite automata introduction chomsky hierarchy regular expressions, regular grammar and regular languages pumping lemma designing finite automata from regular expression nfa with epsilon move to dfa conversion conversion from nfa to dfa minimization of dfa regular expression from finite automata union & intersection of regular languages with cfl mealy and moore machines dfa of a string with at least two 0’s and at least two 1’s star height of regular expression/language pushdown automata pushdown automata acceptance by final state construct pushdown automata for given languages construct pushdown automata for all length palindrome closure properties of context free languages ambiguity in context free grammar and context free languages simplifying context free grammars converting context free grammar to chomsky normal form converting context free grammar to greibach normal form relationship between grammar and language, introduction of theory of computation, finite automata introduction, chomsky hierarchy, regular expressions, regular grammar and regular languages, pumping lemma, designing finite automata from regular expression, nfa with epsilon move to dfa conversion, conversion from nfa to dfa, minimization of dfa, regular expression from finite automata, union & intersection of regular languages with cfl, mealy and moore machines, dfa of a string with at least two 0’s and at least two 1’s, star height of regular expression/language, pushdown automata, pushdown automata acceptance by final state, construct pushdown automata for given languages, construct pushdown automata for all length palindrome, closure properties of context free languages, ambiguity in context free grammar and context free languages, simplifying context free grammars, converting context free grammar to chomsky normal form, converting context free grammar to greibach normal form, relationship between grammar and language, set theory : set theory combinatorics combinatorics | set 1 combinatorics | set 2 probability, set theory, combinatorics, combinatorics | set 1, combinatorics | set 2, probability, group theory :, , graph theory : graph theory, graph theory, comptutability : regular languages and finite automata practice problems on finite automata practice problems on finite automata | set 2 context free languages and push-down automata recursively enumerable sets and turing machines automata theory | set 1 automata theory | set 2 automata theory | set 3 automata theory | set 4 automata theory | set 5 automata theory | set 6, regular languages and finite automata, practice problems on finite automata, practice problems on finite automata | set 2, context free languages and push-down automata, recursively enumerable sets and turing machines, automata theory | set 1, automata theory | set 2, automata theory | set 3, automata theory | set 4, automata theory | set 5, automata theory | set 6, video – nptel discrete mathematics lectures, mit – lecture notes, book – probability, notes – probability, video – nptel toc lectures, video – toc lectures by ravindrababu ravula, notes – nfa and dfa, notes – non regular language, notes – pda, data structures : data, information, definition of data structure. arrays, stacks, queues, linked lists, trees, graphs, priority queues and heaps, data, information, definition of data structure. arrays, stacks, queues, linked lists, trees, graphs, priority queues and heaps, file structures : fields, records and files. sequential, direct, index-sequential and relative files. hashing, inverted lists and multi – lists. b trees and b+ trees, fields, records and files. sequential, direct, index-sequential and relative files. hashing, inverted lists and multi – lists. b trees and b+ trees, data structures : array stack queue linked list binary tree binary search tree heap tree graph data structure, array, stack, queue, linked list, binary tree, binary search tree, heap tree, graph data structure, file structures : indexing in databases | set 1 file organization – set 1 file organization – set 2 (hashing in dbms) file organization – set 3 b-tree | set 1 (introduction) b-tree | set 2 (insert) b-tree | set 3 (delete) database file indexing – b+ tree (introduction), indexing in databases | set 1, file organization – set 1, file organization – set 2 (hashing in dbms), file organization – set 3, b-tree | set 1 (introduction), b-tree | set 2 (insert), b-tree | set 3 (delete), database file indexing – b+ tree (introduction), data structures : array stack queue linked list heap binary trees binary search trees balanced binary search trees tree traversals graph graph traversals, array, stack, queue, linked list, heap, binary trees, binary search trees, balanced binary search trees, tree traversals, graph, graph traversals, file structures : file structures (sequential files, indexing, b and b+ trees) practice questions on b and b+ trees, file structures (sequential files, indexing, b and b+ trees), practice questions on b and b+ trees, data structures : video – nptel lectures video – geeksforgeeks videos mit – introduction to algorithms book – clrs solutions manual visual – data structures and algorithms, video – nptel lectures, video – geeksforgeeks videos, mit – introduction to algorithms, book – clrs solutions manual, visual – data structures and algorithms, file structures : notes – indexing visual – b tree notes – b+ tree visual – b+ tree, notes – indexing, visual – b tree, notes – b+ tree, visual – b+ tree, programming in c : elements of c – tokens, identifiers, data types in c control structures in c. sequence, selection and iteration(s) structured data types in c-arrays, struct, union, string, and pointers, elements of c – tokens, identifiers, data types in c, control structures in c. sequence, selection and iteration(s), structured data types in c-arrays, struct, union, string, and pointers, o – o programming concepts : class, object, instantiation inheritance, polymorphism and overloading, class, object, instantiation, inheritance, polymorphism and overloading, c++ programming : elements of c++ – tokens, identifiers variables and constants, datatypes, operators, control statements functions parameter passing. class and objects. constructors and destructors overloading, inheritance, templates, exception handling, elements of c++ – tokens, identifiers, variables and constants, datatypes, operators, control statements, functions parameter passing. class and objects. constructors and destructors, overloading, inheritance, templates, exception handling, programming in c : c programming language, c programming language, o – o programming concepts : basic concepts of object oriented programming using c++ introduction to object oriented programming in javascript commonly asked oop interview questions | set 1 object oriented programming | set 1 c++ classes and objects object oriented programming(oop), basic concepts of object oriented programming using c++, introduction to object oriented programming in javascript, commonly asked oop interview questions | set 1, object oriented programming | set 1, c++ classes and objects, object oriented programming(oop), c++ programming : why c++ is partially object oriented language? c++ programming language, why c++ is partially object oriented language?, c++ programming language, programming in c : principle of programming languages | set 1 c programming mock tests c language | set 1 c language | set 2 c language | set 3 c language | set 4 c language | set 5 c language | set 6 c language | set 7 c language | set 8 c language | set 9 c language | set 10, principle of programming languages | set 1, c programming mock tests, c language | set 1, c language | set 2, c language | set 3, c language | set 4, c language | set 5, c language | set 6, c language | set 7, c language | set 8, c language | set 9, c language | set 10, o – o programming concepts : oop concepts class and object, oop concepts, class and object, c++ programming : c++ programming mock tests c++ programming multiple choice questions, c++ programming mock tests, c++ programming multiple choice questions, video – nptel c lectures, video – nptel problem solving in c lectures, video – nptel c++ lectures, video – nptel c++ lectures-2, main functions of operating systems multiprogramming, multiprocessing, and multitasking, memory management: virtual memory, paging, fragmentation, concurrent processing: mutual exclusion. critical regions, lock and unlock, scheduling: cpu scheduling, i / o scheduling, resource scheduling. deadlock and scheduling algorithms. banker’s algorithm for deadlock handling, the unix system: file system, process management, bourne shell, shell variables, command line programming, filters and commands: pr, head, tail, cut, paste, sort, uniq, tr, join, etc., grep, egrep, fgrep, etc., sed, awk, etc., system calls (like): creat, open, close, read, write, iseek, link, unlink, stat, fstat, umask, chmod, exec, fork, wait, system, introduction : what happens when we turn on computer? introduction of operating system – set 1 types of operating systems dual mode operations in os difference between 32-bit and 64-bit operating systems real time systems process management | introduction states of a process process table and process control block (pcb) process scheduler difference between dispatcher and scheduler introduction of system call thread threads and its types multi threading models benefits of multithreading process-based and thread-based multitasking user level thread vs kernel level thread microkernel monolithic kernel and key differences from microkernel difference between multitasking, multithreading and multiprocessing, what happens when we turn on computer?, introduction of operating system – set 1, types of operating systems, dual mode operations in os, difference between 32-bit and 64-bit operating systems, real time systems, process management | introduction, states of a process, process table and process control block (pcb), process scheduler, difference between dispatcher and scheduler, introduction of system call, thread, threads and its types, multi threading models, benefits of multithreading, process-based and thread-based multitasking, user level thread vs kernel level thread, microkernel, monolithic kernel and key differences from microkernel, difference between multitasking, multithreading and multiprocessing, cpu scheduling : program for fcfs scheduling | set 1 program for fcfs scheduling | set 2 convoy effect in operating systems program for preemptive priority cpu scheduling program for round robin scheduling | set 1 shortest job first (or sjf) scheduling | set 1 (non- preemptive) shortest job first (sjf) scheduling | set 2 (preemptive) shortest job first scheduling with predicted burst time highest response ratio next (hrrn) scheduling program for priority scheduling | set 1 priority scheduling with different arrival time – set 2 multilevel queue scheduling multilevel feedback queue scheduling multiple-processor scheduling measure the time spent in context switch? starvation and aging in operating systems, program for fcfs scheduling | set 1, program for fcfs scheduling | set 2, convoy effect in operating systems, program for preemptive priority cpu scheduling, program for round robin scheduling | set 1, shortest job first (or sjf) scheduling | set 1 (non- preemptive), shortest job first (sjf) scheduling | set 2 (preemptive), shortest job first scheduling with predicted burst time, highest response ratio next (hrrn) scheduling, program for priority scheduling | set 1, priority scheduling with different arrival time – set 2, multilevel queue scheduling, multilevel feedback queue scheduling, multiple-processor scheduling, measure the time spent in context switch?, starvation and aging in operating systems, concurrent processing : process synchronization | introduction critical section inter process communication semaphores in operating system mutex vs semaphore lock variable synchronization mechanism, process synchronization | introduction, critical section, inter process communication, semaphores in operating system, mutex vs semaphore, lock variable synchronization mechanism, deadlock : process management | deadlock introduction deadlock prevention and avoidance deadlock detection and recovery resource allocation graph (rag) banker’s algorithm banker’s algorithm | set 1 (safety algorithm) banker’s algorithm : print all the safe state deadlock detection algorithm, process management | deadlock introduction, deadlock prevention and avoidance, deadlock detection and recovery, resource allocation graph (rag), banker’s algorithm, banker’s algorithm | set 1 (safety algorithm), banker’s algorithm : print all the safe state, deadlock detection algorithm, memory management : memory management – mapping virtual address to physical addresses memory management | partition allocation method paging page table entries inverted page table segmentation buddy system – memory allocation technique allocating kernel memory (buddy system and slab system) virtual memory secondary memory – hard disk drive page fault handling page replacement algorithms techniques to handle thrashing overlays in memory management swap space, memory management – mapping virtual address to physical addresses, memory management | partition allocation method, paging, page table entries, inverted page table, segmentation, buddy system – memory allocation technique, allocating kernel memory (buddy system and slab system), virtual memory, secondary memory – hard disk drive, page fault handling, page replacement algorithms, techniques to handle thrashing, overlays in memory management, swap space, unix : unix, unix, introduction : process management, process management, cpu scheduling : cpu scheduling, cpu scheduling, concurrent processing : concurrency and synchronization, concurrency and synchronization, deadlock : deadlock, deadlock, memory management : memory management virtual memory, memory management, virtual memory, unix : unix, unix, video – nptel lectures, video – lectures by ravindrababu ravula, notes – virginiatech univ. web resource, notes – galvin lecture slides, book – william stallings practice problems and solutions, notes – virtual memory and cache, notes – segmentation and paging, notes – some interesting problems on virtual memory, network fundamentals : local area networks (lan), metropolitan area networks (man), wide area networks (wan), wireless networks, inter networks, local area networks (lan), metropolitan area networks (man),, wide area networks (wan), wireless networks, inter networks, reference models : the osi model, tcp / ip model, the osi model, tcp / ip model, data communication : channel capacity. transmission media-twisted pair, coaxial cables, fibre – optic cables, wireless transmission-radio, microwave, infrared and millimeter waves. lightwave transmission. thelephones – local loop, trunks, multiplexing, switching, narrowband isdn, broadband isdn, atm, high speed lans. cellular radio. communication satellites-geosynchronous and low-orbit, channel capacity. transmission media-twisted pair, coaxial cables, fibre – optic cables,, wireless transmission-radio, microwave, infrared and millimeter waves. lightwave transmission., thelephones – local loop, trunks, multiplexing, switching,, narrowband isdn, broadband isdn, atm, high speed lans. cellular radio., communication satellites-geosynchronous and low-orbit, internetworking : switch / hub, bridge, router, gateways, concatenated virtual circuits, tunnelling, fragmentation, firewalls, switch / hub, bridge, router, gateways,, concatenated virtual circuits, tunnelling, fragmentation, firewalls, routing : virtual circuits and datagrams. routing algorithms. congestion control, virtual circuits and datagrams., routing algorithms. congestion control, network security : cryptography-public key, secret key. domain name system (dns) – electronic mail and worldwide web (www). the dns, resource records, name servers. e-mail-architecture and serves, cryptography-public key, secret key., domain name system (dns) – electronic mail and worldwide web (www)., the dns, resource records, name servers., e-mail-architecture and serves, network fundamentals : basics of computer networking network topologies types of area networks – lan, man and wan manet: mobile ad hoc network, basics of computer networking, network topologies, types of area networks – lan, man and wan, manet: mobile ad hoc network, reference models : layers of osi model tcp/ip model user datagram protocol (udp), layers of osi model, tcp/ip model, user datagram protocol (udp), data communication : types of transmission media transmission modes in computer networks (simplex, half-duplex and full-duplex) redundant link problems digital subscriber line (dsl) what is scrambling? difference between unipolar, polar and bipolar line coding schemes analog to digital conversion digital to analog conversion analog to analog conversion (modulation) difference between broadband and baseband transmission, types of transmission media, transmission modes in computer networks (simplex, half-duplex and full-duplex), redundant link problems, digital subscriber line (dsl), what is scrambling?, difference between unipolar, polar and bipolar line coding schemes, analog to digital conversion, digital to analog conversion, analog to analog conversion (modulation), difference between broadband and baseband transmission, internetworking : internetworking network devices (hub, repeater, bridge, switch, router, gateways and brouter) introduction to firewall, internetworking, network devices (hub, repeater, bridge, switch, router, gateways and brouter), introduction to firewall, routing : classification of routing algorithms | set-1 types of routing | set-2 classes of routing protocols | set-3 distance vector routing v/s link state routing fixed and flooding routing algorithms routing v/s routed protocols unicast routing – link state routing routing protocols set 1 (distance vector routing) route poisoning and count to infinity problem onion routing router on a stick circuit switching packet switching and delays differences between virtual circuits & datagram networks circuit switching vs packet switching, classification of routing algorithms | set-1, types of routing | set-2, classes of routing protocols | set-3, distance vector routing v/s link state routing, fixed and flooding routing algorithms, routing v/s routed protocols, unicast routing – link state routing, routing protocols set 1 (distance vector routing), route poisoning and count to infinity problem, onion routing, router on a stick, circuit switching, packet switching and delays, differences between virtual circuits & datagram networks, circuit switching vs packet switching, network security : protocols in application layer dns (domain name server) address resolution in dns dns spoofing or dns cache poisoning why does dns use udp and not tcp? deniel of service and prevention digital signatures and certificates lzw (lempel–ziv–welch) compression technique rc4 encryption algorithm rsa algorithm in cryptography rsa algorithm using multiple precision arithmetic library weak rsa decryption with chinese-remainder theorem diffie-hellman algorithm dna cryptography unicode message authentication codes how message authentication code works? hash functions in system security, protocols in application layer, dns (domain name server), address resolution in dns, dns spoofing or dns cache poisoning, why does dns use udp and not tcp?, deniel of service and prevention, digital signatures and certificates, lzw (lempel–ziv–welch) compression technique, rc4 encryption algorithm, rsa algorithm in cryptography, rsa algorithm using multiple precision arithmetic library, weak rsa decryption with chinese-remainder theorem, diffie-hellman algorithm, dna cryptography, unicode, message authentication codes, how message authentication code works?, hash functions in system security, network fundamentals : computer networks, computer networks, reference models : transport layer and tcp, transport layer and tcp, data communication : data link layer, data link layer, internetworking :, , routing : network layer, network layer, network security : application layer network security, application layer, network security, video – nptel lectures, video – lectures by ravindrababu ravula, notes – lecture notes iit kanpur, notes – web resources on computer networks by tanenbaum, visual – sliding window animation, er diagrams : e-r diagrams and their transformation to relational design, e-r diagrams and their transformation to relational design, normalization : normalization – 1nf, 2nf, 3nf, bcnf and 4nf limitations of 4nf and bcnf, normalization – 1nf, 2nf, 3nf, bcnf and 4nf, limitations of 4nf and bcnf, sql : data definition language (ddl), data manipulation language (dml), data control language (dcl) commands database objects like-views, indexes, sequences, synonyms, data dictionary, data definition language (ddl), data manipulation language (dml), data control language (dcl) commands, database objects like-views, indexes, sequences, synonyms, data dictionary, er diagrams : dbms – introduction | set 1 dbms – introduction | set 2 (3-tier architecture) dbms architecture 2-level, 3-level need for dbms advantages of dbms over file system data abstraction and data independence er model recursive relationships minimization of er diagram enhanced er model mapping from er model to relational model, dbms – introduction | set 1, dbms – introduction | set 2 (3-tier architecture), dbms architecture 2-level, 3-level, need for dbms, advantages of dbms over file system, data abstraction and data independence, er model, recursive relationships, minimization of er diagram, enhanced er model, mapping from er model to relational model, normalization : database normalization | introduction database normalization | normal forms functional dependency and attribute closure finding attribute closure and candidate keys using functional dependencies number of possible superkeys lossless decomposition dependency preserving decomposition lossless join and dependency preserving decomposition how to find the highest normal form of a relation equivalence of functional dependencies armstrong’s axioms in functional dependency canonical cover denormalization in databases, database normalization | introduction, database normalization | normal forms, functional dependency and attribute closure, finding attribute closure and candidate keys using functional dependencies, number of possible superkeys, lossless decomposition, dependency preserving decomposition, lossless join and dependency preserving decomposition, how to find the highest normal form of a relation, equivalence of functional dependencies, armstrong’s axioms in functional dependency, canonical cover, denormalization in databases, sql : structured query language (sql) sql | datatypes sql | ddl, dml, tcl and dcl sql | transactions sql | views difference between simple and complex view in sql sql | comments sql | constraints sql | creating roles sql indexes sql | sequences sql tutorial, structured query language (sql), sql | datatypes, sql | ddl, dml, tcl and dcl, sql | transactions, sql | views, difference between simple and complex view in sql, sql | comments, sql | constraints, sql | creating roles, sql indexes, sql | sequences, sql tutorial, er diagrams : er diagrams, er diagrams, normalization : normal forms, normal forms, sql : sql, sql, video – nptel lectures, notes – lecture slides silberschatz, korth and sudarshan, notes – lecture slides raghu ramakrishnan and johannes gehrke, notes – stanford dbms course lecture slides, notes – jeff ullman’s lecture slides, notes – canonical cover, prepositional and predicate logic : propositional (boolean) logic, predicate logic well – formed – formulae (wff), satisfiability and tautology, propositional (boolean) logic, predicate logic, well – formed – formulae (wff), satisfiability and tautology, logic families : ttl, ecl and c – mos gates boolean algebra and minimization of boolean functions design of combinational and sequential circuits flip-flops – types, race condition and comparison, ttl, ecl and c – mos gates, boolean algebra and minimization of boolean functions, design of combinational and sequential circuits, flip-flops – types, race condition and comparison, representation of integers : octal, hex, decimal, and binary 2’s complement and 1’s complement arithmetic floating point representation, octal, hex, decimal, and binary, 2’s complement and 1’s complement arithmetic, floating point representation, prepositional and predicate logic : representation of boolean functions properties of boolean algebra functional completeness introduction to propositional logic | set 1 introduction to propositional logic | set 2 propositional equivalences predicates and quantifiers | set 1 predicates and quantifiers | set 2 rules of inference consensus theorem, representation of boolean functions, properties of boolean algebra, functional completeness, introduction to propositional logic | set 1, introduction to propositional logic | set 2, propositional equivalences, predicates and quantifiers | set 1, predicates and quantifiers | set 2, rules of inference, consensus theorem, logic families : logic gates properties of boolean algebra minimization of boolean functions representation of boolean functions canonical and standard form functional completeness k-map (karnaugh map) implicants in k-map variable entrant map (vem) half adder full adder half subtractor full subtractor half adder and half subtractor using nand nor gates encoders and decoders encoder binary decoder combinational circuits using decoder multiplexers carry look-ahead adder parallel adder & parallel subtractor bcd adder magnitude comparator bcd to 7 segment decoder programmable logic array programming array logic read-only memory (rom) introduction of sequential circuits flip-flop types and their conversion synchronous sequential circuits counters in digital logic n-bit johnson counter ripple counter design counter for given sequence master slave jk flip flop asynchronous sequential circuits shift registers, logic gates, properties of boolean algebra, minimization of boolean functions, representation of boolean functions, canonical and standard form, functional completeness, k-map (karnaugh map), implicants in k-map, variable entrant map (vem), half adder, full adder, half subtractor, full subtractor, half adder and half subtractor using nand nor gates, encoders and decoders, encoder, binary decoder, combinational circuits using decoder, multiplexers, carry look-ahead adder, parallel adder & parallel subtractor, bcd adder, magnitude comparator, bcd to 7 segment decoder, programmable logic array, programming array logic, read-only memory (rom), introduction of sequential circuits, flip-flop types and their conversion, synchronous sequential circuits, counters in digital logic, n-bit johnson counter, ripple counter, design counter for given sequence, master slave jk flip flop, asynchronous sequential circuits, shift registers, representation of integers : number system and base conversions code converters – bcd(8421) to/from excess-3 code converters – binary to/from gray code decimal to binary conversion binary to decimal conversion decimal to octal conversion octal to decimal conversion hexadecimal to decimal conversion computer arithmetic | set – 1 computer arithmetic | set – 2 floating point representation difference between 1’s complement and 2’s complement booth’s algorithm, number system and base conversions, code converters – bcd(8421) to/from excess-3, code converters – binary to/from gray code, decimal to binary conversion, binary to decimal conversion, decimal to octal conversion, octal to decimal conversion, hexadecimal to decimal conversion, computer arithmetic | set – 1, computer arithmetic | set – 2, floating point representation, difference between 1’s complement and 2’s complement, booth’s algorithm, prepositional and predicate logic : propositional and first order logic, propositional and first order logic, logic families : digital logic, digital logic, representation of integers : number representation digital logic & number representation, number representation, digital logic & number representation, video – nptel lectures, video – lectures by ravindrababu ravula, notes – number system-swarthmore, notes – ieee standard 754 floating point numbers, assembly language fundamentals : assembly language fundamentals (8085 based assembly language programming) assemblers-2-pass and single-pass. macros and macroprocessors, assembly language fundamentals (8085 based assembly language programming), assemblers-2-pass and single-pass. macros and macroprocessors, loader and linker : loading, linking, relocation, program relocatability. linkage editing text editors. programming environments. debuggers and program generators, loading, linking, relocation, program relocatability. linkage editing, text editors. programming environments. debuggers and program generators, compiler and basics : compilation and interpretation. bootstrap compilers phases of compilation process. lexical analysis. lex package on unix system, compilation and interpretation. bootstrap compilers, phases of compilation process. lexical analysis. lex package on unix system, parsing : context free grammars. parsing and parse trees. representation of parse (derivation) trees as rightmost and leftmost derivations bottom up parsers-shift-reduce, operator precedence, and lr. yacc package on unix system topdown parsers-left recursion and its removal. recursive descent parser. predictive parser, context free grammars. parsing and parse trees. representation of parse (derivation) trees as rightmost and leftmost derivations, bottom up parsers-shift-reduce, operator precedence, and lr. yacc package on unix system, topdown parsers-left recursion and its removal. recursive descent parser. predictive parser, code generation and optimization : intermediate codes-quadruples, triples, intermediate code generation, code generation code optimization, intermediate codes-quadruples, triples, intermediate code generation, code generation, code optimization, assembly language fundamentals : pin diagram of 8085 microprocessor registers of 8085 microprocessor flag register in 8085 microprocessor addressing modes in 8085 microprocessor arithmetic instructions in 8085 microprocessor logical instructions in 8085 microprocessor data transfer instructions in 8085 microprocessor branching instructions in 8085 microprocessor reset accumulator (8085 & 8086 microprocessor) difference between call and jump instructions, pin diagram of 8085 microprocessor, registers of 8085 microprocessor, flag register in 8085 microprocessor, addressing modes in 8085 microprocessor, arithmetic instructions in 8085 microprocessor, logical instructions in 8085 microprocessor, data transfer instructions in 8085 microprocessor, branching instructions in 8085 microprocessor, reset accumulator (8085 & 8086 microprocessor), difference between call and jump instructions, loader and linker :, , compiler and basics : compiler vs interpreter introduction of compiler design phases of a compiler symbol table in compiler error handling in compiler design error detection and recovery in compiler lexical analysis c program to detect tokens in a c program flex (fast lexical analyzer generator), compiler vs interpreter, introduction of compiler design, phases of a compiler, symbol table in compiler, error handling in compiler design, error detection and recovery in compiler, lexical analysis, c program to detect tokens in a c program, flex (fast lexical analyzer generator), parsing : classification of context free grammars ambiguous grammar why first and follow? first set in syntax analysis follow set in syntax analysis first and follow sets of given grammar introduction to syntax analysis parsing | set 1 parsing | set 2 parsing | set 3 shift reduce parser in compiler classification of top down parsers operator grammar and precedence parser syntax directed translation, classification of context free grammars, ambiguous grammar, why first and follow?, first set in syntax analysis, follow set in syntax analysis, first and follow sets of given grammar, introduction to syntax analysis, parsing | set 1, parsing | set 2, parsing | set 3, shift reduce parser in compiler, classification of top down parsers, operator grammar and precedence parser, syntax directed translation, code generation and optimization : runtime environments intermediate code generation three address code in compiler code optimization introduction of object code data flow analysis in compiler, runtime environments, intermediate code generation, three address code in compiler, code optimization, introduction of object code, data flow analysis in compiler, assembly language fundamentals : microprocessor, microprocessor, loader and linker : mcq on memory allocation and compilation process, mcq on memory allocation and compilation process, compiler and basics : lexical analysis, lexical analysis, parsing : parsing and syntax directed translation compiler theory | set 1 compiler theory | set 2, parsing and syntax directed translation, compiler theory | set 1, compiler theory | set 2, code generation and optimization : code generation and optimization, code generation and optimization, video – nptel lectures, video – lectures by ravindrababu ravula, notes – bivas mitra iitgp, notes – lr parsing, notes – syntax directed translation, notes – intermediate code generation, system development life cycle (sdlc) : steps, water fall model, prototypes, spiral model, steps, water fall model, prototypes, spiral model, software metrics : software project management, software project management, software design : system design, detailed design, function oriented design, object oriented design, user interface design design level metrics, system design, detailed design, function oriented design, object oriented design, user interface design, design level metrics, coding and testing : testing level metrics. software quality and reliability clean room approach, software re engineering, testing level metrics. software quality and reliability, clean room approach, software re engineering, system development life cycle (sdlc) : classical waterfall model iterative waterfall model incremental process model prototyping model cocomo model spiral model rapid application development model (rad) rad model vs traditional sdlc, classical waterfall model, iterative waterfall model, incremental process model, prototyping model, cocomo model, spiral model, rapid application development model (rad), rad model vs traditional sdlc, software metrics : classification of software requirements project size estimation techniques requirements engineering process, classification of software requirements, project size estimation techniques, requirements engineering process, software design : classification of software, classification of software, coding and testing : software testing | basics black box testing requirements elicitation challenges in eliciting requirements project management process capability maturity model (cmm) system configuration management debugging, software testing | basics, black box testing, requirements elicitation, challenges in eliciting requirements, project management process, capability maturity model (cmm), system configuration management, debugging, system development life cycle (sdlc) : software engineering, software engineering, software metrics : software engineering, software engineering, software design : software engineering, software engineering, coding and testing : software engineering, software engineering, , parallel computing : parallel virtual machine (pvm) and message passing interface (mpi) libraries and calls advanced architectures. today’s fastest computers, parallel virtual machine (pvm) and message passing interface (mpi) libraries and calls, advanced architectures. today’s fastest computers, mobile computing : mobile connectivity – cells, framework, wireless delivery technology and switching methods, mobile information access devices, mobile data internetworking standards, cellular data communication protocols, mobile computing applications mobile databases – protocols, scope, tools and technology. m-business, mobile connectivity – cells, framework, wireless delivery technology and switching methods, mobile information access devices, mobile data internetworking standards, cellular data communication protocols, mobile computing applications, mobile databases – protocols, scope, tools and technology. m-business, e – technologies : electronic commerce – framework, media convergence of applications, consumer applications, organisation applications electronic payment systems – digital token, smart cards, credit cards, risks in electronic payment system, designing electronic payment systems electronic data interchange (edi) – concepts, applications, (legal, security and privacy) issues, edi and electronic commerce, standardization and edi, edi software implementation, edi envelope for message transport, internet – based edi digital libraries and data warehousing – concepts, types of digital documents, issues behind document infrastructure, corporate data warehouses software agents – characteristics and properties of agents, technology behind software agents (applets, browsers and software agents) broadband telecommunications – concepts, frame relay, cell relay, switched multimegabit data service, asynchronous transfer mode. main concepts in geographical information system (gis), e – cash, e – business, erp packages data warehousing – data warehouse environment, architecture of a data warehouse methodology, analysis, design, construction and administration data mining – extracting models and patterns from large databases, data mining techniques, classification, regression, clustering, summarization, dependency modelling, link analysis, sequencing analysis, mining scientific and business data, electronic commerce – framework, media convergence of applications, consumer applications, organisation applications, electronic payment systems – digital token, smart cards, credit cards, risks in electronic payment system, designing electronic payment systems, electronic data interchange (edi) – concepts, applications, (legal, security and privacy) issues, edi and electronic commerce, standardization and edi, edi software implementation, edi envelope for message transport, internet – based edi, digital libraries and data warehousing – concepts, types of digital documents, issues behind document infrastructure, corporate data warehouses, software agents – characteristics and properties of agents, technology behind software agents (applets, browsers and software agents), broadband telecommunications – concepts, frame relay, cell relay, switched multimegabit data service, asynchronous transfer mode. main concepts in geographical information system (gis), e – cash, e – business, erp packages, data warehousing – data warehouse environment, architecture of a data warehouse methodology, analysis, design, construction and administration, data mining – extracting models and patterns from large databases, data mining techniques, classification, regression, clustering, summarization, dependency modelling, link analysis, sequencing analysis, mining scientific and business data, windows programming : introduction to windows programming – win32, microsoft foundation classes (mfc), documents and views, resources, message handling in windows simple applications (in windows) – scrolling, splitting views, docking toolbars, status bars, common dialogs advanced windows programming – multiple document interface (mdi), multithreading. object linking and embedding (ole). active x controls. active template library (atl). network programming, introduction to windows programming – win32, microsoft foundation classes (mfc), documents and views, resources, message handling in windows, simple applications (in windows) – scrolling, splitting views, docking toolbars, status bars, common dialogs, advanced windows programming – multiple document interface (mdi), multithreading. object linking and embedding (ole). active x controls. active template library (atl). network programming, parallel computing :, , , mobile computing :, , , e – technologies :, , , windows programming :, , , parallel computing :, , , mobile computing :, , , e – technologies :, , , windows programming :, , , , ugc net cs notes according to syllabus of paper-iii (core group), previous years ugc net cs solved papers, articles on computer science, gate cs notes according to gate 2019 syllabus, company, about us, careers, in media, contact us, privacy policy, copyright policy, learn, algorithms, data structures, sde cheat sheet, machine learning, cs subjects, video tutorials, news, top news, technology, work & career, business, finance, lifestyle, languages, python, java, cpp, golang, c#, sql, web development, web tutorials, django tutorial, html, css, javascript, bootstrap, contribute, write an article, improve an article, pick topics to write, write interview experience, internships, video internship]