[planning your return to office strategy? see how chrome os can help..&& .&& before using all cbcm apis.&& you will need to enable the admin sdk api (if not already enabled) in the google developer console by following this link and selecting the project on which you wish to enable the api..&& from there.&& you have 2 choices of obtaining a token to access the api:.&& the following scopes are needed to authorize your access to the cbcm api:.&& or.&& to us a service account for impersonation.&& you need to:.&& with the service account keys.&& you will need to use the google api client libraries of your preferred language to request an oauth access token for your service account. .&&  .&& furthermore.&& the oauth token request will also need to impersonate an admin user in your domain when requesting the oauth token. .&& as an example.&& here is some sample code using the java api client libraries to retrieve the oauth token..&& using this sample code.&& you will be able to retrieve an access token which you can use to call the api. for example.&& if your key file is stored in /home/private_key.json and the admin account you want to use to make the request is admin@domain.com then you would run the exetuable with the following arguments:.&& apirequesthelper /home/private_key.json admin@domain.com.&&  .&& note: the admin email used is not the e-mail of your service account (which is in the form <project-name>-<id>@<project-name>.iam.gserviceaccount.com)..&& chrome browsers enrolled in chrome browsers cloud management..&& the following json template is used for chromebrowser resources in the directory api:.&& {.&& kind: admin#directory#browserdevice.&&.&& deviceid: string.&&.&& osplatform: string.&&.&& osplatformversion: string.&&.&& osarchitecture:string.&&.&& osversion: string.&&.&& machinename: string.&&.&& annotatedlocation: string.&&.&& annotateduser: string.&&.&& annotatedassetid: string.&&.&& annotatednotes: string.&&.&& lastpolicyfetchtime: datetime.&&.&& lastregistrationtime: datetime.&&.&& lastactivitytime:datetime.&&.&& laststatusreporttime:datetime.&&.&& virtualdeviceid: string.&&.&& serialnumber: string.&&.&& orgunitpath: string.&&.&& extensioncount:int.&&.&& policycount: int.&&.&& safebrowsingclickthroughcount: int.&&.&& lastdeviceuser: string.&&.&& browserversions: [string].&&.&& lastdeviceusers:[.&&   username: strin.&&.&&   laststatusreporttime:datetime.&&.&&   ].&& machinepolicies: [.&&   source: string.&&.&&   name: string.&&.&&   value: string.&&.&&   error: string.&&.&&   ].&& browsers: [.&&   browserversion: string.&&.&&   channel: string.&&.&&   laststatusreporttime: datetime.&&.&&   lastpolicyfetchtime: datetime.&&.&&   executablepath: string.&&.&&   installedbrowserversion: string.&&.&&   plugins:[.&&     name: string.&&.&&     description: string.&&.&&     fileame string.&&.&&     ].&&   profiles: [.&&     name: string.&&.&&     id: string.&&.&&     laststatusreporttime: datetime.&&.&&     lastpolicyfectchtime: datetime.&&.&&     safebrowsingwarnings: int.&&.&&     safebrowsingwarningsclickthrough: int.&&.&&     chromesignedinuseremail: string.&&.&&     extensionpolicies: [.&&       extensionid: string.&&.&&       extensionname: string.&&.&&       policies: [.&&         source: string.&&.&&         name: string.&&.&&         value: string.&&.&&         error: string.&&.&&       ].&&     ].&&     extensions: [.&&       extensionid: string.&&.&&       version: string.&&.&&       permissions: [string].&&.&&       name: string.&&.&&       description:string.&&.&&       apptype: string.&&.&&       homepageurl: string.&&.&&       installtype: string.&&.&&       configuredapppolicy: string.&&.&&       disabled: boolean.&&.&&       icons: [.&&         size: int.&&.&&         url: string.&& .&&       ].&&     ].&&     userpolicies: [.&&       source: string.&&.&&       name: string.&&.&&       value: string.&&.&&       error: string.&&.&&     ].&&     safebrowsingwarningsresettime: string.&&   ].&& }.&& .&& limitation: the nextpagetoken returned by the listing request has a 1 hour lifetime. if your listing request has a large number of chrome browser devices.&& your page token may expire before you can finish listing all the devices. in this case you may want to apply a filter to your listing request in order to reduce the number of devices returned by the query. typically.&& filtering by ou is a good way to reduce the number of results..&&  .&& to return a list of all chrome browser devices assigned to an account.&& use the following get request and include the authorization described in authorization. for readability.&& this code sample has line returns:.&& the following is a reference of all query string parameters that can be used in the request:.&& .&& this first example searches for specific machine name by using query=machine_name:client2012. the response contains a single chrome browsers resource.&& where the machinename is help desk:.&& json request.&& json response.&& a successful request returns an http 200 status code. along with a list of browsers devices that match your query paramaters:.&& .&& to retrieve a chrome devices properties.&& use the following get request and include the authorization described in authorize requests. for readability.&& this code sample has line returns:.&& the following is a reference of all query string parameters that can be used in the request:.&& .&& json request.&& an example request. for readability.&& this code sample has line returns:.&& json response.&& a successful request returns an http 200 status code. along with the status code.&& the response returns the chrome browser device properties:.&&  .&& when using the query parameter in a list request.&& every term in the query must be matched in a specific browser device in order to be valid. if you specify no operators (fields) in the query then the search will find a browser that has all the specified terms across all internally indexed text fields. for example if your query is: query=machine 73.&& this will return a browser that has both the term machine and 73 in all the fields which could be returned in a browser device like the following:.&& .&&  .&& note 1: matching occurs on word boundaries (any punctuation or space) so that you would not be able to do partial matches on words. in the above example you would not be able to do query=mach 73..&& note 2: word matching is case insensitive so that a query with machine will match both machine as well as machine..&&  .&& you can specify the following fields to target your search to specific fields (note: although the query words are case insensitive.&& the field names are case sensitive)..&&  .&& for fields that accept time (register.&& report.&& sync.&& last_activity) the time format is yyyy-mm-ddthh:mm:ss (e.g. 2020-01-01t12:00:00). you may also specify open or closed ranges for the time:.&& form.&& meaning.&& examples.&& datetime.&& exactly on the given date or time.&& 2011-03-23.&& 2011-04-26t14:23:05.&& datetime..datetime.&& within (inclusive) the given interval of date or time.&& 2011-03-23..2011-04-26.&& datetime...&& on or after the given date or time.&& 2011-04-26t14:23:05...&& ..datetime.&& on or before the given date or time.&& ..2011-04-26t14:23:05.&&  .&& note 1: all provided examples use the query parameter in the request. they parameter value must be properly escaped in the url (i.e. to escape spaces with multi condition requests)..&& note 2: all queries can further be filtered to a particular organizational unit by adding the orgunitpath query parameter to the request..&&  .&&  .&& currently unsupported queries:.&&  .&& to update the annotated fields of a chrome browser devices assigned to an account.&& use the following put request and include the access token obtained by following the authorization section. .&& the following is a reference of all payload parameters that can be used in the request:.&& address or location of the device as annotated by the administrator..&& asset identifier as annotated by the administrator or specified during enrollment..&& .&& json request.&& an example request. for readability.&& this code sample has line returns:.&& {.&&   deviceid: device_id_value.&&   annotateduser: user 1 }.&& json response.&& a successful request returns an http 200 status code. along with the status code.&& the response returns the chrome browser device properties:.&&  .&& to delete a chrome browser devices assigned to an account.&& use the following delete request and include the access token obtained by following the authorization section. .&& .&& an example request:.&&  .&& json response.&& a successful request returns an http 200 status code. .&&  .&& to move chrome browser devices assigned to an account from one organization unit to another.&& use the following post request and include the access token obtained by following the authorization section. .&&  .&& the following is a reference of all payload parameters that can be used in the request:.&& list of unique device ids of chrome browser devices to move. a maximum of 600 browsers may be moved per request..&& destination organization unit to move devices to. full path of the organizational unit or its id prefixed with id:.&&  .&& .&& an example request..&& json response.&& a successful request returns an http 200 status code. ][set up chrome browser cloud management, use the chrome browser cloud management api, topics, authorization , chromebrowser, resource representation, calling the api , retrieve all chrome browser devices for an account , retrieve a chrome browser device , update a chrome browser device , delete a chrome browser device , move a chrome browser device between organization units , set up chrome browser cloud management]use the chrome browser cloud management api - chrome enterprise and education help[note: , not , limitation: the nextpagetoken returned by the listing request has a 1 hour lifetime. if your listing request has a large number of chrome browser devices, your page token may expire before you can finish listing all the devices. in this case you may want to apply a filter to your listing request in order to reduce the number of devices returned by the query. typically, filtering by ou is a good way to reduce the number of results., {my_customer|customerid}, id, last_sync, machine_name, extension_count, policy_count, os_version, last_signed_in_user, annotated_user, annotated_location, annotated_asset_id, notes, browser_version_channel, org_unit, enrollment_date, save_browsing_clickthrough, platform_major_version, last_activity, browser_version_sortable, os_version_sortable, basic, full, ascending, descending, json request, json response, note, basic, full, json request, json response, all , machine, _name, 73, note 1: , note 2: , sensitive, yyyy-mm-ddthh:mm:ss , form, meaning, examples, note 1:, note 2:, note, json request, json response, json response, json response][help center, community, chrome enterprise and education, privacy policy, terms of service, submit feedback, cloud-managed chrome browser, set up chrome browser cloud management, use the chrome browser cloud management api, authorization, calling the api retrieve all chrome devices for an account retrieve a chrome browser device update a chrome browser device delete a chrome browser device move a chrome browser device between organization units, retrieve all chrome devices for an account, retrieve a chrome browser device, update a chrome browser device, delete a chrome browser device, move a chrome browser device between organization units, oauth2.0 with impersonation using a service account (read below the section authorize with impersonation), 3-legged oauth2.0 without impersonation (you can authorize your requests following the oauth2 guideline),  create a service account and have the necessary service account keys for this service account. you can follow this for creating a service account and getting the service account keys. , the client id for this service account will need to be authorized for the oauth scopes listed above. to do this, you must go to the admin console under security -> api controls -> manage domain wide delegation. you will then add a new client. on this dialog, the client id corresponds to the unique id of your service account., the customerid is a unique identifier of the customers google account., when impersonating an account administrator, you can also use the string my_customer which represents your accounts customerid. another way to get the customerid value is to use the retrieve a user operation. use your administrator email address or your administrator unique user id value in the operations userkey path parameter., the customerid is a unique identifier of the customers google account., when impersonating an account administrator, you can also use the string my_customer which represents your accounts customerid. another way to get the customerid value is to use the retrieve a user operation. use your administrator email address or your administrator unique user id value in the operations userkey path parameter., the deviceid is a unique identifier for a device and is found in the response of the retrieve all chrome devices operation. for the query strings, request, and response properties, see the api reference., find all devices with machine name that contain a word: machine_name:lix, machine_name:lix, find all devices with machine name that contain a word that were registered after a certain date:​ machine_name:lix register:​2011-04-26.., machine_name:lix register:​2011-04-26.., ​find all devices with machine name that contain a word that were registered before a certain date:​ machine_name:lix register:​..2011-04-26, machine_name:lix register:​..2011-04-26, find all devices that have less than a certain number of extensions installed (range queries for numerical values is not supported)., find all devices that have a machine name that contains one of two possible words (using or in queries)., the customerid is a unique identifier of the customers google account., when impersonating an account administrator, you can also use the string my_customer which represents your accounts customerid. another way to get the customerid value is to use the retrieve a user operation. use your administrator email address or your administrator unique user id value in the operations userkey path parameter., the deviceid is a unique identifier for a device and is found in the response of the retrieve all chrome devices operation. for the query strings, request, and response properties, see the api reference., the customerid is a unique identifier of the customers google account., when impersonating an account administrator, you can also use the string my_customer which represents your accounts customerid. another way to get the customerid value is to use the retrieve a user operation. use your administrator email address or your administrator unique user id value in the operations userkey path parameter., the deviceid is a unique identifier for a device and is found in the response of the retrieve all chrome devices operation. for the query strings, request, and response properties, see the api reference., the customerid is a unique identifier of the customers google account., when impersonating an account administrator, you can also use the string my_customer which represents your accounts customerid. another way to get the customerid value is to use the retrieve a user operation. use your administrator email address or your administrator unique user id value in the operations userkey path parameter., chrome browser cloud management, choose your domain type, 1. sign up for chrome browser cloud management, 2. enroll cloud-managed chrome browsers, 3. enable chrome browser reporting, 4. set policies for enrolled chrome browsers, use the chrome browser cloud management api, use the chrome browser enrollment token api, ©2022 google, privacy policy, terms of service]