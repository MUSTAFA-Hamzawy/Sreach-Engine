[skip to navigation ↓, the center for internet and society at stanford law school is a leader in the study of the law and policy around the internet and other emerging technologies.  , by jonathan mayer on august 18, 2011 at 3:56 am, despite all the attention they've received in the debates around online privacy, cookies are far from the only way to track a user. broadly speaking, a website can either stash a unique identifier anyplace in the browser ("tagging")1 or explore features of the browser until it becomes unique ("fingerprinting").2 tracking technologies that do not rely on cookies are often referred to as "supercookies," and they are widely viewed as unsavory in the computer security community because they continue tracking even when a user clears her cookies to preserve privacy. sometimes a site will use a supercookie to "respawn" its original identifier cookie, creating a "zombie cookie" — the basis of several lawsuits., in one of our recent fourthparty web measurement crawls we included a cookie clearing step to emulate a user's privacy choice. we observed that after clearing the browser's cookies an identifier cookie (named "muid" for "machine unique identifier") respawned on live.com, a microsoft domain. we dug into microsoft's cross-domain cookie syncing code and discovered two independent supercookie mechanisms, one of which was respawning cookies. we contacted microsoft with our observations, and we have collaborated to assist in rectifying the issues we uncovered. here is what we know., thanks, once again, to jovanni hernandez and akshay jagadeesh for their indispensable research assistance., microsoft's cookie syncing script would, in some cases, function as a cache cookie and respawn the muid cookie., one of the foundational concepts in web security is the cookie same-origin policy: cookies can only be read and modified by the domain that set them. if domains collaborate they can trivially circumvent the same-origin policy and share cookies with each other; this practice is called "cookie syncing." cookie syncing often raises privacy concerns. for example, in online advertising real-time bidding, cookie syncing allows a single advertising exchange to notify many advertising networks and data aggregators whenever a user visits a website. that said, there are some unequivocally legitimate use cases for cookie syncing, such as when a company has spread its business across multiple domains (e.g. amazon.com and amazonaws.com)., microsoft uses cookie syncing to share identifiers across many of its web properties, including bing.com, microsoft.com, msn.com, live.com, and xbox.com. microsoft also syncs its muid cookie to atdmt.com, the domain for its atlas third-party advertising network. we found that one of microsoft's cookie syncing scripts (wlhelper.js) included an instruction to set the muid cookie, and the script would get cached indefinitely.3 if the cached script ran and no muid cookie was present, the script would set a cookie with its stored muid. here is a slightly simplified example snippet of the relevant code:4  , var id_muid = "5cbc2f2396f14f4eba255a695d313cd1"; var muidvalue = null; // the muid cookie value is read into muidvalue ... if (muidvalue == null && id_muid != null) {    ...    // cookiedomain is set to "; domain=" + the current domain    var cookiesettings = cookiedomain + "; expires=fri, 01 jan 2021 00:00:00 gmt; path=/;";    document.cookie = "muid=" + id_muid + cookiesettings; }, we identified wlhelper.js scripts on several microsoft domains:, http://analytics.atdmt.com/scripts/wlhelper.js?i=muid http://analytics.live.com/scripts/wlhelper.jsi=muid http://analytics.microsoft.com/scripts/wlhelper.js?i=muid http://analytics.msn.com/scripts/wlhelper.js?i=muid, , in our crawling data from the alexa world top 10,000 sites we found that one or more wlhelper.js scripts were loaded when the browser visited:, http://www.microsoft.com/en-us/default.aspx http://www.microsoftstore.com/store/msstore/displayhomepage http://www.msn.com/ http://ca.msn.com/ http://es.msn.com/, , a user would have her muid respawned if she: 1) ever visited a site with a wlhelper.js embedded, 2) cleared her cookies but not her cache, and 3) visited a site with the same wlhelper.js embedded and no muid. it is difficult to estimate the number of users affected by microsoft's respawning without knowing more about traffic to microsoft's web properties and the conditions under which it would set an muid. we would note that microsoft's web properties are popular destinations with tens of millions of visitors per day., once a cookie respawned, we often saw it get sent to other microsoft domains. in the fourthparty data above, for example, the old muid was passed to atdmt.com., http://c.atdmt.com/c.gif?...&mxfr=5cbc2f2396f14f4eba255a695d313cd1, , microsoft therefore had, in at least this case, sufficient information to trivially associate the user's interactions with msn.com, live.com, and atdmt.com from before and after cookie clearing.6, microsoft's cookie syncing script included an etag cookie., etags are a simple cache control mechanism built into http. a website can assign a version number to a resource; when the browser goes to request the resource, and the version hasn't changed, the website can just tell the browser to use its cached copy. it had long been known that, instead of storing a version number, an etag could be used to store a user identifier (an "etag cookie"). two weeks ago a research team at university of caliornia, berkeley discovered the first instance of etag cookies in use., we found that, in addition to functioning as a cache cookie, microsoft's wlhelper.js script was associated with an etag cookie containing the muid., sqlite> select name, value from cookies where host='.live.com' and name='muid' limit 1; muid 5cbc2f2396f14f4eba255a695d313cd1, sqlite> select http_response_headers.name, http_response_headers.value from http_responses, http_response_headers where http_responses.id = http_response_headers.http_response_id and http_responses.url='http://analytics.atdmt.com/scripts/wlhelper.js?i=muid' and http_response_headers.name='etag' limit 1; etag "5cbc2f2396f14f4eba255a695d313cd13698", , the practical effect was that if a user cleared her cookies but not her cache, subsequent requests for wlhelper.js would be accompanied by both the new muid value (in a cookie) and the old muid value (in the etag). this pairing of old and new muids gave microsoft sufficient information to associate user interactions with its domains from before and after cookie clearing.7, in addition to supercookies, we spotted two other issues with microsoft's advertising practices., microsoft's targeted advertising opt-out button was invisible in chrome and safari., microsoft operates its own advertising choice page. (note that microsoft only allows users to opt out of seeing behaviorally targeted advertising; it does not remove its identifier cookies after a user has opted out, nor does it make any promise to stop tracking.) we observed that the opt-out link on microsoft's advertising choice page was invisible for chrome and safari users.  , , microsoft fixed their opt-out button after we called the issue to their attention., microsoft's approach to segregating advertising data does not meaningfully protect user privacy., in a 2007 report entitled "privacy protections in microsoft's ad serving system and the process of 'de-identification,'" microsoft's privacy team explains how the company segregates identified windows live user information from de-identified third-party advertising data.  , one of microsoft's goals is to serve targeted ads in a manner that protects user privacy. to avoid using the liveid cookie to serve per-user ads—because, as described earlier, it is directly associated with information that could personally identify the user—microsoft has created an "anonymous" id, called the anid, on which its ad serving capabilities are based., when a user first registers with windows live or msn, a liveid and an anid are created simultaneously. the anid is derived by applying a one-way cryptographic hash function to the liveid. a one-way cryptographic hash function ensures that there is no practical way of deriving the original value from the resulting hash value—that is, the process cannot be reversed to obtain the original number., microsoft makes several expansive claims about its advertising system's privacy guarantees.  , because all personally and directly identifying information about a user is stored on servers in association with a liveid rather than an anid, there is no practical way to link data stored in association with an anid back to any data on microsoft servers that could personally and directly identify an individual user., furthermore, to associate any of the anid-based data in the microsoft ad system with an individual user, an internal or external attacker would not only need access to the ad serving system (to access the data), the windows live id system (to access all liveids ever issued) and the hashing algorithm but would also need a massive computing infrastructure to run the algorithm on each and every liveid ever created to try to find the anid in question., and in 2008 testimony before the senate commerce committee, attached to a 2009 comment to the federal trade commission:  , as a result of this "deidentification" process, search query data and data about web surfing behavior used for ad targeting is associated with an anonymized identifier rather than an account identifier that could be used to personally and directly identify a consumer., microsoft's attempt at "anonymous" advertising data does not achieve nearly so much. first, as arvind narayanan noted in a recent blog post, de-identified online tracking data is far from anonymous. even using completely unassociated identifiers for windows live user information and advertising data would not provide much of a privacy guarantee.8, second, microsoft's use of a cryptographic hash to generate its anid cookie contributes little privacy protection. the privacy threat that microsoft is attempting to mitigate is a comparison between a user's anid and liveid. cryptographic hashing does not make comparison of two known values a challenge: on the contrary, comparison is a core use case for cryptographic hashing. with knowledge of microsoft's hash function, an employee or outsider could trivially compare any liveid to any anid., closing thoughts, the online advertising industry is currently locking horns in washington to prove it can regulate itself. several trade organizations and private firms have billed themselves as rigorous watchdogs. and yet, in our analysis of one of the most prolific online advertising networks, we found significant privacy shortcomings that even a cursory privacy audit would have uncovered. it is increasingly difficult to accept industry claims that recent negative discoveries reflect "just a few bad apples." and it is more than a little troubling that a few research groups and occasional press coverage seem to be the only present checks on one of the most privacy-invasive industries in history.  , thanks to ashkan soltani for providing feedback on a draft., [1] see evercookie, flash cookies and privacy ii, and an analysis of private browsing modes in modern browsers., [2] see how unique is your web browser? and any person... a pamphleteer., [3] the wlhelper.js script was served with a two-day cache expiry. subsequent requests after the cache expired received a 304 response to keep the cached version with another two-day expiry., [4] microsoft replaced its cookie syncing system, including wlhelper.js, after we alerted them to our findings. an example of the old script is available on google code., [5] we also saw the microsoft.com muid cookie respawn, but not through wlhelper.js. we are still working to discover the additional supercookie mechanism on microsoft.com., [6] web measurement provides limited insight into a website's backend. in cases where a domain's cookie respawned, it is quite likely that new tracking information was associated with old tracking information. we cannot say how microsoft used its data in cases where a domain's muid didn't respawn but it received an old muid from another domain that did respawn. at minimum it seems unlikely microsoft discarded this information from all logs., [7] as above, we cannot say what microsoft did with its etag cookie data. it again would be unlikely microsoft discarded this information from all logs., [8] google follows this approach: it serves its third-party advertising content from doubleclick.net, and uses a doubleclick identifier, instead of serving from google.com and using a google identifier., quinckslag august 22, 2011 at 2:50 pm, i am sure that ms would have a very good reason to get the complex codes in place, but i have no clue what it might be. why would they do all this???, jim levalley august 21, 2011 at 9:39 am, the points in closing made me aware of the importance of standards that force accountability and liability. similar to gaap in accounting. clear standards on what is not allowed. i don't hear industry "self regulation" advocates mentioning these specifics. before we can realistically believe the industry is capable of self regulation, their must be a more highly developed framework for this regulation. for example, what are the repercussions if self regulation fails? everyone says "ok, we won't do that anymore..." ? but by they keep their masses of data collected intact and don't take the remedy to the point of deleting the fruits of their lapses in judgement? solid, rigorous standards did not kill the accounting industry, and they won't curb innovation in the online ad business either. they will promote consumer trust, enable interoperability, and create a software ecosystem that make the u.s. an attractive market for software developers.][utility menu, search form, blogs archive, get involved, follow us, subscribe to email updates, subscribe to rss feeds, attend an event, donate to cis, other ways to get involved, tracking the trackers: microsoft advertising, comments, add new comment]tracking the trackers: microsoft advertising | center for internet and society[][home, blog, multimedia, press, get involved, contact us, about us people get involved cis rss feeds work with us become a student at stanford law school take a class at stanford law school become an affiliate make a financial gift privacy policy find us, people, get involved cis rss feeds work with us become a student at stanford law school take a class at stanford law school become an affiliate make a financial gift, cis rss feeds, work with us, become a student at stanford law school, take a class at stanford law school, become an affiliate, make a financial gift, privacy policy, find us, focus areas architecture & public policy cybersecurity electronic surveillance fourth amendment intermediary liability open government privacy, architecture & public policy, cybersecurity, electronic surveillance, fourth amendment, intermediary liability, open government, privacy, experts by focus area by name, by focus area, by name, our work projects documentary film program documentary film program advisory board documentary film program: frequently asked questions fair use project cases/proceedings topics, projects documentary film program documentary film program advisory board documentary film program: frequently asked questions fair use project, documentary film program documentary film program advisory board documentary film program: frequently asked questions, documentary film program advisory board, documentary film program: frequently asked questions, fair use project, cases/proceedings, topics, publications academic writing white papers and reports regulatory filings litigation briefs books other writing, academic writing, white papers and reports, regulatory filings, litigation briefs, books, other writing, events, facebook, twitter, youtube, flickr, share, print, reply, reply, privacy policy, about us, focus areas, experts, our work, publications, events, home, blog, multimedia, press, get involved, contact us]