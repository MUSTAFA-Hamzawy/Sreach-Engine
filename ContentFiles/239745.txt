[once you have created a smart home action.&& the next step is to add functionality in your fulfillment to process the smart home intents and return responses that google assistant recognizes..&& this page describes the process for implementing intent fulfillment in your your smart home action:.&& assistant makes requests to your smart home actions fulfillment with the access token provided by your oauth 2.0 server in the authorization header..&& before responding to any requests.&& your fulfillment logic should verify that this token credential is valid and determine the associated user account. if the access token is invalid.&& your fulfillment should return an http 401 unauthorized error..&& assistant sends an action.devices.sync intent to your fulfillment to request the list of devices associated with the given user and their capabilities. your fulfillment must return a unique id for each user in the agentuserid field of the sync response. this id must be an immutable value to represent the user to your cloud service. it is not recommended to provide email addresses or other attributes based on settings the user can change..&& the devices field of your sync response contains all of the devices the user has authorized assistant to access.&& the types and traits they support.&& and the attributes required to configure the traits behavior for that specific device..&& the sync intent is triggered during account linking or when a user manually resyncs their devices. if the users list of devices.&& supported traits.&& or attribute values change.&& use request sync to trigger a new sync intent and report the updates to google..&& for additional reference.&& see the sync intent reference documentation..&& when users interact with assistant to query the current state of a device.&& your fulfillment receives an action.devices.query intent containing a list of device ids (as provided by your sync response). your fulfillment receives an action.devices.execute intent when users send commands to assistant to control your device..&& your query response includes a full set of states for each of the traits supported by the requested devices..&& for additional reference.&& see the query intent reference documentation..&& similar to query.&& a single intent can target multiple device ids. a single execute intent may also contain multiple distinct commands given to a group of devices. for example.&& a triggered intent may set both brightness and color on a group of lights.&& or set multiple lights each to a different color. your execute response should return the new state of the device after the execution..&& use report state when the state of the users device changes; for example.&& due to an execute intent or a local state change (such as manually flipping a light switch). this keeps home graph synchronized with your cloud service..&& for additional reference.&& see the execute intent reference documentation..&& your query and execute responses include a status field to report the result of the request. each status response can provide one of the following values:.&& for error and exceptions.&& see handle errors and exceptions and errors and exceptions for more details..&& if the user unlinks your smart home action from assistant.&& your fulfillment receives an action.devices.disconnect intent. this intent indicates that assistant will not send any more intents for this user.&& and your cloud service should stop calling home graph apis (request sync and report state) for their devices..&& for additional reference.&& see the disconnect intent reference documentation..&& you have successfully implemented fulfillment for your smart home action project. you are now ready to publish asynchronous changes using request sync and report state..&& except as otherwise noted.&& the content of this page is licensed under the creative commons attribution 4.0 license.&& and code samples are licensed under the apache 2.0 license. for details.&& see the google developers site policies. java is a registered trademark of oracle and/or its affiliates..&& last updated 2022-05-09 utc.][intent fulfillment, identify the user, list devices and their capabilities, respond to queries and commands, handle query intents, handle execute intents, status responses, handle unlinking events, more information, programs, developer consoles]intent fulfillment  |  actions on google smart home  |  google developers[note:][google assistant, ways to build, overview learn all the ways to build actions., extend your mobile app provide faster ways for users to access your android app via assistant., build rich and natural conversations build custom voice and visual experiences for smart devices., enhance your web presence present your content in rich ways for google search and assistant., connect your smart home devices let users control lights, doors, coffee machines, and many other devices., get inspired, why build help users find answers and get things done with google assistant., reach 1 billion devices help users at home, on the go, and in the car—on over 1 billion devices., build games build fun, voice-enabled games for smart displays., explore all actions see what others are building for google assistant., get discovered publish your actions to the assistant directory., mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, smart home, google assistant, actions on google more, more, docs more guides reference samples and libraries codelabs support, more, guides, reference, samples and libraries, codelabs, support, community, support, learn, overview, home graph, devices and traits, smart home intents, fulfillment, account linking, touch controls, scheduling, glossary, build, create smart home actions, implement account linking oauth oauth-based app flip, oauth, oauth-based app flip, intent fulfillment, handle errors and exceptions, request sync, report state, notifications, quotas and limits, local home sdk, overview, seamless setup with bluetooth, local fulfillment, add more features, secondary user verification, app discovery and deep linking, test and deploy, test and share actions, add directory information, launch your action, monitoring and logging, troubleshooting, tools, sync data validator, test suite for smart home, google home playground, google home extension for vs code, webrtc validator tool, home graph viewer, ways to build, overview, extend your mobile app, build rich and natural conversations, enhance your web presence, connect your smart home devices, get inspired, why build, reach 1 billion devices, build games, explore all actions, get discovered, mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, home, products, google assistant, docs, smart home, identify the user, list devices and their capabilities, respond to queries and commands, handle unlinking events, success: the request succeeded., offline: target device is offline or otherwise unreachable., exceptions: there is an issue or alert associated with the request., error: the request failed with the corresponding errorcode., more information google assistant why build for the assistant? how google assistant works assistant directory support community, google assistant, why build for the assistant?, how google assistant works, assistant directory, support, community, programs women techmakers google developer groups google developers experts accelerators google developer student clubs, women techmakers, google developer groups, google developers experts, accelerators, google developer student clubs, developer consoles google api console google cloud platform console google play console firebase console actions on google console cast sdk developer console chrome web store dashboard, google api console, google cloud platform console, google play console, firebase console, actions on google console, cast sdk developer console, chrome web store dashboard, android, chrome, firebase, google cloud platform, all products, terms, privacy, sign up for the google developers newsletter subscribe]