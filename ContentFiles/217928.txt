[, the local home sdk enhances your smart home integration with google assistant by adding a local fulfillment path to route smart home intents., the sdk lets you write a local fulfillment app, using typescript or javascript, that contains your smart home business logic. google home or google nest devices can load and run your app on-device. your app communicates directly with your existing smart devices over wi-fi on a local area network (lan) to fulfill user commands, over existing protocols., integration of the sdk offers performance improvements to your smart home action, including lower latency and higher reliability. local fulfillment is supported for all device types and device traits, except those that use secondary user verification., start building try the sample, after getting a sync response from your cloud fulfillment, the local home platform scans the user’s local area network using mdns, udp broadcast, or upnp to discover smart devices connected to assistant., the platform sends an identify intent to determine if the device is locally controllable, by comparing the device id in the identify response to those returned by the earlier sync response. if the detected device is a hub or bridge, the platform sends a reachable_devices intent and treats the hub as the proxy device for communicating locally., when it receives a response confirming a local device, the platform establishes a local fulfillment path to the user’s google home or google nest device, and subsequently routes user commands for local fulfillment., when a user triggers a smart home action that has a local fulfillment path, assistant sends the execute intent or query intent to the google home or google nest device rather than the cloud fulfillment. the device then runs the local fulfillment app to process the intent., the local home platform is non-deterministic in choosing which google home or google nest device to trigger the command. the execute and query intents may come through any google home or google nest device defined in the same home graph structure as the target device., the local fulfillment app contains the business logic to process the intents sent by the local home platform and access your smart device via the local area network. no modification of your hardware is expected to integrate local fulfillment. the app fulfills smart home action requests by sending control commands to the smart device through application-layer protocols, including http, tcp, or udp. in the event that the local fulfillment path fails, your cloud fulfilment is used as a fallback execution path., to support building the app, the local home sdk provides these two main classes:, during development, you can build and test the app by loading it on your own hosting server or local development machine. in production, google hosts your app in a secure javascript sandbox environment on the user’s google home or google nest device., the report state api is not currently supported for local fulfillment. google relies on your cloud fulfillment to process these requests., your local fulfillment app is loaded on demand when the local home platform discovers new local devices matching the project scan configuration, or has pending intents to deliver related to a previously identified device., google home or google nest devices are memory constrained and your local fulfillment app may be terminated at any time due to memory pressure in the system. this can happen if your app starts to consume too much memory, or if the system needs to make room for another app. the local home platform restarts your app only when there are new intents to deliver and sufficient memory resources for the app to run., the local home platform unloads your app after an idle timeout when the user unlinks their account or there are no longer devices that support local fulfillment associated with the user's agentuserid., the local home platform executes your local fulfillment app on supported google home or google nest devices. the following table describes the supported devices, and the runtime used on each device. to learn more about runtime requirements, see execution environment., the execution environment for your local fulfillment app depends on your device. the local home platform supports the following runtime environments:, we recommend bundling your dependencies into a single javascript file using the bundler configurations provided by the local home sdk and packaging your source code as an immediately-invoked function expression (iife)., to utilize the local home sdk for your smart home integration, you need to perform these tasks:, to start using local fulfillment, see add local fulfillment to your smart home action., except as otherwise noted, the content of this page is licensed under the creative commons attribution 4.0 license, and code samples are licensed under the apache 2.0 license. for details, see the google developers site policies. java is a registered trademark of oracle and/or its affiliates., last updated 2022-05-09 utc.][local fulfillment, understand how it works, local fulfillment app, application lifecycle, supported devices, execution environment, source code structure, implementation path, more information, programs, developer consoles]local fulfillment  |  actions on google smart home  |  google developers[chrome, node.js, set up the scan config, update the sync response in your cloud fulfillment, implement the local fulfillment app, test and debug your app][google assistant, ways to build, overview learn all the ways to build actions., extend your mobile app provide faster ways for users to access your android app via assistant., build rich and natural conversations build custom voice and visual experiences for smart devices., enhance your web presence present your content in rich ways for google search and assistant., connect your smart home devices let users control lights, doors, coffee machines, and many other devices., get inspired, why build help users find answers and get things done with google assistant., reach 1 billion devices help users at home, on the go, and in the car—on over 1 billion devices., build games build fun, voice-enabled games for smart displays., explore all actions see what others are building for google assistant., get discovered publish your actions to the assistant directory., mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, language, english, bahasa indonesia, deutsch, español, français, português – brasil, русский, 中文 – 简体, 日本語, 한국어, smart home, google assistant, actions on google more, more, docs more guides reference samples and libraries codelabs support, more, guides, reference, samples and libraries, codelabs, support, community, support, learn, overview, home graph, devices and traits, smart home intents, fulfillment, account linking, touch controls, scheduling, glossary, build, create smart home actions, implement account linking oauth oauth-based app flip, oauth, oauth-based app flip, intent fulfillment, handle errors and exceptions, request sync, report state, notifications, quotas and limits, local home sdk, overview, seamless setup with bluetooth, local fulfillment, add more features, secondary user verification, app discovery and deep linking, test and deploy, test and share actions, add directory information, launch your action, monitoring and logging, troubleshooting, tools, sync data validator, test suite for smart home, google home playground, google home extension, webrtc validator tool, home graph viewer, ways to build, overview, extend your mobile app, build rich and natural conversations, enhance your web presence, connect your smart home devices, get inspired, why build, reach 1 billion devices, build games, explore all actions, get discovered, mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, home, products, google assistant, docs, smart home, devicemanager: provides methods to communicate with smart devices using tcp, udp sockets, or http requests., app: provides methods to attach handlers for intents that google sends after discovering locally-controllable devices (identify, reachable_devices). this class also fulfills user commands (execute), and answers user queries on current device state (query)., chrome: your local fulfillment app is executed within the context of a chrome browser window running chrome m80 or later with support for ecmascript version es2018., node.js: your local fulfillment app is executed as a script within a node.js process running node v10.x lts or later with support for ecmascript version es2018., more information google assistant why build for the assistant? how google assistant works assistant directory support community, google assistant, why build for the assistant?, how google assistant works, assistant directory, support, community, programs women techmakers google developer groups google developers experts accelerators google developer student clubs, women techmakers, google developer groups, google developers experts, accelerators, google developer student clubs, developer consoles google api console google cloud platform console google play console firebase console actions on google console cast sdk developer console chrome web store dashboard, google api console, google cloud platform console, google play console, firebase console, actions on google console, cast sdk developer console, chrome web store dashboard, android, chrome, firebase, google cloud platform, all products, terms, privacy, sign up for the google developers newsletter subscribe, language, english, bahasa indonesia, deutsch, español, français, português – brasil, русский, 中文 – 简体, 日本語, 한국어]