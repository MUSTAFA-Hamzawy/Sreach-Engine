[, data structure and algorithms course practice problems on arrays recent articles on arrays, an array is a collection of items stored at contiguous memory locations. the idea is to store multiple items of the same type together. this makes it easier to calculate the position of each element by simply adding an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array). the above image can be looked as a top-level view of a staircase where you are at the base of the staircase. each element can be uniquely identified by their index in the array (in a similar way as you could identify your friends by the step on which they were on in the above example)., topics :, array introduction :, array rotations :, more >>, arrangement rearrangement :, more >>, order statistics :, more >>, range queries :, more >>, optimization problems :, sorting :, more >>, searching :, more >>, matrix :, more >>, misc :, quick links :, get fulfilled all your interview preparation needs at a single place with the complete interview preparation course that provides you with all the required stuff to prepare for any product-based, service-based, or start-up company at the most affordable prices., gfg live classes offers interactive live and self-paced courses with individual attention from industry leading experts to encourage out-of-the-box thinking, leading to clarity in concepts, creativity, and innovative ideas. clear your doubts with the instructor, just like an offline classroom program. check out geeksforgeeks valuable live courses. – dsa live for working professionals, system design live, competitive programming live, and more!, master any programming language from scratch and understand all its core fundamental concepts for a solid programming foundation at a pocket-friendly price with help of geeksforgeeks language foundation courses– c programming | java foundation | python foundation | c++ foundation. these courses are designed for complete beginners who want to get started with programming and build their foundations., if you like geeksforgeeks and would like to contribute, you can also write an article and mail your article to review-team@geeksforgeeks.org. see your article appearing on the geeksforgeeks main page and help other geeks., please write comments if you find anything incorrect, or you want to share more information about the topic discussed above, writing code in comment? please use ide.geeksforgeeks.org, generate link and share the link here.][table of contents, table of contents, array data structure, geeksforgeeks courses:, complete interview preparation, live courses, language foundation courses[c programming / c++ / java / python ], , start your coding journey now!]array data structure - geeksforgeeks[topics :, array introduction :, array rotations :, arrangement rearrangement :, order statistics :, range queries :, optimization problems :, sorting :, searching :, matrix :, misc :, quick links :][courses for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more school courses school guide python programming learn to make apps explore more all courses, for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more, live dsa live classes system design java backend development full stack live explore more, dsa live classes, system design, java backend development, full stack live, explore more, self-paced dsa- self paced sde theory must-do coding questions explore more, dsa- self paced, sde theory, must-do coding questions, explore more, for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more, live competitive programming data structures with c++ data science explore more, competitive programming, data structures with c++, data science, explore more, self-paced dsa- self paced cip java / python / c++ explore more, dsa- self paced, cip, java / python / c++, explore more, school courses school guide python programming learn to make apps explore more, school guide, python programming, learn to make apps, explore more, all courses, tutorials practice ds & algo. must do questions dsa topic-wise dsa company-wise algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin ml & data science machine learning data science cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php software designs software design patterns system design tutorial school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, practice ds & algo. must do questions dsa topic-wise dsa company-wise, must do questions, dsa topic-wise, dsa company-wise, algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms, analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question, asymptotic analysis, worst, average and best cases, asymptotic notations, little o and little omega notations, lower and upper bound theory, analysis of loops, solving recurrences, amortized analysis, what does 'space complexity' mean ?, pseudo-polynomial algorithms, polynomial time approximation scheme, a time complexity question, searching algorithms, sorting algorithms, graph algorithms, pattern searching, geometric algorithms, mathematical, bitwise algorithms, randomized algorithms, greedy algorithms, dynamic programming, divide and conquer, backtracking, branch and bound, all algorithms, data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures, arrays, linked list, stack, queue, binary tree, binary search tree, heap, hashing, graph, advanced data structure, matrix, strings, all data structures, interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes, company preparation, top topics, practice company questions, interview experiences, experienced interviews, internship interviews, competititve programming, design patterns, system design tutorial, multiple choice quizzes, languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin, c, c++, java, python, c#, javascript, jquery, sql, php, scala, perl, go language, html, css, kotlin, ml & data science machine learning data science, machine learning, data science, cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering, mathematics, operating system, dbms, computer networks, computer organization and architecture, theory of computation, compiler design, digital logic, software engineering, gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs, gate computer science notes, last minute notes, gate cs solved papers, gate cs original papers and official keys, gate 2021 dates, gate cs 2021 syllabus, important topics for gate cs, web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php, html, css, javascript, angularjs, reactjs, nodejs, bootstrap, jquery, php, software designs software design patterns system design tutorial, software design patterns, system design tutorial, school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, school programming, mathematics number system algebra trigonometry statistics probability geometry mensuration calculus, number system, algebra, trigonometry, statistics, probability, geometry, mensuration, calculus, maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, class 12 notes, ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam, isro cs original papers and official keys, isro cs solved papers, isro cs syllabus for scientist/engineer exam, ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, ugc net cs notes paper ii, ugc net cs notes paper iii, ugc net cs solved papers, student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, campus ambassador program, school ambassador program, project, geek of the month, campus geek of the month, placement course, competititve programming, testimonials, student chapter, geek on the top, internship, careers, jobs apply for jobs post a job job-a-thon, apply for jobs, post a job, job-a-thon, events, , write come write articles for us and get featured practice learn and code with the best industry experts premium get access to ad-free content, doubt assistance and more! jobs come and find your dream job with us geeks digest quizzes geeks campus gblog articles ide campus mantri, geeks digest, quizzes, geeks campus, gblog articles, ide, campus mantri, , , home, saved videos, courses, , gblog, puzzles, what's new ?, data structures, algorithms, interview preparation, topic-wise practice, c++, java, python, competitive programming, machine learning, html, sde sheet, puzzles, gfg school, projects, array data structure array rotations maximum sum of i*arr[i] among all rotations of a given array find the rotation count in rotated sorted array quickly find multiple left rotations of an array | set 1 find the minimum element in a sorted and rotated array reversal algorithm for right rotation of an array find a rotation with maximum hamming distance queries on left and right circular shift on array print left rotation of array in o(n) time and o(1) space find element at given index after a number of rotations split the array and add the first part to the end arrangement rearrangement rearrange an array such that ‘arr[j]’ becomes ‘i’ if ‘arr[i]’ is ‘j’ | set 1 rearrange an array in maximum minimum form | set 1 rearrange an array in maximum minimum form | set 2 (o(1) extra space) move all negative numbers to beginning and positive to end with constant extra space move all negative elements to end in order with extra space allowed rearrange array such that even index elements are smaller and odd index elements are greater positive elements at even and negative at odd positions (relative order not maintained) replace every array element by multiplication of previous and next shuffle a given array using fisher–yates shuffle algorithm segregate even and odd numbers | set 3 array rearrangement order statistics k maximum sums of non-overlapping contiguous sub-arrays k smallest elements in same order using o(1) extra space find k pairs with smallest sums in two arrays k-th smallest absolute difference of two elements in an array find second largest element in an array find k numbers with most occurrences in the given array find the smallest and second smallest elements in an array find the smallest missing number maximum sum such that no two elements are adjacent maximum and minimum of an array using minimum number of comparisons array | order statistics range queries number whose sum of xor with given array range is maximum array range queries over range queries array range queries for searching an element array range queries for elements with frequency same as value maximum occurrence in a given range number of indexes with equal elements in given range merge sort tree for range order statistics total numbers with no repeated digits in a range difference array | range update query in o(1) array | range queries optimization problems smallest subarray with sum greater than a given value find maximum average subarray of k length count minimum steps to get the given desired array number of subsets with product less than k find minimum number of merge operations to make an array palindrome find the smallest positive integer value that cannot be represented as sum of any subset of a given array size of the subarray with maximum sum find minimum difference between any two elements space optimization using bit manipulations longest span with same sum in two binary arrays array sorting sort an array of 0s, 1s and 2s find the minimum length unsorted subarray, sorting which makes the complete array sorted median in a stream of integers (running integers) count the number of possible triangles find number of pairs (x, y) in an array such that x^y > y^x count all distinct pairs with difference equal to k print all distinct elements of a given integer array construct an array from its pair-sum array merge two sorted arrays with o(1) extra space product of maximum in first array and minimum in second array | sorting array searching check if an array has a majority element two pointers technique find a peak element find the two repeating elements in a given array find a fixed point (value equal to index) in a given array find subarray with given sum | set 1 (nonnegative numbers) maximum triplet sum in array smallest difference triplet from three arrays find a triplet that sum to a given value find all triplets with zero sum array | searching matrix print a given matrix in spiral form find maximum element of each row in a matrix find unique elements in a matrix shift matrix elements row-wise by k different operations on matrices print a given matrix in counter-clock wise spiral form swap major and minor diagonals of a square matrix maximum path sum in matrix squares of matrix diagonal elements move matrix elements in given direction and add elements with same value matrix archives array misc subarray/substring vs subsequence and programs to generate them product of array except itself number of subarrays with given product linked list vs array check if array elements are consecutive | added method 4 find whether an array is subset of another array | added method 5 implement two stacks in an array find relative complement of two sorted arrays minimum increment by k operations to make all elements equal minimize (max(a[i], b[j], c[k]) – min(a[i], b[j], c[k])) of three different sorted arrays, maximum sum of i*arr[i] among all rotations of a given array, find the rotation count in rotated sorted array, quickly find multiple left rotations of an array | set 1, find the minimum element in a sorted and rotated array, reversal algorithm for right rotation of an array, find a rotation with maximum hamming distance, queries on left and right circular shift on array, print left rotation of array in o(n) time and o(1) space, find element at given index after a number of rotations, split the array and add the first part to the end, rearrange an array such that ‘arr[j]’ becomes ‘i’ if ‘arr[i]’ is ‘j’ | set 1, rearrange an array in maximum minimum form | set 1, rearrange an array in maximum minimum form | set 2 (o(1) extra space), move all negative numbers to beginning and positive to end with constant extra space, move all negative elements to end in order with extra space allowed, rearrange array such that even index elements are smaller and odd index elements are greater, positive elements at even and negative at odd positions (relative order not maintained), replace every array element by multiplication of previous and next, shuffle a given array using fisher–yates shuffle algorithm, segregate even and odd numbers | set 3, array rearrangement, k maximum sums of non-overlapping contiguous sub-arrays, k smallest elements in same order using o(1) extra space, find k pairs with smallest sums in two arrays, k-th smallest absolute difference of two elements in an array, find second largest element in an array, find k numbers with most occurrences in the given array, find the smallest and second smallest elements in an array, find the smallest missing number, maximum sum such that no two elements are adjacent, maximum and minimum of an array using minimum number of comparisons, array | order statistics, number whose sum of xor with given array range is maximum, array range queries over range queries, array range queries for searching an element, array range queries for elements with frequency same as value, maximum occurrence in a given range, number of indexes with equal elements in given range, merge sort tree for range order statistics, total numbers with no repeated digits in a range, difference array | range update query in o(1), array | range queries, smallest subarray with sum greater than a given value, find maximum average subarray of k length, count minimum steps to get the given desired array, number of subsets with product less than k, find minimum number of merge operations to make an array palindrome, find the smallest positive integer value that cannot be represented as sum of any subset of a given array, size of the subarray with maximum sum, find minimum difference between any two elements, space optimization using bit manipulations, longest span with same sum in two binary arrays, sort an array of 0s, 1s and 2s, find the minimum length unsorted subarray, sorting which makes the complete array sorted, median in a stream of integers (running integers), count the number of possible triangles, find number of pairs (x, y) in an array such that x^y > y^x, count all distinct pairs with difference equal to k, print all distinct elements of a given integer array, construct an array from its pair-sum array, merge two sorted arrays with o(1) extra space, product of maximum in first array and minimum in second, array | sorting, check if an array has a majority element, two pointers technique, find a peak element, find the two repeating elements in a given array, find a fixed point (value equal to index) in a given array, find subarray with given sum | set 1 (nonnegative numbers), maximum triplet sum in array, smallest difference triplet from three arrays, find a triplet that sum to a given value, find all triplets with zero sum, array | searching, print a given matrix in spiral form, find maximum element of each row in a matrix, find unique elements in a matrix, shift matrix elements row-wise by k, different operations on matrices, print a given matrix in counter-clock wise spiral form, swap major and minor diagonals of a square matrix, maximum path sum in matrix, squares of matrix diagonal elements, move matrix elements in given direction and add elements with same value, matrix archives, subarray/substring vs subsequence and programs to generate them, product of array except itself, number of subarrays with given product, linked list vs array, check if array elements are consecutive | added method 4, find whether an array is subset of another array | added method 5, implement two stacks in an array, find relative complement of two sorted arrays, minimum increment by k operations to make all elements equal, minimize (max(a[i], b[j], c[k]) – min(a[i], b[j], c[k])) of three different sorted arrays, array data structure array rotations maximum sum of i*arr[i] among all rotations of a given array find the rotation count in rotated sorted array quickly find multiple left rotations of an array | set 1 find the minimum element in a sorted and rotated array reversal algorithm for right rotation of an array find a rotation with maximum hamming distance queries on left and right circular shift on array print left rotation of array in o(n) time and o(1) space find element at given index after a number of rotations split the array and add the first part to the end arrangement rearrangement rearrange an array such that ‘arr[j]’ becomes ‘i’ if ‘arr[i]’ is ‘j’ | set 1 rearrange an array in maximum minimum form | set 1 rearrange an array in maximum minimum form | set 2 (o(1) extra space) move all negative numbers to beginning and positive to end with constant extra space move all negative elements to end in order with extra space allowed rearrange array such that even index elements are smaller and odd index elements are greater positive elements at even and negative at odd positions (relative order not maintained) replace every array element by multiplication of previous and next shuffle a given array using fisher–yates shuffle algorithm segregate even and odd numbers | set 3 array rearrangement order statistics k maximum sums of non-overlapping contiguous sub-arrays k smallest elements in same order using o(1) extra space find k pairs with smallest sums in two arrays k-th smallest absolute difference of two elements in an array find second largest element in an array find k numbers with most occurrences in the given array find the smallest and second smallest elements in an array find the smallest missing number maximum sum such that no two elements are adjacent maximum and minimum of an array using minimum number of comparisons array | order statistics range queries number whose sum of xor with given array range is maximum array range queries over range queries array range queries for searching an element array range queries for elements with frequency same as value maximum occurrence in a given range number of indexes with equal elements in given range merge sort tree for range order statistics total numbers with no repeated digits in a range difference array | range update query in o(1) array | range queries optimization problems smallest subarray with sum greater than a given value find maximum average subarray of k length count minimum steps to get the given desired array number of subsets with product less than k find minimum number of merge operations to make an array palindrome find the smallest positive integer value that cannot be represented as sum of any subset of a given array size of the subarray with maximum sum find minimum difference between any two elements space optimization using bit manipulations longest span with same sum in two binary arrays array sorting sort an array of 0s, 1s and 2s find the minimum length unsorted subarray, sorting which makes the complete array sorted median in a stream of integers (running integers) count the number of possible triangles find number of pairs (x, y) in an array such that x^y > y^x count all distinct pairs with difference equal to k print all distinct elements of a given integer array construct an array from its pair-sum array merge two sorted arrays with o(1) extra space product of maximum in first array and minimum in second array | sorting array searching check if an array has a majority element two pointers technique find a peak element find the two repeating elements in a given array find a fixed point (value equal to index) in a given array find subarray with given sum | set 1 (nonnegative numbers) maximum triplet sum in array smallest difference triplet from three arrays find a triplet that sum to a given value find all triplets with zero sum array | searching matrix print a given matrix in spiral form find maximum element of each row in a matrix find unique elements in a matrix shift matrix elements row-wise by k different operations on matrices print a given matrix in counter-clock wise spiral form swap major and minor diagonals of a square matrix maximum path sum in matrix squares of matrix diagonal elements move matrix elements in given direction and add elements with same value matrix archives array misc subarray/substring vs subsequence and programs to generate them product of array except itself number of subarrays with given product linked list vs array check if array elements are consecutive | added method 4 find whether an array is subset of another array | added method 5 implement two stacks in an array find relative complement of two sorted arrays minimum increment by k operations to make all elements equal minimize (max(a[i], b[j], c[k]) – min(a[i], b[j], c[k])) of three different sorted arrays, maximum sum of i*arr[i] among all rotations of a given array, find the rotation count in rotated sorted array, quickly find multiple left rotations of an array | set 1, find the minimum element in a sorted and rotated array, reversal algorithm for right rotation of an array, find a rotation with maximum hamming distance, queries on left and right circular shift on array, print left rotation of array in o(n) time and o(1) space, find element at given index after a number of rotations, split the array and add the first part to the end, rearrange an array such that ‘arr[j]’ becomes ‘i’ if ‘arr[i]’ is ‘j’ | set 1, rearrange an array in maximum minimum form | set 1, rearrange an array in maximum minimum form | set 2 (o(1) extra space), move all negative numbers to beginning and positive to end with constant extra space, move all negative elements to end in order with extra space allowed, rearrange array such that even index elements are smaller and odd index elements are greater, positive elements at even and negative at odd positions (relative order not maintained), replace every array element by multiplication of previous and next, shuffle a given array using fisher–yates shuffle algorithm, segregate even and odd numbers | set 3, array rearrangement, k maximum sums of non-overlapping contiguous sub-arrays, k smallest elements in same order using o(1) extra space, find k pairs with smallest sums in two arrays, k-th smallest absolute difference of two elements in an array, find second largest element in an array, find k numbers with most occurrences in the given array, find the smallest and second smallest elements in an array, find the smallest missing number, maximum sum such that no two elements are adjacent, maximum and minimum of an array using minimum number of comparisons, array | order statistics, number whose sum of xor with given array range is maximum, array range queries over range queries, array range queries for searching an element, array range queries for elements with frequency same as value, maximum occurrence in a given range, number of indexes with equal elements in given range, merge sort tree for range order statistics, total numbers with no repeated digits in a range, difference array | range update query in o(1), array | range queries, smallest subarray with sum greater than a given value, find maximum average subarray of k length, count minimum steps to get the given desired array, number of subsets with product less than k, find minimum number of merge operations to make an array palindrome, find the smallest positive integer value that cannot be represented as sum of any subset of a given array, size of the subarray with maximum sum, find minimum difference between any two elements, space optimization using bit manipulations, longest span with same sum in two binary arrays, sort an array of 0s, 1s and 2s, find the minimum length unsorted subarray, sorting which makes the complete array sorted, median in a stream of integers (running integers), count the number of possible triangles, find number of pairs (x, y) in an array such that x^y > y^x, count all distinct pairs with difference equal to k, print all distinct elements of a given integer array, construct an array from its pair-sum array, merge two sorted arrays with o(1) extra space, product of maximum in first array and minimum in second, array | sorting, check if an array has a majority element, two pointers technique, find a peak element, find the two repeating elements in a given array, find a fixed point (value equal to index) in a given array, find subarray with given sum | set 1 (nonnegative numbers), maximum triplet sum in array, smallest difference triplet from three arrays, find a triplet that sum to a given value, find all triplets with zero sum, array | searching, print a given matrix in spiral form, find maximum element of each row in a matrix, find unique elements in a matrix, shift matrix elements row-wise by k, different operations on matrices, print a given matrix in counter-clock wise spiral form, swap major and minor diagonals of a square matrix, maximum path sum in matrix, squares of matrix diagonal elements, move matrix elements in given direction and add elements with same value, matrix archives, subarray/substring vs subsequence and programs to generate them, product of array except itself, number of subarrays with given product, linked list vs array, check if array elements are consecutive | added method 4, find whether an array is subset of another array | added method 5, implement two stacks in an array, find relative complement of two sorted arrays, minimum increment by k operations to make all elements equal, minimize (max(a[i], b[j], c[k]) – min(a[i], b[j], c[k])) of three different sorted arrays, last updated : 22 apr, 2022, introduction, array rotations, arrangement rearrangement, order statistics, range queries, searching and sorting, optimization problems, matrix, misc, quick links, introduction to arrays, arrays in c/c++, arrays in java, arrays in python, arrays in c#, program for array rotation, reversal algorithm for array rotation, block swap algorithm for array rotation, program to cyclically rotate an array by one, search an element in a sorted and rotated array, given a sorted and rotated array, find if there is a pair with a given sum, find maximum value of sum( i*arr[i]) with only rotations on given array allowed, maximum sum of i*arr[i] among all rotations of a given array, find the rotation count in rotated sorted array, quickly find multiple left rotations of an array, find the minimum element in a sorted and rotated array, reversal algorithm for right rotation of an array, find a rotation with maximum hamming distance, queries on left and right circular shift on array, print left rotation of array in o(n) time and o(1) space, find element at given index after a number of rotations, split the array and add the first part to the end, rearrange an array such that arr[i] = i, write a program to reverse an array or string, rearrange array such that arr[i] >= arr[j] if i is even and arr[i]<=arr[j] if i is odd and j < i, rearrange positive and negative numbers in o(n) time and o(1) extra space, rearrange array in alternating positive & negative items with o(1) extra space | set 1, move all zeroes to end of array, move all zeroes to end of array | set-2 (using single traversal), minimum swaps required to bring all elements less than or equal to k together, rearrange positive and negative numbers using inbuilt sort function, rearrange array such that even positioned are greater than odd, rearrange an array in order – smallest, largest, 2nd smallest, 2nd largest, .., double the first element and move zero to end, reorder an array according to given indexes, rearrange positive and negative numbers with constant extra space, arrange given numbers to form the biggest number, rearrange an array such that ‘arr[j]’ becomes ‘i’ if ‘arr[i]’ is ‘j’, rearrange an array in maximum minimum form | set 1, rearrange an array in maximum minimum form | set 2 (o(1) extra space), move all negative numbers to beginning and positive to end with constant extra space, move all negative elements to end in order with extra space allowed, rearrange array such that even index elements are smaller and odd index elements are greater, positive elements at even and negative at odd positions, replace every array element by multiplication of previous and next, shuffle a given array, segregate even and odd numbers, k’th smallest/largest element in unsorted array | set 1, k’th smallest/largest element in unsorted array | set 2 (expected linear time), k’th smallest/largest element in unsorted array | set 3 (worst case linear time), k’th smallest/largest element using stl, k largest(or smallest) elements in an array | added min heap method, kth smallest element in a row-wise and column-wise sorted 2d array | set 1, program to find largest element in an array, find the largest three elements in an array, find all elements in array which have at-least two greater elements, program for mean and median of an unsorted array, median of stream of running integers using stl, minimum product of k integers in an array of positive integers, k-th largest sum contiguous subarray, k maximum sum combinations from two arrays, k maximum sums of overlapping contiguous sub-arrays, k maximum sums of non-overlapping contiguous sub-arrays, k smallest elements in same order using o(1) extra space, find k pairs with smallest sums in two arrays, k-th smallest absolute difference of two elements in an array, find second largest element in an array, find k numbers with most occurrences in the given array, find the smallest and second smallest elements in an array, find the smallest missing number, maximum sum such that no two elements are adjacent, maximum and minimum of an array using minimum number of comparisons, mo’s algorithm, sqrt (or square root) decomposition technique | set 1 (introduction), sparse table, range sum query using sparse table, range minimum query (square root decomposition and sparse table), range queries for frequencies of array elements, constant time range add operation on an array, range lcm queries, gcds of given index ranges in an array, queries for gcd of all numbers of an array except elements in a given range, number of elements less than or equal to a given number in a given subarray, number of elements less than or equal to a given number in a given subarray | set 2 (including updates), queries for counts of array elements with values in given range, queries for decimal values of subarrays of a binary array, count elements which divide all numbers in range l-r, number whose sum of xor with given array range is maximum, xor of numbers that appeared even number of times in given range, array range queries over range queries, array range queries for searching an element, array range queries for elements with frequency same as value, maximum occurrence in a given range, number of indexes with equal elements in given range, merge sort tree for range order statistics, total numbers with no repeated digits in a range, difference array | range update query in o(1), largest sum contiguous subarray, maximum profit by buying and selling a share at most twice, find the subarray with least average, find the minimum distance between two numbers, minimize the maximum difference between the heights, minimum number of jumps to reach end, dynamic programming | set 14 (maximum sum increasing subsequence), smallest subarray with sum greater than a given value, find maximum average subarray of k length, count minimum steps to get the given desired array, number of subsets with product less than k, find minimum number of merge operations to make an array palindrome, find the smallest positive integer value that cannot be represented as sum of any subset of a given array, size of the subarray with maximum sum, find minimum difference between any two elements, space optimization using bit manipulations, longest span with same sum in two binary arrays, alternative sorting, sort a nearly sorted (or k sorted) array, sort an array according to absolute difference with given value, sort an array in wave form, merge an array of size n into another array of size m+n, sort an array which contain 1 to n values, sort 1 to n by swapping adjacent elements, sort an array containing two types of elements, sort elements by frequency | set 1, count inversions in an array | set 1 (using merge sort), two elements whose sum is closest to zero, shortest un-ordered subarray, minimum number of swaps required to sort an array, union and intersection of two sorted arrays, find union and intersection of two unsorted arrays, sort an array of 0s, 1s and 2s, find the minimum length unsorted subarray, sorting which makes the complete array sorted, median in a stream of integers (running integers), count the number of possible triangles, find number of pairs (x, y) in an array such that x^y > y^x, count all distinct pairs with difference equal to k, print all distinct elements of a given integer array, construct an array from its pair-sum array, merge two sorted arrays with o(1) extra space, product of maximum in first array and minimum in second, search, insert and delete in an unsorted array, search, insert and delete in a sorted array, given an array a[] and a number x, check for pair in a[] with sum as x, searching in an array where adjacent differ by at most k, find common elements in three sorted arrays, find position of an element in a sorted array of infinite numbers, find the only repetitive element between 1 to n-1, find the element that appears once, maximum subarray sum excluding certain elements, maximum equlibrium sum in an array, equilibrium index of an array, leaders in an array, ceiling in a sorted array, majority element, check for majority element in a sorted array, check if an array has a majority element, two pointers technique, find a peak element, find the two repeating elements in a given array, find a fixed point in a given array, find sub-array with given sum, maximum triplet sum in array, smallest difference triplet from three arrays, find a triplet that sum to a given value, find all triplets with zero sum, rotate matrix elements, inplace rotate square matrix by 90 degrees | set 1, rotate a matrix by 90 degree without using any extra space | set 2, rotate a matrix by 180 degree, turn an image by 90 degree, rotate each ring of matrix anticlockwise by k elements, check if all rows of a matrix are circular rotations of each other, sort the given matrix, find the row with maximum number of 1s, find median in row wise sorted matrix, matrix multiplication | recursive, program to multiply two matrices, program for scalar multiplication of a matrix, program to print lower triangular and upper triangular matrix of an array, find distinct elements common to all rows of a matrix, print a given matrix in spiral form, find maximum element of each row in a matrix, find unique elements in a matrix, shift matrix elements row-wise by k, different operations on matrices, print a given matrix in counter-clock wise spiral form, swap major and minor diagonals of a square matrix, maximum path sum in matrix, squares of matrix diagonal elements, move matrix elements in given direction and add elements with same value, subarray/substring vs subsequence and programs to generate them, a product array puzzle, number of subarrays with given product, linked list vs array, check if array elements are consecutive | added method 3, find whether an array is subset of another array | added method 3, implement two stacks in an array, find relative complement of two sorted arrays, minimum increment by k operations to make all elements equal, minimize (max(a[i], b[j], c[k]) – min(a[i], b[j], c[k])) of three different sorted arrays, ‘practice problems’ on arrays, ‘quizzes’ on arrays, ‘video tutorials’ on arrays, python program for breadth first search or bfs for a graph, best time to buy and sell stock, must do coding questions for product based companies, axios in react: a guide for beginners, different ways to run applet in java, how to calculate moving average in a pandas dataframe?, compile time polymorphism in java, difference between edge computing and fog computing, difference between var, let and const keywords in javascript, what is transmission control protocol (tcp)?, company, about us, careers, in media, contact us, privacy policy, copyright policy, learn, algorithms, data structures, sde cheat sheet, machine learning, cs subjects, video tutorials, news, top news, technology, work & career, business, finance, lifestyle, languages, python, java, cpp, golang, c#, sql, web development, web tutorials, django tutorial, html, css, javascript, bootstrap, contribute, write an article, improve an article, pick topics to write, write interview experience, internships, video internship]