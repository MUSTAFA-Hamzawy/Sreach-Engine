[, http is a stateless protocol. this means that user data is not persisted from one web page to the next in a web site. one way to maintain state is through the use of cookies. cookies store a set of user specific information, such as a reference identifier for a database record that holds customer information. the web server embeds the cookie into a user's web browser so that the user's information becomes available to other pages within the site; users do not have to reenter their information for every page they visit. cookies are a good way to gather customer information for web-based shopping, for retaining the personal preferences of the web user, or for maintaining state about the user., store no sensitive or secure data in cookies or other headers that are sent in the response. an example of sensitive data is customer user names, passwords, or credit card numbers. malicious users can use tools that watch internet traffic for this kind of information., there are two kinds of cookies, as follows:, in-memory cookies: an in-memory cookie goes away when the user shuts the browser down., persistent cookies: a persistent cookie resides on the hard drive of the user and is retrieved when the user comes back to the web page., if you create a cookie without specifying an expiration date, you are creating an in-memory cookie, which lives for that browser session only. the following illustrates the script that would be used for an in-memory cookie:, if you want the cookie information to persist beyond the session, you should create a persistent cookie by specifying an expiration date. supplying an expiration date causes the browser to save the cookie on the client computer. until the cookie expiration date is reached, the data in the persistent cookie will stay on the client machine. any request to the original web site will automatically attach the cookie that was created by that site. cookies go only to the sites that created them because part of the web site name and asp file make up the data in the cookie. the following illustrates the script used to create a persistent cookie:, the script to create a cookie should be placed at the beginning of the asp file because cookies need to be generated before any html text is sent to the browser., persistent cookies are produced using the response and request objects, although these objects may also be used to create an in-memory cookie. the majority of web applications employ these objects to maintain session state., response object: use the response object to create and set cookie values., request object: use the request object to retrieve the value of a cookie created during a previous web session., in this lesson you will use the response and request objects to create the following files. please create them all at once, because some of them need the others. after you have created all the files, run the application by typing http://localhost/tutorial/frame.htm in your browser., frame.htm: a page that splits the user's view into two windows. this page requires that menu.htm and customgreeting.asp., menu.htm: a page containing links to the samples for this lesson. for the links to work, this page requires that all the other pages have been created., customgreeting.asp: an asp script that takes the user's name in a form and sets an in-memory cookie., deletegreetingcookie.asp: an asp script that deletes the cookie that contains the user's name. if no cookie is set, a warning is displayed., selectcolors.asp: an asp script that sets up the cookies for the user's color choices., deletecolorcookie.asp: an asp script that deletes the web colors previously chosen. if none are chosen, a warning is displayed., cookie.asp: an asp script that sets persistent cookies to hold the current date and time of the user's visit and record the total number of visits., deletecookies.asp: this asp script deletes the cookies set in cookie.asp. if no cookies are set, a warning is displayed., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialframe.htm., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialmenu.htm., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialcustomgreeting.asp., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialdeletegreetingcookie.asp., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialselectcolors.asp., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialdeletecolorcookie.asp., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialcookie.asp., open a new file in your text editor, paste in the following script, and save the file as deletecookies.asp., with the session object, you can create only an in-memory cookie. for the session object to work correctly, you need to determine when a user's visit to the site begins and ends. iis does this by using a cookie that stores an asp session id, which is used to maintain a set of information about a user. if an asp session id is not present, the server considers the current request to be the start of a visit. the visit ends when there have been no user requests for asp files for the default time period of 20 minutes., in this lesson, you will create the following:, global.asa: global.asa is a file that allows you to perform generic actions at the beginning of the application and at the beginning of each user's session. an application starts the first time the first user ever requests a page and ends when the application is unloaded or when the server is taken offline. a unique session starts once for each user and ends 20 minutes after that user has requested their last page. generic actions you can perform in global.asa include setting application or session variables, authenticating a user, logging the date and time that a user connected, instantiating com objects that remain active for an entire application or session, and so forth., visitcount.asp: this asp script uses the session object to create an in-memory cookie., when an application or session begins or ends, it is considered an event. using the global.asa file, you can use the predefined event procedures that run in response to the event., open a new file in your text editor, paste in the following script, and save the file in your root directory as c:inetpubwwwrootglobal.asa., global.asa files must be saved in the root directory of the application for asp to find it. if you had a virtual path called test mapped to c:inetpubwwwroot	est, your url would be http://localhost/test, and the global.asa file would have to go in c:inetpubwwwroot	est. we did not create a virtual path mapped to c:inetpubwwwroot	utorial, so our root directory is still c:inetpubwwwroot., you can use variables set in global.asa to measure visits and sessions., open a new file in your text editor, paste in the following script, and save the file as c:inetpubwwwroot	utorialvisitcount.asp. view the file in your browser by typing http://localhost/tutorial/visitcount.asp., open a second instance of the browser to http://localhost/tutorial/visitcount.asp, and click refresh on the first browser. total visitors and active visitors should increase by one. close down the second browser, wait over a minute, and click refresh on the first browser. active visitors should decrease by one.][maintaining session state with cookies, frame.htm, menu.htm, customgreeting.asp, deletegreetingcookie.asp, selectcolors.asp, deletecolorcookie.asp, cookie.asp, deletecookies.asp, global.asa, visitcount.asp]maintaining session state with cookies[aug, dec, 2011, 2014, iis 6.0, caution:, in-memory cookies, persistent cookies, response, request, response object, response, request object, req, response, request, http://localhost/tutorial/frame.htm, frame.htm, menu.htm, customgreeting.asp, deletegreetingcookie.asp, selectcolors.asp, deletecolorcookie.asp, cookie.asp, deletecookies.asp, c:inetpubwwwroot	utorialframe.htm, c:inetpubwwwroot	utorialmenu.htm, c:inetpubwwwroot	utorialcustomgreeting.asp, c:inetpubwwwroot	utorialdeletegreetingcookie.asp, c:inetpubwwwroot	utorialselectcolors.asp, c:inetpubwwwroot	utorialdeletecolorcookie.asp, c:inetpubwwwroot	utorialcookie.asp, session, session, global.asa, visitcount.asp, session, c:inetpubwwwrootglobal.asa, c:inetpubwwwroot	utorialvisitcount.asp, refresh, refresh][in-memory cookies: an in-memory cookie goes away when the user shuts the browser down., persistent cookies: a persistent cookie resides on the hard drive of the user and is retrieved when the user comes back to the web page., response object: use the response object to create and set cookie values., request object: use the request object to retrieve the value of a cookie created during a previous web session., frame.htm: a page that splits the user's view into two windows. this page requires that menu.htm and customgreeting.asp., menu.htm: a page containing links to the samples for this lesson. for the links to work, this page requires that all the other pages have been created., customgreeting.asp: an asp script that takes the user's name in a form and sets an in-memory cookie., deletegreetingcookie.asp: an asp script that deletes the cookie that contains the user's name. if no cookie is set, a warning is displayed., selectcolors.asp: an asp script that sets up the cookies for the user's color choices., deletecolorcookie.asp: an asp script that deletes the web colors previously chosen. if none are chosen, a warning is displayed., cookie.asp: an asp script that sets persistent cookies to hold the current date and time of the user's visit and record the total number of visits., deletecookies.asp: this asp script deletes the cookies set in cookie.asp. if no cookies are set, a warning is displayed., global.asa: global.asa is a file that allows you to perform generic actions at the beginning of the application and at the beginning of each user's session. an application starts the first time the first user ever requests a page and ends when the application is unloaded or when the server is taken offline. a unique session starts once for each user and ends 20 minutes after that user has requested their last page. generic actions you can perform in global.asa include setting application or session variables, authenticating a user, logging the date and time that a user connected, instantiating com objects that remain active for an entire application or session, and so forth., visitcount.asp: this asp script uses the session object to create an in-memory cookie.]