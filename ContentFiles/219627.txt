[, , assistant can proactively suggest your android dynamic shortcuts to users at contextually relevant times, enabling users to easily discover and replay your voice-enabled functionality. android shortcuts provide users with quick methods to perform an action or access content in an app. for example, you could push a shortcut for each note a user creates in your note taking app. you make your dynamic links eligible to be displayed on google surfaces, like assistant, by adding the google shortcuts integration jetpack library to your project. this library allows assistant to ingest dynamic shortcuts you push using the shortcutmanagercompat class, which is a jetpack wrapper for the shortcutmanager api., by adding the google shortcuts integration library to your app, dynamic shortcuts you push to google will be visible to users as voice shortcut suggestions in the assistant app. you can push an unlimited number of dynamic shortcuts to assistant when you add the google shortcuts integration library as an app dependency, and use the pushdynamicshortcut() method of the shortcutmanagercompat library., adding dynamic shortcuts functionality to your app requires the google shortcuts integration library, which is an android jetpack library. this section describes how to configure your app development project to include this library and set the android sdk version to the level., to add this jetpack library and configure your project, follow these steps:, update your gradle.properties file to handle jetpack libraries:, gradle.properties, add the jetpack library dependencies to your build.gradle:, app/build.gradle, in the preceding sample code, you list two jetpack libraries as dependencies. the androidx.core:core:1.6.0 library contains the shortcutmanagercompat class which you use to push dynamic shortcuts to google., the androidx.core:core-google-shortcuts:1.0.0 is the google shortcuts integration library. this library contains no developer-facing api. by adding it as a dependency, it enables assistant to ingest the dynamic shortcuts you push using the shortcutmanagercompat class., in order to push dynamic shortcuts that are eligible for display on assistant, you must first create the shortcut using the shortcutinfocompat.builder() class. you then push the shortcut using the shortcutmanagercompat.pushdynamicshortcut() method. shortcuts should be pushed whenever a user completes a relevant action in your app. the following sample code pushes a shortcut every time a user places an order in a food delivery app:, exampleorderactivity, the id referenced in the shortcutinfocompat.builder method in the preceding sample code defines the shortcutid of the resulting shortcut object. this id must be to a unique string literal. for details, see the android shortcuts documentation., in the preceding example, the addcapabilitybinding method binds the dynamic shortcut to a capability of the same android:name defined in shortcuts.xml. this method allows you to associate the shortcut to a semantic bii parameter., dynamic shortcuts can also be pushed without any particular bii parameter association. when invoked by the user, assistant triggers the intent defined in the shortcut to fulfill the action. the following example shows a dynamic shortcut with no parameter association:, when google assistant successfully ingests a dynamic shortcut from your application, it is eligible to appear as a voice shortcut suggestion in the assistant android app. the assistant app suggests the most recent shortcuts pushed by your app., to test your dynamic shortcuts with assistant, follow these steps:, except as otherwise noted, the content of this page is licensed under the creative commons attribution 4.0 license, and code samples are licensed under the apache 2.0 license. for details, see the google developers site policies. java is a registered trademark of oracle and/or its affiliates., last updated 2022-02-07 utc.][push dynamic shortcuts to assistant, configure your development project, push dynamic shortcuts to assistant, test dynamic shortcuts with assistant, more information, programs, developer consoles]push dynamic shortcuts to assistant  |  app actions  |  google developers[gradle.properties, app/build.gradle, note:, exampleorderactivity, shortcuts, assistant settings][google assistant, ways to build, overview learn all the ways to build actions., extend your mobile app provide faster ways for users to access your android app via assistant., build rich and natural conversations build custom voice and visual experiences for smart devices., enhance your web presence present your content in rich ways for google search and assistant., connect your smart home devices let users control lights, doors, coffee machines, and many other devices., get inspired, why build help users find answers and get things done with google assistant., reach 1 billion devices help users at home, on the go, and in the car—on over 1 billion devices., build games build fun, voice-enabled games for smart displays., explore all actions see what others are building for google assistant., get discovered publish your actions to the assistant directory., mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, language, english, bahasa indonesia, deutsch, español, français, português – brasil, русский, 中文 – 简体, 日本語, 한국어, app actions, google assistant, actions on google more, more, docs more guides reference codelabs samples support, more, guides, reference, codelabs, samples, support, community, support, design, overview, build, overview, implement built-in intents, create shortcuts.xml, push dynamic shortcuts to assistant, release notes, test, google assistant plugin, grow, overview, in-app shortcut promo sdk, add more features, custom intents, android widgets, foreground app invocation, inline inventory, web inventory, assistant sharing, android slices, read it, actions.xml, actions.xml overview, build app actions, create actions.xml, web inventory, app actions test tool, troubleshooting, actions.xml migration guide, ways to build, overview, extend your mobile app, build rich and natural conversations, enhance your web presence, connect your smart home devices, get inspired, why build, reach 1 billion devices, build games, explore all actions, get discovered, mobile, app actions, android slices, assistant sharing, read it, content, schema.org web markup, smart home devices, overview, device types and traits, local home sdk, experimental devices, assistant sdk, conversational, overview, fundamentals, build, interactive canvas, user engagement, transactions, account linking, console, overview, localization, analytics, policies, go to console, home, products, google assistant, docs, app actions, guides, update your gradle.properties file to handle jetpack libraries: gradle.properties android.useandroidx=true
# automatically convert third-party libraries to use androidx
android.enablejetifier=true, add the jetpack library dependencies to your build.gradle: app/build.gradle dependencies {
 implementation "androidx.core:core:1.6.0"
 implementation "androidx.core:core-google-shortcuts:1.0.0"
 ...
}
 in the preceding sample code, you list two jetpack libraries as dependencies. the androidx.core:core:1.6.0 library contains the shortcutmanagercompat class which you use to push dynamic shortcuts to google. the androidx.core:core-google-shortcuts:1.0.0 is the google shortcuts integration library. this library contains no developer-facing api. by adding it as a dependency, it enables assistant to ingest the dynamic shortcuts you push using the shortcutmanagercompat class. note: visit the jetpack library explorer to find the latest versions of the core and google shortcuts integration libraries., create a preview of your app actions and make sure your test device or emulator is prepared for testing actions by following the same setup requirements as the google assistant plugin., open your app and complete an action that you have defined a dynamic shortcut to be pushed for. for example, if you push a shortcut whenever a note is created in your note taking app, then create a new note., open shortcuts in the assistant settings app on your device. your dynamic shortcut should appear in the list for your app., more information google assistant why build for the assistant? how google assistant works assistant directory support community, google assistant, why build for the assistant?, how google assistant works, assistant directory, support, community, programs women techmakers google developer groups google developers experts accelerators google developer student clubs, women techmakers, google developer groups, google developers experts, accelerators, google developer student clubs, developer consoles google api console google cloud platform console google play console firebase console actions on google console cast sdk developer console chrome web store dashboard, google api console, google cloud platform console, google play console, firebase console, actions on google console, cast sdk developer console, chrome web store dashboard, android, chrome, firebase, google cloud platform, all products, terms, privacy, sign up for the google developers newsletter subscribe, language, english, bahasa indonesia, deutsch, español, français, português – brasil, русский, 中文 – 简体, 日本語, 한국어]