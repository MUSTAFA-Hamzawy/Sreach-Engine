[it is a very well know fact that there is no known polynomial time solution for np complete problems and these problems occur a lot in real world (see this, this and this for example). so there must be a way to handle them. we have seen algorithms to these problems which are p approximate (for example 2 approximate for travelling salesman). can we do better?, polynomial time approximation scheme (ptas) is a type of approximate algorithms that provide user to control over accuracy which is a desirable feature. these algorithms take an additional parameter ε > 0 and provide a solution that is (1 + ε) approximate for minimization and (1 – ε) for maximization. for example consider a minimization problem, if ε is 0.5, then the solution provided by the ptas algorithm is 1.5 approximate. the running time of ptas must be polynomial in terms of n, however, it can be exponential in terms of ε., in ptas algorithms, the exponent of the polynomial can increase dramatically as ε reduces, for example if the runtime is o(n(1/ε)!) which is a problem. there is a stricter scheme, fully polynomial time approximation scheme (fptas). in fptas, algorithm need to polynomial in both the problem size n and 1/ε., example (0-1 knapsack problem):       we know that 0-1 knapsack is np complete. there is a dp based pseudo polynomial solution for this. but if input values are high, then the solution becomes infeasible and there is a need of approximate solution. one approximate solution is to use greedy approach (compute value per kg for all items and put the highest value per kg first if it is smaller than w), but greedy approach is not ptas, so we don’t have control over accuracy., below is a fptas solution for 0-1 knapsack problem: input: w (capacity of knapsack) val[0..n-1] (values of items) wt[0..n-1] (weights of items), the above solution works in polynomial time in terms of both n and ε. the solution provided by this fptas is (1 – ε) approximate. the idea is to rounds off some of the least significant digits of values then they will be bounded by a polynomial and 1/ε., example:, how is the solution (1 – ε) * opt? here opt is the optimal value. let s be the set produced by above fptas algorithm and total value of s be val(s). we need to show that, let o be the set produced by optimal solution (the solution with total value opt), i.e., val(o) = opt., after the dynamic programming step, we get a set that is optimal for the scaled instance and therefore must be at least as good as choosing the set o with the smaller profits. from that, we can conclude,, sources: http://math.mit.edu/~goemans/18434s06/knapsack-katherine.pdf https://en.wikipedia.org/wiki/polynomial-time_approximation_scheme, this article is contributed by dheeraj gupta. if you like geeksforgeeks and would like to contribute, you can also write an article and mail your article to contribute@geeksforgeeks.org. see your article appearing on the geeksforgeeks main page and help other geeks., please write comments if you find anything incorrect, or you want to share more information about the topic discussed above, writing code in comment? please use ide.geeksforgeeks.org, generate link and share the link here.][related articles, table of contents, polynomial time approximation scheme, , start your coding journey now!]polynomial time approximation scheme - geeksforgeeks[p, t, a, s, f, p, t, a, s, example (0-1 knapsack problem):, w, val[0..n-1], wt[0..n-1], how is the solution (1 – ε) * opt?, opt, s, o, sources:][courses for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more school courses school guide python programming learn to make apps explore more all courses, for working professionals live dsa live classes system design java backend development full stack live explore more self-paced dsa- self paced sde theory must-do coding questions explore more, live dsa live classes system design java backend development full stack live explore more, dsa live classes, system design, java backend development, full stack live, explore more, self-paced dsa- self paced sde theory must-do coding questions explore more, dsa- self paced, sde theory, must-do coding questions, explore more, for students live competitive programming data structures with c++ data science explore more self-paced dsa- self paced cip java / python / c++ explore more, live competitive programming data structures with c++ data science explore more, competitive programming, data structures with c++, data science, explore more, self-paced dsa- self paced cip java / python / c++ explore more, dsa- self paced, cip, java / python / c++, explore more, school courses school guide python programming learn to make apps explore more, school guide, python programming, learn to make apps, explore more, all courses, tutorials practice ds & algo. must do questions dsa topic-wise dsa company-wise algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin ml & data science machine learning data science cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php software designs software design patterns system design tutorial school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, practice ds & algo. must do questions dsa topic-wise dsa company-wise, must do questions, dsa topic-wise, dsa company-wise, algorithms analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question searching algorithms sorting algorithms graph algorithms pattern searching geometric algorithms mathematical bitwise algorithms randomized algorithms greedy algorithms dynamic programming divide and conquer backtracking branch and bound all algorithms, analysis of algorithms asymptotic analysis worst, average and best cases asymptotic notations little o and little omega notations lower and upper bound theory analysis of loops solving recurrences amortized analysis what does 'space complexity' mean ? pseudo-polynomial algorithms polynomial time approximation scheme a time complexity question, asymptotic analysis, worst, average and best cases, asymptotic notations, little o and little omega notations, lower and upper bound theory, analysis of loops, solving recurrences, amortized analysis, what does 'space complexity' mean ?, pseudo-polynomial algorithms, polynomial time approximation scheme, a time complexity question, searching algorithms, sorting algorithms, graph algorithms, pattern searching, geometric algorithms, mathematical, bitwise algorithms, randomized algorithms, greedy algorithms, dynamic programming, divide and conquer, backtracking, branch and bound, all algorithms, data structures arrays linked list stack queue binary tree binary search tree heap hashing graph advanced data structure matrix strings all data structures, arrays, linked list, stack, queue, binary tree, binary search tree, heap, hashing, graph, advanced data structure, matrix, strings, all data structures, interview corner company preparation top topics practice company questions interview experiences experienced interviews internship interviews competititve programming design patterns system design tutorial multiple choice quizzes, company preparation, top topics, practice company questions, interview experiences, experienced interviews, internship interviews, competititve programming, design patterns, system design tutorial, multiple choice quizzes, languages c c++ java python c# javascript jquery sql php scala perl go language html css kotlin, c, c++, java, python, c#, javascript, jquery, sql, php, scala, perl, go language, html, css, kotlin, ml & data science machine learning data science, machine learning, data science, cs subjects mathematics operating system dbms computer networks computer organization and architecture theory of computation compiler design digital logic software engineering, mathematics, operating system, dbms, computer networks, computer organization and architecture, theory of computation, compiler design, digital logic, software engineering, gate gate computer science notes last minute notes gate cs solved papers gate cs original papers and official keys gate 2021 dates gate cs 2021 syllabus important topics for gate cs, gate computer science notes, last minute notes, gate cs solved papers, gate cs original papers and official keys, gate 2021 dates, gate cs 2021 syllabus, important topics for gate cs, web technologies html css javascript angularjs reactjs nodejs bootstrap jquery php, html, css, javascript, angularjs, reactjs, nodejs, bootstrap, jquery, php, software designs software design patterns system design tutorial, software design patterns, system design tutorial, school learning school programming mathematics number system algebra trigonometry statistics probability geometry mensuration calculus maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, school programming, mathematics number system algebra trigonometry statistics probability geometry mensuration calculus, number system, algebra, trigonometry, statistics, probability, geometry, mensuration, calculus, maths notes (class 8-12) class 8 notes class 9 notes class 10 notes class 11 notes class 12 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, class 12 notes, ncert solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, rd sharma solutions class 8 maths solution class 9 maths solution class 10 maths solution class 11 maths solution class 12 maths solution, class 8 maths solution, class 9 maths solution, class 10 maths solution, class 11 maths solution, class 12 maths solution, physics notes (class 8-11) class 8 notes class 9 notes class 10 notes class 11 notes, class 8 notes, class 9 notes, class 10 notes, class 11 notes, cs exams/psus isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, isro isro cs original papers and official keys isro cs solved papers isro cs syllabus for scientist/engineer exam, isro cs original papers and official keys, isro cs solved papers, isro cs syllabus for scientist/engineer exam, ugc net ugc net cs notes paper ii ugc net cs notes paper iii ugc net cs solved papers, ugc net cs notes paper ii, ugc net cs notes paper iii, ugc net cs solved papers, student campus ambassador program school ambassador program project geek of the month campus geek of the month placement course competititve programming testimonials student chapter geek on the top internship careers, campus ambassador program, school ambassador program, project, geek of the month, campus geek of the month, placement course, competititve programming, testimonials, student chapter, geek on the top, internship, careers, jobs apply for jobs post a job job-a-thon, apply for jobs, post a job, job-a-thon, events, , write come write articles for us and get featured practice learn and code with the best industry experts premium get access to ad-free content, doubt assistance and more! jobs come and find your dream job with us geeks digest quizzes geeks campus gblog articles ide campus mantri, geeks digest, quizzes, geeks campus, gblog articles, ide, campus mantri, , , home, saved videos, courses, , gblog, puzzles, what's new ?, array, matrix, strings, hashing, linked list, stack, queue, binary tree, binary search tree, heap, graph, searching, sorting, divide & conquer, mathematical, geometric, bitwise, greedy, backtracking, branch and bound, dynamic programming, pattern searching, randomized, top 50 array coding problems for interviews, recursion, difference between bfs and dfs, counting sort, a* search algorithm, how to write a pseudo code?, understanding time complexity with simple examples, playfair cipher with examples, recursive practice problems with solutions, quick sort vs merge sort, complexity analysis of binary search, converting roman numerals to decimal lying between 1 to 3999, generate all permutation of a set in python, introduction to algorithms, sde sheet - a complete guide for sde preparation, data structures and algorithms online courses : free and paid, comparison among bubble sort, selection sort and insertion sort, mid-point circle drawing algorithm, dda line generation algorithm in computer graphics, cyclomatic complexity, design a chess game, commonly asked algorithm interview questions | set 1, difference between symmetric and asymmetric key encryption, lower and upper bound theory, columnar transposition cipher, bresenham’s line generation algorithm, array of vectors in c++ stl, difference between np hard and np complete problem, priority cpu scheduling with different arrival time - set 2, rail fence cipher - encryption and decryption, top 50 array coding problems for interviews, recursion, difference between bfs and dfs, counting sort, a* search algorithm, how to write a pseudo code?, understanding time complexity with simple examples, playfair cipher with examples, recursive practice problems with solutions, quick sort vs merge sort, complexity analysis of binary search, converting roman numerals to decimal lying between 1 to 3999, generate all permutation of a set in python, introduction to algorithms, sde sheet - a complete guide for sde preparation, data structures and algorithms online courses : free and paid, comparison among bubble sort, selection sort and insertion sort, mid-point circle drawing algorithm, dda line generation algorithm in computer graphics, cyclomatic complexity, design a chess game, commonly asked algorithm interview questions | set 1, difference between symmetric and asymmetric key encryption, lower and upper bound theory, columnar transposition cipher, bresenham’s line generation algorithm, array of vectors in c++ stl, difference between np hard and np complete problem, priority cpu scheduling with different arrival time - set 2, rail fence cipher - encryption and decryption, difficulty level : expert, last updated : 04 sep, 2019, find the maximum valued item, i.e., find maximum value in val[]. let this maximum value be maxval., compute adjustment factor k for all values 
      k  = (maxval * ε) / n, adjust all values, i.e., create a new array val'[] that values divided by k. do following for every value val[i]. 
      val'[i] = floor(val[i] / k), run dp based solution for reduced values, i,e, val'[0..n-1] and all other parameter same., jokic07, shubhamagarwal0312, algorithms, algorithms, dsa sheet by love babbar, how to start learning dsa?, types of complexity classes | p, np, conp, np hard and np complete, scan (elevator) disk scheduling algorithms, program for sstf disk scheduling algorithm, k means clustering - introduction, difference between algorithm, pseudocode and program, difference between informed and uninformed search in ai, k-nearest neighbours, what are hash functions and how to choose a good hash function?, company, about us, careers, in media, contact us, privacy policy, copyright policy, learn, algorithms, data structures, sde cheat sheet, machine learning, cs subjects, video tutorials, news, top news, technology, work & career, business, finance, lifestyle, languages, python, java, cpp, golang, c#, sql, web development, web tutorials, django tutorial, html, css, javascript, bootstrap, contribute, write an article, improve an article, pick topics to write, write interview experience, internships, video internship]