[bbc © 2021.&& version 1.1.9 september 2021.&& subtitles are primarily intended to serve viewers with loss of hearing.&& but they are used by a wide range of people: around 10% of broadcast viewers use subtitles regularly.&& increasing to 35% for some online content. the majority of these viewers are not hard of hearing..&& this document describes closed subtitles only.&& also known as closed captions. typically delivered as a separate file.&& closed subtitles can be switched off by the user and are not burnt in to the image..&& there are many formats in circulation for subtitle files. in general.&& the bbc accepts ebu-tt part 1 with stl embedded for broadcast.&& and ebu-tt-d for online only content. for a full description of the delivery requirements.&& see the file format section..&& the subtitle guidelines describe best practice for authoring subtitles and provide instructions for making subtitle files for the bbc. this document brings together documents previously published by ofcom and the bbc and is intended to serve as the basis for all subtitle work across the bbc: prepared and live.&& online and broadcast.&& internal and supplied..&& who should read this?.&& anyone providing or handling subtitles for the bbc:.&& in addition.&& if you have an interest in accessibility you will find a lot of useful information here..&& what prior knowledge is expected?.&& the editorial guidelines in the presentation section are written in plain english.&& requiring only general familiarity with subtitles. in contrast.&& to follow the technical instructions in the file format section you will need good working knowledge of xml and css. it is recommended that you also familiarise yourself with timed text markup language and smpte timecodes..&& what should i read for....&& an overview of subtitles: read this introduction and the first few sections of presentation.&& timing.&& identifying speakers and ebu-tt and ebu-tt-d documents in detail. scanning through the examples will also give you a good understanding of how subtitles are made..&& editing and styling subtitles: read the presentation section for text.&& format and timing guidelines..&& making subtitle files for online-only content: if your software does not support ebu-tt-d you will need to create an xml file yourself. assuming you are familiar with xml and css.&& start with introduction to the ttml document structure and example ebu-tt-d document. then follow the quick ebu-tt-d how-to..&& further assistance.&& assistance with these guidelines and specific technical questions can be emailed to subtitle-guidelines@bbc.co.uk. for help with requirements for specific subtitle documents contact the commissioning editor..&& the following symbols are used throughout this document..&& examples indicate the appearance of a subtitle. when illustrating bad or unrecommended practice.&& the example has a strike-though.&& like this: counter-example. note that the subtitle style used here is only an approximation. it should not be used as a reference for real-world files or processors..&& most of this document applies to both online and broadcast subtitles. when there are differences between subtitles intended for either platform.&& this is indicated with one of these flags: online - applies only to subtitles for online use (not for broadcast). broadcast - applies to broadcast-only subtitles (not online). when no broadcast or online flag is indicated.&& the text applies to all subtitles..&& subtitles must conform to one of two specifications: ebu-tt-d (subtitles intended for online distribution only) or ebu-tt version 1.0 (for broadcast and online). sections that only apply to one of the specifications are indicated by one of these flags: ebu-tt-d or ebu-tt 1.0..&& specific actual values are indicated with double quotes.&& like this: 2. these values must be used without the quotes. descriptions of values are given in brackets: [a number between 1 and 3]. when several values are possible.&& they are separated by a pipe: 1 | 2 | 3..&& text intended to guide developers in how to meet editorial guidelines is placed in sections like this within the presentation section..&& example sections are inset and styled with a side border..&& since this is a longish sort of a document.&& weve added in some features to help navigation:.&& this version covers editorial and technical contribution and presentation guidelines.&& including resources to assist developers in meeting these guidelines. future versions will build on these guidelines or describe changes.&& or address issues raised. we intend to release small updates often..&& the previous major version of this document remains available at release 1.&& amongst many smaller tweaks.&& the following changes accumulated so far since version 1 are notable:.&& thank you to everyone who has helped to review this version. you know who you are!.&& queries and comments may be raised at any time on the subtitle guidelines github project by those with sufficient project access levels. a quick file a bug link for raising issues is available on the top right of this page. readers who do not have access to the project should email subtitle-guidelines@bbc.co.uk..&& when raising new issues please summarise in a short line the issue in the title field and include enough information in the description field.&& as well as the selected text.&& to allow the team to identify the relevant part(s) of the document..&& good subtitling is an art that requires negotiating conflicting requirements. on the whole.&& you should aim for subtitles that are faithful to the audio. however.&& you will need to balance this against considerations such as the action on the screen.&& speed of speech or editing and visual content..&& for example.&& if you subtitle a scene where a character is speaking rapidly.&& these are some of the decisions you may have to make:.&& clearly.&& it is not possible (or advisable) to provide a set of hard rules that cover all situations. instead.&& this document provides some guidelines and practical advice. their implementation will depend on the content.&& the genre and on the subtitler’s expertise..&& if there is time for verbatim speech.&& do not edit unnecessarily. your aim should be to give the viewer as much access to the soundtrack as you possibly can within the constraints of time.&& space.&& shot changes.&& and on-screen visuals.&& etc. you should never deprive the viewer of words/sounds when there is time to include them and where there is no conflict with the visual information..&& however.&& if you have a very busy scene.&& full of action and disconnected conversations.&& it might be confusing if you subtitle fragments of speech here and there.&& rather than allowing the viewer to watch what is going on..&& dont automatically edit out words like but.&& so or too. they may be short but they are often essential for expressing meaning..&& similarly.&& conversational phrases like you know.&& well.&& actually often add flavour to the text..&& it is not necessary to simplify or translate for deaf or hard-of-hearing viewers. this is not only condescending.&& it is also frustrating for lip-readers..&& if the speaker is in shot.&& try to retain the start and end of his/her speech.&& as these are most obvious to lip-readers who will feel cheated if these words are removed..&& do not take the easy way out by simply removing an entire sentence. sometimes this will be appropriate.&& but normally you should aim to edit out a bit of every sentence..&& avoid editing out names when they are used to address people. they are often easy targets.&& but can be essential for following the plot..&& your editing should be faithful to the speakers style of speech.&& taking into account register.&& nationality.&& era.&& etc. this will affect your choice of vocabulary. for instance:.&& similarly.&& make sure if you edit by using contractions that they are appropriate to the context and register. in a formal context.&& where a speaker would not use contractions.&& you should not use them either..&& regional styles must also be considered: e.g. it will not always be appropriate to edit ive got a cat to ive a cat; and i used to go there cannot necessarily be edited to id go there..&& having edited one subtitle.&& bear your edit in mind when creating the next subtitle. the edit can affect the content as well as the structure of anything that follows..&& avoid editing by changing the form of a verb. this sometimes works.&& but more often than not the change of tense produces a nonsense sentence. also.&& if you do edit the tense.&& you have to make it consistent throughout the rest of the text..&& sometimes speakers can be clearly lip-read - particularly in close-ups. do not edit out words that can be clearly lip-read. this makes the viewer feel cheated. if editing is unavoidable.&& then try to edit by using words that have similar lip-movements. also.&& keep as close as possible to the original word order..&& if the onscreen graphics are not easily legible because of the streamed image size or quality.&& the subtitles must include any text contained within those graphics which provide contextual information. this must include the speaker’s identity.&& what they do and any organisations they represent. other displayed information affected by legibility problems that must be included in the subtitle includes; phone numbers.&& email addresses.&& postal addresses.&& website urls.&& or other contact information..&& if the information contained within the graphics is off-topic from what is being spoken.&& then the information should not be replicated in the subtitle..&& do not edit out strong language unless it is absolutely impossible to edit elsewhere in the sentence - deaf or hard-of-hearing viewers find this extremely irritating and condescending..&& if the bbc has decided to edit any strong language.&& then your subtitles must reflect this in the following ways..&& if the offending word is bleeped.&& put the word bleep in the appropriate place in the subtitle - in caps.&& in a contrasting colour and without an exclamation mark..&& bleep.&& if only the middle section of a word is bleeped.&& do not change colour mid-word:.&& f-bleep-ing.&& if the word is dubbed with a euphemistic replacement - e.g. frigging - put this in. if the word is non-standard but spellable put this in.&& too:.&& frerlking.&& if the word is dubbed with an unrecognisable sequence of noises.&& leave them out..&& if the sound is dipped for a portion of the word.&& put up the sounds that you can hear and three dots for the dipped bit:.&& keep your f...ing nose out of it!..&& never use more than three dots..&& if the word is mouthed.&& use a label:.&& so (mouths) f...ing what?.&& in teletext.&& which is used to display subtitles on some broadcast platforms.&& line length is limited to 37 fixed-width (monospaced) characters.&& since at least 3 of the 40 available bytes are used for control codes. other platforms use proportional fonts.&& making it impossible to determine the width of the line based on the number of characters alone. in this case.&& lines are constrained by the width of the region in which they are displayed. guidelines for both platforms are summarised in the table below..&& if targeting both online and broadcast platforms you must apply both constraints.&& i.e. ensure that the number of characters within a region does not exceed 37..&& platform.&& max length.&& notes.&& broadcast.&& 37 characters.&& reduced if coloured text is used.&& online.&& 68% of the width of a 16:9 video and 90% of the width of a 4:3 video.&& each subtitle should comprise a single complete sentence. depending on the speed of speech.&& there are exceptions to this general recommendation (see live subtitling.&& short and long sentences below).&& a maximum subtitle length of two lines is recommended. three lines may be used if you are confident that no important picture information will be obscured. when deciding between one long line or two short ones.&& consider line breaks.&& number of words.&& pace of speech and the image..&& a tt:region sized to fit 3 lines at a recommended computed value of tts:lineheight of 8% of the height of the root container region would have a minimum tts:extent height of 24%..&& subtitles and lines should be broken at logical points. the ideal line-break will be at a piece of punctuation like a full stop.&& comma or dash. if the break has to be elsewhere in the sentence.&& avoid splitting the following parts of speech:.&& however.&& since the dictates of space within a subtitle are more severe than between subtitles.&& line breaks may also take place after a verb. for example:.&& we are aiming to get a better television service..&& line endings that break up a closely integrated phrase should be avoided where possible..&& we are aiming to get a better television service..&& line breaks within a word are especially disruptive to the reading process and should be avoided. ideal formatting should therefore compromise between linguistic and geometric considerations but with priority given to linguistic considerations..&& manual line breaks within <tt:p> and <tt:span> elements are specified using <tt:br/>. automatic line breaks occur between adjacent active <tt:p> elements..&& broadcast left.&& right and centre justification can be useful to identify speaker position.&& especially in cases where there are more than three speakers on screen. in such cases.&& line breaks should be inserted at linguistically coherent points.&& taking eye-movement into careful consideration. for example:.&& we all hope you are feeling much better..&& this is left justified. the eye has least distance to travel from ‘hope’ to ‘you’..&& we all hope you are feeling much better..&& this is centre justified. the eye now has least distance to travel from ‘are’ to ‘feeling’..&& problems occur with justification when a short sentence or phrase is followed by a longer one..&& oh. he didn’t tell me you would be here..&& in this case.&& there is a risk that the bottom line of the subtitle is read first..&& oh. he didn’t tell me you would be here..&& this could result in only half of the subtitle being read..&& allowances would therefore have to be made by breaking the line at a linguistically non-coherent point:.&& oh. he didn’t tell me you would be here..&& oh. he didn’t tell me you would be here..&& left.&& centre and right justification can be specified using tts:textalign; additional alignment options are available using ebutts:multirowalign..&& when making a choice between one long line or two short lines.&& you should consider the background picture. in general.&& ‘long and thin’ subtitles are less disruptive of picture content than are ‘short and fat’ subtitles.&& but this is not always the case. also take into account the number of words.&& line breaks etc..&& broadcast in dialogue sequences it is often helpful to use horizontal displacement in order to distinguish between different speakers. ‘short and fat’ subtitles permit greater latitude for this technique..&& short sentences may be combined into a single subtitle if the available reading time is limited. however.&& you should also consider the image and the action on screen. for example.&& consecutive subtitles may reflect better the pace of speech..&& in most cases verbatim subtitles are preferred to edited subtitles (see this research by bbc r&d) so avoid breaking long sentences into two shorter sentences. instead.&& allow a single long sentence to extend over more than one subtitle. sentences should be segmented at natural linguistic breaks such that each subtitle forms an integrated linguistic unit. thus.&& segmentation at clause boundaries is to be preferred. for example:.&& when i jumped on the bus.&& i saw the man who had taken the basket from the old lady..&& segmentation at major phrase boundaries can also be accepted as follows:.&& on two minor occasions immediately following the war.&&.&& small numbers of people were seen crossing the border..&& there is considerable evidence from the psycho-linguistic literature that normal reading is organised into word groups corresponding to syntactic clauses and phrases.&& and that linguistically coherent segmentation of text can significantly improve readability..&& random segmentation must certainly be avoided:.&& on two minor occasions immediately following the war.&& small.&& numbers of people.&& etc..&& in the examples given above.&& no markers are used to indicate that segmentation is taking place. it is also acceptable to use sequences of dots (three at the end of a to-be-continued subtitle.&& and two at the beginning of a continuation) to mark the fact that a segmentation is taking place.&& especially in legacy subtitle files..&& good line-breaks are extremely important because they make the process of reading and understanding far easier. however.&& it is not always possible to produce good line-breaks as well as well-edited text and good timing. where these constraints are mutually exclusive.&& then well-edited text and timing are more important than line-breaks..&& the recommended subtitle speed is 160-180 words-per-minute (wpm) or 0.33 to 0.375 second per word. however.&& viewers tend to prefer verbatim subtitles.&& so the rate may be adjusted to match the pace of the programme. most subtitle authoring tools calculate the wpm and can be configured to give a warning when the word rate exceeds a certain wpm threshhold. you can also calculate the wpm manually (see box)..&& to calculate the word-per-minute (wpm) speed of a subtitle in an ebu-tt document.&& divide the number of words in a subtitle (<tt:p> element) by its duration. the duration value can be calculated from the begin and end attributes. in the example fragment below.&& the first subtitle has a word rate of 2 words per second or 120 wpm (0.5s per word). the second subtitle is cumulative: the word three appears on its own for 3 seconds.&& then four! is added and both are displayed for another 2 seconds.&& giving 5 seconds for three and 2 seconds for four!. note that end times in ebu-tt are exclusive..&& based on the recommended rate of 160-180 words per minute.&& you should aim to leave a subtitle on screen for a minimum period of around 0.3 seconds per word (e.g. 1.2 seconds for a 4-word subtitle). however.&& timings are ultimately an editorial decision that depends on other considerations.&& such as the speed of speech.&& text editing and shot synchronisation. when assessing the amount of time that a subtitle needs to remain on the screen.&& think about much more than the number of words on the screen; this would be an unacceptably crude approach..&& do not dip below the target timing unless there is no other way of getting round a problem. circumstances which could mean giving less reading time are:.&& give less time if the target timing would involve clipping a shot.&& or crossing into an unrelated.&& empty [containing no speech] shot. however.&& always consider the alternative of merging with another subtitle..&& give less time to avoid editing out words that can be lip-read.&& but only in very specific circumstances: i.e. when a word or phrase can be read very clearly even by non-lip-readers.&& and if it would look ridiculous to take out or change the word..&& avoid editing out catchwords if a phrase would become unrecognisable if edited..&& give less time if a joke would be destroyed by adhering to the standard timing.&& but only if there is no other way around the problem.&& such as merging or crossing a shot..&& in a news item or factual content.&& the main aim is to convey the what.&& when.&& who.&& how.&& why. if an item is already particularly concise.&& it may be impossible to edit it into subtitles at standard timings without losing a crucial element of the original..&& these may be similarly hard to edit. for instance.&& a detailed explanation of an economic or scientific story may prove almost impossible to edit without depriving the viewer of vital information. in these situations a subtitler should be prepared to vary the timing to convey the full meaning of the original..&& try to allow extra reading time for your subtitles in the following circumstances:.&& try to give more generous timings whenever you consider that viewers might find a word or phrase extremely hard to read without more time..&& aim to give more time when there are several speakers in one subtitle..&& allow an extra second for labels where possible.&& but only if appropriate..&& when there is a lot happening in the picture.&& e.g. a football match or a map.&& allow viewers enough time both to read the subtitle and to take in the visuals..&& if.&& for example.&& two speakers are placed in the same subtitle.&& and the person on the right speaks first.&& the eye has more work to do.&& so try to allow more time..&& give viewers more time to read long figures (e.g. 12.&&353)..&& aim for longer timing if your subtitle crosses one shot or more.&& as viewers will need longer to read it..&& slower timings should be used to keep in sync with slow speech..&& it is also very important to keep your timings consistent. for instance.&& if you have given 3:12 for one subtitle.&& you must not then give 4:12 to subsequent subtitles of similar length - unless there is a very good reason: e.g. slow speaker/on-screen action..&& if there is a pause between two pieces of speech.&& you may leave a gap between the subtitles - but this must be a minimum of one second.&& preferably a second and a half. anything shorter than this produces a very jerky effect. try to not squeeze gaps in if the time can be used for text..&& impaired viewers make use of visual cues from the faces of television speakers. therefore subtitle appearance should coincide with speech onset. subtitle disappearance should coincide roughly with the end of the corresponding speech segment.&& since subtitles remaining too long on the screen are likely to be re-read by the viewer..&& when two or more people are speaking.&& it is particularly important to keep in sync. subtitles for new speakers must.&& as far as possible.&& come up as the new speaker starts to speak. whether this is possible will depend on the action on screen and rate of speech..&& the same rules of synchronisation should apply with off-camera speakers and even with off-screen narrators.&& since viewers with a certain amount of residual hearing make use of auditory cues to direct their attention to the subtitle area..&& the subtitles should match the pace of speaking as closely as possible. ideally.&& when the speaker is in shot.&& your subtitles should not anticipate speech by more than 1.5 seconds or hang up on the screen for more than 1.5 seconds after speech has stopped..&& however.&& if the speaker is very easy to lip-read.&& slipping out of sync even by a second may spoil any dramatic effect and make the subtitles harder to follow. the subtitle should not be on the screen after the speaker has disappeared..&& note that some decoders might override the end timing of a subtitle so that it stays on screen until the next one appears. this is a non-compliant behaviour that the subtitle author and broadcaster have no control over..&& decoders need to match the begin and end timing specified in documents as closely as possible to maintain the careful synchronisation we expect from subtitle authors. in particular.&& see annex e of ebu-tt-d regarding quantisation of timing for example if the video can only be presented at a low frame rate.&& such as in poor network conditions..&& a subtitle (or an explanatory label) should always be on the screen if someones lips are moving. if a speaker speaks very slowly.&& then the subtitles will have to be slow.&& too - even if this means breaking the timing conventions. if a speaker speaks very fast.&& you have to edit as much as is necessary in order to meet the timing requirements (see timing)..&& your aim is to minimise lag between speech and the appearance of the subtitle. but sometimes.&& in order to meet other requirements (e.g. matching shots).&& you will find it difficult to avoid slipping slightly out of sync. in this case.&& subtitles should never appear more than 2 seconds after the words were spoken. this should be avoided by editing the previous subtitles..&& it is permissible to slip out of sync when you have a sequence of subtitles for a single speaker.&& providing the subtitles are back in sync by the end of the sequence..&& if the speech belongs to an out-of-shot speaker or is voice-over commentary.&& then its not so essential for the subtitles to keep in sync..&& do not bring in any dramatic subtitles too early. for example.&& if there is a loud bang at the end of.&& say.&& a two-second shot.&& do not anticipate it by starting the label at the beginning of the shot. wait until the bang actually happens.&& even if this means a fast timing..&& do not simultaneously caption different speakers if they are not speaking at the same time..&& it is likely to be less tiring for the viewer if shot changes and subtitle changes occur at the same time. many subtitles therefore start on the first frame of the shot and end on the last frame..&& if you have to let a subtitle hang over a shot change.&& do not remove it too soon after the cut. the duration of the overhang will depend on the content..&& avoid creating subtitles that straddle a shot change (i.e. a subtitle that starts in the middle of shot one and ends in the middle of shot two). to do this.&& you may need to split a sentence at an appropriate point.&& or delay the start of a new sentence to coincide with the shot change..&& authoring tools may use automated shot detection to avoid this scenario..&& if one shot is too fast for a subtitle.&& then you can merge the speech for two shots – provided your subtitle then ends at the second shot change..&& bear in mind.&& however.&& that it will not always be appropriate to merge the speech from two shots: e.g. if it means that you are thereby giving the game away in some way. for example.&& if someone sneezes on a very short shot.&& it is more effective to leave the atchoo! on its own with a fast timing (or to merge it with what comes afterwards) than to anticipate it by merging with the previous subtitle..&& where possible.&& avoid extending a subtitle into the next shot when the speaker has stopped speaking.&& particularly if this is a dramatic reaction shot..&& never carry a subtitle over into the next shot if this means crossing into another scene or if it is obvious that the speaker is no longer around (e.g. if they have left the room)..&& some film techniques introduce the soundtrack for the next scene before the scene change has occurred. if possible.&& the subtitler should wait for the scene change before displaying the subtitle. if this is not possible.&& the subtitle should be clearly labelled to explain the technique..&& john: and what have we here?.&& several techniques can be used to assist the viewer in identifying speakers. the bbcs preferred techniques are colour and single quotes.&& but other techniques exist in legacy subtitle files and subtitles repurposed from non-uk sources. re-use of existing files with legacy techniques is acceptable.&& but unless specifically requested.&& new content should not use legacy techniques..&& the available techniques include:.&& use colours to distinguish speakers from each other (see colours). this is the preferred method for identifying speakers..&& where the speech for two or more speakers of different colours is combined in one subtitle.&& their speech runs on: i.e. you dont start a new line for each new speaker..&& did you see jane? i thought she went home..&& however.&& if two or more white text speakers are interacting.&& you have to start a new line for each new speaker.&& preceded by a dash..&& by convention.&& the narrator is indicated by a yellow colour..&& this is a legacy technique that is no longer used in new content for identifying in-vision speakers (it may be present in files created before it was deprecated). use colour instead..&& horizontal positioning is used in combination with arrows to indicate out-of-vision voices..&& broadcast where colours cannot be used you can distinguish between speakers with placing..&& put each piece of speech on a separate line or lines and place it underneath the relevant speaker. you may have to edit more to ensure that the lines are short enough to look placed..&& try to make sure that pieces of speech placed right and left are joined at the hip if possible.&& so that the eye does not have to leap from one side of the screen to the other..&& not:.&& when characters move about while speaking.&& the caption should be positioned at the discretion of the subtitler to identify the position of the speaker as clearly as possible..&& this is a legacy technique that is no longer used for new content (but may be present in files created before it was deprecated or sourced from outside the uk). use colour to indicate a change of speaker..&& if colour cannot be used (or if colour is being used but two consecutive speakers are both assigned the same colour).&& put each piece of speech on a separate line and insert a white dash (not a hyphen) before each piece of speech.&& thereby clearly distinguishing different speakers lines. if possible.&& align the dashes so that they are proud of the text.&& although not all formats support this well..&& – found anything? – if this is the next new weapon.&& were in big trouble..&& the longest line should be centred on the screen.&& with the shorter line/lines left-aligned with it (not centred). if one of the lines is long.&& inevitably all the text will be towards the left of the screen.&& but generally the aim is to keep the lines in the centre of the screen..&& note that dashes only work as a clear indication of speakers when each speaker is in a separate consecutive shot..&& if you need to distinguish between an in-vision speaker and a voice-over speaker.&& use single quotes for the voice-over.&& but only when there is likely to be confusion without them (single quotes are not normally necessary for a narrator.&& for example). confusion is most likely to arise when the in-vision speaker and the voice-over speaker are the same person..&& put a single quote-mark at the beginning of each new subtitle (or segment.&& in live).&& but do not close the single quotes at the end of each subtitle/segment - only close them when the person has finished speaking.&& as is the case with paragraphs in a book..&& ive lived in the lake district since i was a boy..&& i never want to leave this area. ive been very happy here..&& i love the fresh air and the beautiful scenery..&& if more than one speaker in the same subtitle is a voice-over.&& just put single quotes at the beginning and end of the subtitle..&& what do you think about it? im not sure..&& the single quotes will be in the same colour as the adjoining text..&& when two white text speakers are having a telephone conversation.&& you will need to distinguish the speakers. using single quotes placed around the speech of the out-of-vision speaker is the recommended approach. they should be used throughout the conversation.&& whenever one of the speakers is out of vision..&& hello. victor meldrew speaking. hello.&& mr meldrew. im calling about your car..&& single quotes are not necessary in telephone conversations if the out-of-vision speaker has a colour..&& double quotes ... can suggest mechanically reproduced speech.&& e.g. radio.&& loudspeakers etc..&& or a quotation from a person or book. start the quote with a capital letter:.&& he said.&& youre so tall..&& generally.&& colours should be used to identify speakers. however.&& when an out-of-shot speaker needs to be distinguished from an in-shot speaker of the same colour.&& or when the source of off-screen/off-camera speech is not obvious from the visible context.&& insert a ‘greater than’ (>) or ‘less than’ (<) symbols to indicate the off-camera speaker..&& if the out-of-shot speaker is on the left or right.&& type a left or right arrow (< or >) next to his or her speech and place the speech to the appropriate side. left arrows go immediately before the speech.&& followed by one space; right arrows immediately after the speech.&& preceded by one space..&& do come in. are you sure? >.&& when are you leaving? < i was thinking of going at around 8 oclock in the evening..&& when i find out where he is.&&    youll be the first to know. >.&& not:.&& when i find out where he is.&& > youll be the first to know..&& if possible.&& make the arrow clearly visible by keeping it clear of any other lines of text.&& i.e. the text following the arrow and the text in any lines below it are aligned. however.&& not all formats support hanging indent well..&& non-breaking spaces can be inserted to simulate the indent behaviour reasonably closely..&& < when i find out where he is.&&    youll be the first to know.&& the arrows are always typed in white regardless of the text colour of the speaker..&& if an off-screen speaker is neither to the right nor the left.&& but straight ahead.&& do not use an arrow..&& online arrow characters (← and →) can be used instead of < and > for online-only subtitles..&& if you are unable to use any other technique.&& use a label to identify a speaker.&& but only if it is unclear who was speaking or when more than four characters are speaking.&& requiring a shared colour. type the name of the speaker in white caps (regardless of the colour of the speakers text).&& immediately before the relevant speech..&& if there is time.&& place the speech on the line below the label.&& so that the label is as separate as possible from the speech. if this is not possible.&& put the label on the same line as the speech.&& centred in the usual way..&& james: what are you doing with that hammer?.&& james: what are you doing?.&& if you do not know the name of the speaker.&& indicate the gender or age of the speaker if this is necessary for the viewers understanding:.&& man: i was brought up in a close-knit family..&& when two or more people are speaking simultaneously.&& do the following.&& regardless of their colours:.&& two people:.&& both: keep quiet! (all white text).&& three or more:.&& all: hello! (all white text).&& together: yes! no! (different colours with a white label).&& the subtitle file formats used by the bbc allow non-presentation metadata that can be used to include information about the speaker of a subtitle. including this information is useful for searching.&& identifying speakers and other purposes..&& speakers can be identified using the ttm:agent attribute defined in the tt/head/metadata element and referenced by a tt:span element. this should be used wherever possible in ebu-tt 1.0 documents and may be removed from ebu-tt-d documents prior to distribution.&& if the data is not needed by the presentation processor..&& most subtitles are typed in white text on a black background to ensure optimum legibility..&& colours are implemented using tts:color and tts:backgroundcolor applied to a tt:span..&& where two words are in different colours the space must be placed within one of the tt:span elements.&& usually as the first character of the second span..&& background colours are no longer used. use labels to identify non-human speakers:.&& robot: hello.&& sir.&& use left-aligned sound labels for alerts:.&& buzzer.&& a limited range of colours can be used to distinguish speakers from each other. in order of priority:.&& colour.&& rgb hex.&& notes.&& white.&& #ffffff.&& yellow.&& #ffff00.&& cyan.&& #00ffff.&& green.&& #00ff00.&& in css.&& ebu-tt and ttml this is named colour lime..&& all of the above colours must appear on a black background to ensure maximum legibility..&& once a speaker has a colour.&& s/he should keep that colour. avoid using the same colour for more than one speaker - it can cause a lot of confusion for the viewer..&& the exception to this would be content with a lot of shifting main characters like eastenders.&& where it is permissible to have two characters per colour.&& providing they do not appear together. if the amount of placing needed would mean editing very heavily.&& you can use green as a floater: that is.&& it can be used for more than one minor character.&& again providing they never appear together..&& white can be used for any number of speakers. if two or more white speakers appear in the same scene.&& you have to use one of a number of devices to indicate who says what - see identifying speakers..&& subtitle fonts are determined by the platform.&& the delivery mechanism and the client as detailed below. since fonts have different character widths.&& the final pixel width of a line of subtitles cannot be accurately determined when authoring. see also line breaks..&& to minimise the risk of unwanted line wrapping.&& use a wide font such as reith sans.&& verdana or tiresias when authoring the subtitles. presentation processors usually use a narrower font (e.g. arial) so the rendered line will likely fit within the authored area. note that platforms may use different reference fonts when resolving the generic font family name specified in the subtitle file. for example.&& the hbbtv standard maps both default and proportionalsansserif to tiresias.&& whereas imsc maps proportionalsansserif only to any font with substantially the same dimensions for rendered text as arial. see also conformance with imsc 1.0.1 text profile..&& platform.&& delivery.&& description.&& broadcast.&& dvb.&& broadcast.&& teletext.&& online.&& ip (xml).&& the final displayed size of closed captions text is determined by multiple factors: the instructions in the subtitle file.&& the processor and the set of installed fonts available to it.&& the device screen size and resolution and (on some devices) also user-defined preferences..&& while it is not possible (or advisable) to pre-determine the final subtitle size.&& adhering to the below guidelines will ensure that subtitles are legible at a typical distance from the device and that lines do not reflow or overflow for the vast majority of users. in particular.&& the final size should never be larger than the authored size so that the subtitler can ensure that important parts of the of the video are not obscured..&& font size should be set to fit within a line height of 8% of the active video height. use mixed upper and lower case. this font height is the largest size needed for presentation and is an authoring requirement..&& use a wide font such as reith sans when authoring subtitles (see fonts and tts:fontfamily). if that is not the font used to present it.&& then the alternative is likely to be a narrower font.&& so if you author in a wide font you can be reasonably confident that lines will not reflow..&& no changes need to be made to other styling attributes to accommodate processors potentially using a smaller font.&& however care needs to be taken when positioning subtitles in case a smaller font is used.&& as the following examples show:.&& authored font size.&& correct positioning:.&& the processor displays the larger font size.&& as authored. the region (not displayed) is indicated with a dotted line..&& reduced font size.&& wrong positioning:.&& the regions tts:displayalign is set to before so with a smaller font size the text moves up and the second line obscures the mouth..&& reduced font size.&& correct positioning:.&& to avoid this.&& set the regions tts:displayalign property to center or after..&& .&& authored font size.&& large region:.&& line breaks were used to position the subtitles lower within the region..&& reduced font size.&& large region:.&& the line breaks are resized with the rest of the text..&& reduced font size.&& defined region:.&& better to define the region so that it does not cover the face and avoid white space..&& see also additional adjustments for reith sans font..&& the font size is determined by tts:fontsize in combination with ttp:cellresolution..&& the 8% value originates in teletext.&& where it is approximately the height of a double height line.&& with the teletext rendering area covering around 90% of the video area height.&& as is typical when they are rendered within a safe area which accommodates overscan. we currently broadcast teletext subtitles on our digital satellite platforms: by connecting a television to a set top box using for example a scart connector it is still possible to display subtitles in this way. the double height line was used instead of a single height line for readability when commonly used television sizes were much smaller than todays median sizes (see bbc r&d white paper 287 (pdf) for relevant research on this)..&& depending on device size.&& viewing distance.&& screen resolution etc..&& a processor (such as a player) may choose to reduce (but not to increase) the authored font size so that the final presentation font size is smaller than the authored font size. for example.&& on a very large tv the subtitles may appear too large when displayed at the original authored size.&& so the processor can apply a scaling factor.&& or a multiplier of less than 1.&& to the value of tts:fontsize..&& for most screen sizes.&& the preferred font size is between 0.6 and 0.8 times the required authoring font size. for small mobile phones (e.g. 4 diagonal screen size) the presentation size should be the unmodified authored font size (i.e. a multiplier of 1)..&& along with reading distance.&& the physical height of the video when displayed on the devices screen is the most direct determinant of font size as a proportion of video height. in practice.&& however.&& a processor may not know the actual physical height and may have to rely on other data.&& for example pixel size and resolution (which may not be reliable indicators of physical size). the examples below illustrate devices and their recommended multipliers. for devices that support configurable sizes.&& a recommended range is shown. when the processor cannot determine the screen size.&& it should use the unmodified authored size to mitigate the risk of illegibly small text (i.e. default to a multiplier of 1)..&& in the absence of other information.&& a default size of 0.5° subtended at the eye may be used to derive the default line height and calculate the multiplier.&& however this may be too small for some devices..&& see also additional adjustments for reith sans font..&& when scaling down the font size.&& the processor should respect all other styling attributes. subtitle text should be scaled by applying the multiplier to the values of tts:fontsize and ebutts:linepadding. in ebu-tt-d line height is specified as a percentage of font size.&& so its computed value scales proportionally without having to modify the value of tts:lineheight..&& ebu-tt-d most sans-serif fonts used on the web have a normal line height of around 120% of the font size. this is specified within the font file by adding up the ascender.&& descender and line gap metrics. however reith sans has a wider line spacing.&& of around 133%. if too small a line height is used for the font size.&& then descenders can get hidden by the background area of the next line.&& which is highly undesirable..&& this presents an authoring difficulty: given that the requirements set out in this document are to fit the text within a line spacing of 8% of the video height.&& and the line spacing is based on the line height.&& the font size.&& and the font family.&& what combination of values should be used? the subtitle document specifies a list of fonts.&& as is required by these guidelines (see tts:fontfamily).&& however the correct combination of font size and line height differs depending on which font is actually used. when presenting using html and css.&& there is currently no mechanism to allow different settings to be applied based on the used font family; the normal value of tts:lineheight sets the line height based on the font size and the used font.&& but the resulting line height is unpredictable..&& to work around this.&& the following recommendations apply within documents:.&& the following recommendations apply within processors.&& if the reith sans font is being used and if the line height is less than 133%:.&& this approach should mean that a processor presents text at the desired line spacing regardless of whether reith sans is being used or not. although the text will appear slightly smaller in reith sans.&& the readability improvements associated with the design and spacing of reith sans are considered to offset any negative impact from the reduction in size. an added effect is that.&& since text generally renders wider in reith sans than other fonts.&& this approach also helps to mitigate against the risk of unwanted line breaks..&& the width of the background is calculated per line.&& rather than being the largest rectangle that can fit all the displayed lines in..&& the height of the background should be the height of the line; there should be no gap between background areas of successive lines..&& on both sides of every line.&& the background colour should extend by the width of 0.5 em..&& if the subtitles are intended for broadcast.&& a limited set of characters must be used..&& use alphanumeric and english punctuation characters:.&& a-z a-z 0-9 ! ) ( .&& . ? : -.&& the following characters can be used:.&& > < & @ # % + * = / £ $ ¢ ¥ © ® ¼ ½ ¾ ¾ ™.&& do not use accents..&& additional characters are supported but not normally used (see appendix 1).&& in addition to the characters above.&& the following characters are allowed if the subtitles are intended for online use only..&& online € ♫ (replaces # to indicate music) ← → (arrows can replace < and >)..&& in stl binary files.&& characters are encoded according to the table in appendix 1..&& subtitles delivered as xml (ebu-tt or ebu-tt-d) require that characters with special significance in xml are escaped:.&& quote marks within subtitle content dont have to be escaped. this is valid:.&& note.&& however.&& that curly quotes are not included in the list of allowed characters (some word processors transform straight quotes to curly ones automatically)..&& you may not be able directly to key in some of the other allowed characters. in this case you can use the unicode code. for example.&& use &#9835; for the character ♫.&& like this:.&& <span style=spanstyle>&#9835; happy birthday to you</span>.&& this will be displayed as:.&& ♫ happy birthday to you.&& you can view a list of unicode codes on the unicode website..&& the subtitles should overlay the video image.&& and may be placed within any black bars present within the video at the top or bottom..&& online for 16:9 video in landscape mode.&& subtitles should not be placed outside the central 90% vertically and the central 75% horizontally. regions can be extended horizontally to allow extra space for line padding..&& online for online subtitles.&& the subtitle rendering area (root container in ebu-tt-d) should exactly overlap the video player area unless controls or other overlays are visible.&& in which case the system should take steps to avoid the subtitles being obscured by the overlays. these could include:.&& the normally accepted position for subtitles is towards the bottom of the screen (teletext lines 20 and 22. line 18 is used if three subtitle lines are required). in obeying this convention it is most important to avoid obscuring ‘on-screen’ captions.&& any part of a speaker’s mouth or any other important activity. certain special programme types carry a lot of information in the lower part of the screen (e.g. snooker.&& where most of the activity tends to centre around the black ball) and in such cases top screen positioning will be a more acceptable standard..&& generally.&& vertical displacement should be used to avoid obscuring important information (such as captions) while horizontal displacement should be reserved for indicating speakers (see identifying speakers)..&& in some cases vertical displacement is not sufficient to avoid obscuring important information.&& for example when placing the captions above a graphic would cover a face. in such cases.&& horizontal positioning may be used..&& some platforms (e.g. online media player) support the display of subtitles under the image. if the media player is embedded in the page the layout should change to accommodate the subtitle display..&& when subtitles are displayed under the image area.&& vertical displacement will be ignored by the device and only horizontal positioning will be used (e.g. to identify speakers)..&& prepared subtitles are normally centre-aligned within a subtitle region that is horizontally centred relative to the video. live subtitles (cued blocks and cumulative) are normally left-aligned..&& other horizontal positioning may be used to:.&& in some cases vertical positioning is not sufficient to avoid obscuring important information.&& for example when placing the captions above a graphic would cover a face. in such cases.&& prioritise the important information over speaker identification.&& using horizontal positioning if appropriate..&& to indicate a sarcastic statement.&& use an exclamation mark in brackets (without a space in between):.&& charming(!).&& to indicate a sarcastic question.&& use a question mark in brackets:.&& youre not going to work today.&& are you(?).&& use caps to indicate when a word is stressed. do not overuse this device - text sprinkled with caps can be hard to read. however.&& do not underestimate how useful the occasional indication of stress can be for conveying meaning:.&& its the book i want.&& not the paper..&& i know that.&& but when will you be finished?.&& the word i is a special case. if you have to emphasise it in a sentence.&& make it a different colour from the surrounding text. however.&& this is rare and should be used sparingly and only when there is no other way to emphasise the word..&& use caps also to indicate when words are shouted or screamed:.&& help me!.&& however.&& avoid large chunks of text in caps as they can be hard to read..&& online subtitles for online exclusives can use italics for emphasis instead of caps (this is an experimental option and should not be included for general use). if this approach is adopted italics should be used in most instances.&& with caps reserved for heavier emphasis (e.g. shouting)..&& note that there is currently little research to indicate the effectiveness of italics for emphasis in subtitles..&& italics can be specified by using tts:fontstyle=italic on a style referenced by a tt:span..&& to indicate whispered speech.&& a label is most effective..&& whispers: dont let him near you..&& however.&& when time is short.&& place brackets around the whispered speech:.&& (dont let him near you.).&& if the whispered speech continues over more than one subtitle.&& brackets can start to look very messy.&& so a label in the first subtitle is preferable..&& brackets can also be used to indicate an aside.&& which may or may not be whispered..&& indicate questions asked in an incredulous tone by means of a question mark followed by an exclamation mark (no space):.&& you mean youre going to marry him?!.&& this section deals with accents in speech and dialects. for accented characters see typography..&& do not indicate accent as a matter of course.&& but only where it is relevant for the viewers understanding. this is rarely the case in serious/straight news reports.&& but may well be relevant in lighter factual items. for example.&& you would only indicate the nationality of a foreign scientist being interviewed on horizon or the ten o’clock news if it were relevant to the subject matter and the viewer could not pick the information up from any other source.&& e.g. from their actual words or any accompanying graphics. however.&& in a drama or comedy where a characters accent is crucial to the plot or enjoyment.&& the subtitles must establish the accent when we first see the character and continue to reflect it from then on..&& when it is necessary to indicate accent.&& bear in mind that.&& although the subtitlers aim should always be to reproduce the soundtrack as faithfully as possible.&& a phonetic representation of a speakers foreign or regional accent or dialect is likely to slow up the reading process and may ridicule the speaker. aim to give the viewer a flavour of the accent or dialect by spelling a few words phonetically and by including any unusual vocabulary or sentence construction that can be easily read. for a cockney speaker.&& for instance.&& it would be appropriate to include quite a few caffs.&& missus and aints.&& but not to replace every single dropped h and g with an apostrophe..&& you should not correct any incorrect grammar that forms an essential part of dialect.&& e.g. the cockney you was..&& a foreign speaker may make grammatical mistakes that do not render the sense incomprehensible but make the subtitle difficult to read in the given time. in this case.&& you should either give the subtitle more time or change the text as necessary:.&& i and my wife is being marrying four years since and are having four childs.&& yes.&& this could be changed to:.&& i and my wife have been married four years and have four childs.&& yes.&& the speech text alone may not always be enough to establish the origin of an overseas/regional speaker. in that case.&& and if it is necessary for the viewers understanding of the context of the content.&& use a label to make the accent clear:.&& american accent: all the evidence points to a plot..&& remember that what might make sense when it is heard might make little or no sense when it is read. so.&& if you think the viewer will have difficulty following the text.&& you should make it read clearly. this does not mean that you should always sub-edit incoherent speech into beautiful prose. you should aim to tamper with the original as little as possible - just give it the odd tweak to make it intelligible. (also see accents).&& the above is more applicable to factual content.&& e.g. news and documentaries. do not tidy up incoherent speech in drama when the incoherence is the desired effect..&& if a piece of speech is impossible to make out.&& you will have to put up a label saying why:.&& (slurred): but i love you!.&& avoid subjective labels such as unintelligible or incomprehensible or he babbles incoherently..&& speech can be inaudible for different reasons. the subtitler should put up a label explaining the cause..&& applause drowns speech.&& train drowns his words.&& music drowns speech.&& he mouths.&& long speechless pauses can sometimes lead the viewer to wonder whether the subtitles have failed. it can help in such cases to insert explanatory text such as:.&& introductory music.&& long pause.&& romantic music.&& if a speaker speaks very slowly or falteringly.&& break your subtitles more often to avoid having slow subtitles on the screen. however.&& do not break a sentence up so much that it becomes difficult to follow..&& if a speaker stammers.&& give some indication (but not too much) by using hyphens between repeated sounds. this is more likely to be needed in drama than factual content. letters to show a stammer should follow the case of the first letter of the word..&& im g-g-going home.&& w-w-what are you doing?.&& if a speaker hesitates.&& do not edit out the ums and ers if they are important for characterisation or plot. however.&& if the hesitation is merely incidental and the ums actually slow up the reading process.&& then edit them out. (this is most likely to be the case in factual content.&& and too many ums can make the speaker appear ridiculous.).&& when the hesitation or interruption is to be shown within a single subtitle.&& follow these rules:.&& to indicate a pause within a sentence.&& insert three dots at the point of pausing.&& then continue the sentence immediately after the dots.&& without leaving a space..&& everything that matters...is a mystery.&& you may need to show a pause between two sentences within one subtitle. for example.&& where a phone call is taking place and we can only witness one side of it.&& there may not be time to split the sentences into separate subtitles to show that someone we cant see or hear is responding. in this case.&& you should put two dots immediately before the second sentence..&& how are you? ..oh.&& im glad to hear that..&& a very effective technique is to use cumulative subtitles.&& where the first part appears before the second.&& and both remain on screen until the next subtitle. use this method only when the content justifies it; standard prepared subtitles should be displayed in blocks..&& if the speaker simply trails off without completing a sentence.&& put three dots at the end of his/her speech. if s/he then starts a new sentence.&& no continuation dots are necessary..&& hello.&& mr... oh.&& sorry! ive forgotten your name.&& if the unfinished sentence is a question or exclamation.&& put three dots (not two) before the question mark or exclamation mark..&& what do you think youre...?!.&& if a speaker is interrupted by another speaker or event.&& put three dots at the end of the incomplete speech..&& when the hesitation or interruption occurs in the middle of a sentence that is split across two subtitles.&& do the following:.&& where there is no time-lapse between the two subtitles.&& put three dots at the end of the first subtitle but no dots in the second one..&& i think... i would like to leave now..&& where there is a time-lapse between the two subtitles.&& put three dots at the end of the first subtitle and two dots at the beginning of the second.&& so that it is clear that it is a continuation..&& id like....&& ..a piece of chocolate cake.&& remember that dots are only used to indicate a pause or an unfinished sentence. you do not need to use dots every time you split a sentence across two or more subtitles..&& in humorous sequences.&& it is important to retain as much of the humour as possible. this will affect the editing process as well as when to leave the screen clear..&& try wherever possible to keep punchlines separate from the preceding text..&& where possible.&& allow viewers to see actions and facial expressions which are part of the humour by leaving the screen clear or by editing. try not to leave a subtitle on screen when the next shot contains no speech and shows the characters reaction.&& as this distracts from the reaction and spoils the punchline..&& never edit characters catchphrases..&& ebu-tt 1.0 documents should set ttm:role=music on the relevant tt:p or tt:span element to indicate that the contents represent music..&& all music that is part of the action.&& or significant to the plot.&& must be indicated in some way. if it is part of the action.&& e.g. somebody playing an instrument/a record playing/music on a jukebox or radio.&& then write the label in upper case:.&& she whistles a jolly tune.&& pop music on radio.&& military band plays swedish national anthem.&& if the music is incidental music (i.e. not part of the action) and well known or identifiable in some way.&& the label begins music: followed by the name of the music (music titles should be fully researched). music is in caps (to indicate a label).&& but the words following it are in upper and lower case.&& as these labels are often fairly long and a large amount of text in upper case is hard to read..&& music: the dance of the sugar plum fairy by tchaikovsky.&& music: god save the queen.&& music: a waltz by victor herbert.&& music: the swedish national anthem.&& (the swedish national anthem does not have quotation marks around it as it is not the official title of the music.).&& sometimes a combination of these two styles will be appropriate:.&& he hums god save the queen.&& she whistles the dance of the sugar plum fairy by tchaikovsky.&& if the music is incidental music but is an unknown piece.&& written purely to add atmosphere or dramatic effect.&& do not label it. however.&& if the music is not part of the action but is crucial for the viewer’s understanding of the plot.&& a sound-effect label should be used:.&& eerie music.&& song lyrics are almost always subtitled - whether they are part of the action or not. every song subtitle starts with a white hash mark (#) and the final song subtitle has a hash mark at the start and the end:.&& # these foolish things remind me of you #.&& there are two exceptions:.&& online instead of # the symbol.&& ♫ may be used..&& song lyrics should generally be verbatim.&& particularly in the case of well-known songs (such as god save the queen).&& which should never be edited. this means that the timing of song lyric subtitles will not always follow the conventional timings for speech subtitles.&& and the subtitles may sometimes be considerably faster..&& if.&& however.&& you are subtitling an unknown song.&& specially written for the content and containing lyrics that are essential to the plot or humour of the piece.&& there are a number of options:.&& nb: if you do have to edit.&& make sure that you leave any rhymes intact..&& song lyric subtitles should be kept closely in sync with the soundtrack. for instance.&& if it takes 15 seconds to sing one line of a hymn.&& your subtitle should be on the screen for 15 seconds..&& song subtitles should also reflect as closely as possible the rhythm and pace of a performance.&& particularly when this is the focus of the editorial proposition. this will mean that the subtitles could be much faster or slower than the conventional timings..&& there will be times where the focus of the content will be on the lyrics of the song rather than on its rhythm - for example.&& a humorous song like ernie by benny hill. in such cases.&& give the reader time to read the lyrics by combining song-lines wherever possible. if the song is unknown.&& you could also edit the lyrics.&& but famous songs like ernie must not be edited..&& where shots are not timed to song-lines.&& you should either take the subtitle to the end of the shot (if its only a few frames away) or end the subtitle before the end of the shot (if its 12 frames or more away)..&& all song-lines should be centred on the screen..&& this can be achieved by referencing a tt:region that is positioned centrally (horizontally).&& and a style with tts:textalign=center and ebutts:multirowalign either unspecified or set to auto..&& it is generally simpler to keep punctuation in songs to a minimum.&& with punctuation only within lines (when it is grammatically necessary) and not at the end of lines (except for question marks). you should.&& though.&& avoid full stops in the middle of otherwise unpunctuated lines. for example.&&.&& turn to wisdom. turn to joy there’s no wisdom to destroy.&& could be changed to:.&& # turn to wisdom.&& turn to joy there’s no wisdom to destroy.&& in formal songs.&& however.&& e.g. opera and hymns.&& where it could be easier to determine the correct punctuation.&& it is more appropriate to punctuate throughout..&& the last song subtitle should end with a full stop.&& unless the song continues in the background..&& if the subtitles for a song dont start from its first line.&& show this by using two continuation dots at the beginning:.&& # ..now i need a place to hide away # oh.&& i believe in yesterday. #.&& similarly.&& if the song subtitles do not finish at the end of the song.&& put three dots at the end of the line to show that the song continues in the background or is interrupted:.&& # i hear words i never heard in the bible... #.&& ebu-tt 1.0 sound effects should be labelled as such using an appropriate ttm:role (ttml1 link).&& for example by adding the attribute ttm:role=sound to the tt:p element..&& as well as dialogue.&& all editorially significant sound effects must be subtitled. this does not mean that every single creak and gurgle must be covered - only those which are crucial for the viewers understanding of the events on screen.&& or which may be needed to convey flavour or atmosphere.&& or enable them to progress in gameplay.&& as well as those which are not obvious from the action. a dog barking in one scene could be entirely trivial; in another it could be a vital clue to the story-line. similarly.&& if a man is clearly sobbing or laughing.&& or if an audience is clearly clapping.&& do not label..&& do not put up a sound-effect label for something that can be subtitled. for instance.&& if you can hear what john is saying.&& john shouts orders would not be necessary..&& sound-effect labels are not stage directions. they describe sounds.&& not actions:.&& gunfire.&& not:.&& they shoot each other.&& a sound effect should be typed in white caps. it should sit on a separate line and be placed to the left of the screen - unless the sound source is obviously to the right.&& in which case place to the right..&& there is no style attribute that enforces all caps; the text needs to be capitalised within the subtitle document..&& sound-effect labels should be as brief as possible and should have the following structure: subject + active.&& finite verb:.&& floorboards creak.&& john shouts orders.&& not:.&& creaking of floorboards.&& or.&& floorboards creaking.&& or.&& orders are shouted by john.&& there is no obvious value for ttm:role for such labels. the closest fit is probably description..&& if a speaker speaks in a foreign language and in-vision translation subtitles are given.&& use a label to indicate the language that is being spoken. this should be in white caps.&& ranged left above the in-vision subtitle.&& followed by a colon. time the label to coincide with the timing of the first one or two in-vision subtitles. bring it in and out with shot-changes if appropriate..&& if there are a lot of in-vision subtitles.&& all in the same language.&& you only need one label at the beginning - not every time the language is spoken..&& if the language spoken is difficult to identify.&& you can use a label saying translation:.&& but only if it is not important to know which language is being spoken. if it is important to know the language.&& and you think the hearing viewer would be able to detect a language change.&& then you must find an appropriate label..&& the way in which subtitlers convey animal noises depends on the content style. in factual wildlife.&& for instance.&& lions would be labelled:.&& lions roar.&& however.&& in an animation or a game.&& it may be more appropriate to convey animal noises phonetically. for instance.&& lions roar would become something like:.&& rrrarrgghhh!.&& in general.&& the numeral form should be used. however.&& you can spell out numbers when this is editorially justified as detailed below..&& the numbers 1-10 are often better spelled out:.&& ill see you in three days.&& ill see you in 3 days.&& but use the numeral with units:.&& it takes 1kj of energy to lift someone..&& it takes one kj of energy to lift someone..&& emphatic numbers are always spelled out:.&& she gave me hundreds of reasons.&& she gave me 100s of reasons.&& spell out any number that begins a sentence:.&& three days from now..&& 3 days from now..&& if there is more than one number in a sentence or list.&& it may be more appropriate to display them as numerals instead of words:.&& on her 21st birthday party.&& 54 guests turned up.&& consistency is important.&& so avoid.&& the score was three - 1.&& numerals over 4 digits must include appropriately placed commas:.&& there are 1.&&500 cats here..&& for sports.&& competitions.&& games or quizzes.&& always use numerals to display points.&& scores or timings..&& for displaying the day of the month.&& use the appropriate numeral followed by lowercase th.&& st or nd:.&& april 2nd..&& use the numerals plus the £ sign for all monetary amounts except where the amount is less than £1.00:.&& we paid £50..&& for amounts less than £1.00 the word pence should be used after the numeral:.&& 58 pence..&& if the word pound is used in sentence without referring to a specific amount.&& then the word must be used.&& not the symbol..&& see the list of supported characters for currency symbols you can use for broadcast and online..&& broadcast spell out other currencies.&& including euro (the euro symbol is not supported in teletext)..&& online use the correct unicode symbol for the currency.&& e.g. the euro symbol €..&& all subtitle documents should be encoded in utf-8.&& however the actual set of code points usable in an ebu-tt 1.0 document intended for broadcast presentation is currently restricted to the teletext character set. no such restriction exists for ebu-tt-d documents intended for online-only presentation.&& however care should be taken that there is a reasonable expectation that the presentation device will have a font installed that contains glyphs for all the code points used..&& indicate the time of the day using numerals in a manner which reflects the spoken language:.&& the time now is 4:30.&& the alarm went off at 4 o’clock.&& never use symbols for units of measurement..&& abbreviations can be used to fit text in a line.&& but if the unit of measurement is the subject do not abbreviate..&& a cumulative subtitle consists of two or three parts - usually complete sentences. each part will appear on screen at a different time.&& in sync with its speaker.&& but all parts will have an identical out-cue..&& cumulatives should only be used when there is a good reason to delay part of the subtitle (e.g. dramatic impact/song rhythm) and no other way of doing it - i.e. there is insufficient time available to split the subtitle completely..&& this is most likely to happen in an interchange between speakers.&& where the first speaker talks much faster than the second. delaying the speech of the second person by using a cumulative means that the first subtitle will still be on screen long enough to be read.&& while at the same time the speech is kept in sync..&& cumulatives are particularly useful in the following situations:.&& make sure there is sufficient time to read each segment of a cumulative.&& especially the final one. consider leaving the final part on screen for a slightly longer time to allow the viewer to scan the line again..&& if you use cumulatives in children’s content.&& observe children’s timings..&& further detail on how to specify cumulatives is described in tt:p and tt:span. where possible.&& each individual word that forms part of a cumulative subtitle should be included in the subtitle document exactly once.&& with appropriate timing specified by putting groups of words that appear with the same timing within a tt:span with begin and end attributes. this allows the plain text of the subtitle transcript to be extracted more easily since there is no need to de-duplicate words..&& there is an alternative approach in which multiple tt:p elements are each timed to follow on from each other.&& with the first words being a repeat of the words in the previous tt:p and additional words appended. this approach creates the same visual effect but should be avoided..&& be wary of timing the appearance of the second/third line of a cumulative to coincide with a shot-change.&& as this may cause the viewer to reread the first line..&& remember that using a cumulative will often mean that more of the picture is covered. don’t use cumulatives if they will cover mouths.&& or other important visuals.&& stick to a maximum of three lines unless you are subtitling a fast quiz like university challenge where it is preferable to show the whole question in one subtitle and where you will not be obscuring any interesting visuals.&& the following guidelines are recommended for the subtitling of programmes targeted at children below the age of 11 years (itc)..&& there should be a match between the voice and subtitles as far as possible..&& a strategy should be developed where words are omitted rather than changed to reduce the length of sentences..&& for example.&&.&& can you think why they do this?.&& why do they do this?.&& can you think of anything you could do with all the heat produced in the incinerator?.&& what could you do with the heat from the incinerator?.&& difficult words should also be omitted rather than changed. for example:.&& first thing were going to do is make his big.&& ugly.&& bad-tempered head..&& first were going to make his big.&& ugly head..&& all she had was her beloved rat collection..&& she only had her beloved rat collection..&& where possible the grammatical structure should be simplified while maintaining the word order..&& you can see how metal is recycled if we follow the aluminium..&& see how metal is recycled by following the aluminium..&& we need energy so our bodies can grow and stay warm..&& we need energy to grow and stay warm..&& difficult and complex words in an unfamiliar context should remain on screen for as long as possible. few other words should be used. for example:.&& nurse.&& well test the reflexes again..&& nurse.&& well test the reflexes..&& air is displaced as water is poured into the bottle..&& the water in the bottle displaces the air..&& care should be taken that simplifying does not change the meaning.&& particularly when meaning is conveyed by the intonation of words..&& often.&& the aim of schools programmes is to introduce new vocabulary and to familiarize pupils with complex terminology. when subtitling schools programmes.&& introduce complex vocabulary in very simple sentences and keep it on screen for as long as possible..&& in general.&& subtitles for children should follow the speed of speech. however.&& there may be occasions when matching the speed of speech will lead to subtitle rate that is not appropriate for the age group. the producer/assistant producer should seek advice on the appropriate subtitle timing for a programme..&& there will be occasions when you will feel the need to go faster or slower than the standard timings - the same guidelines apply here as with adult timings (see timing). you should however avoid inconsistent timings e.g. a two-line subtitle of 6 seconds immediately followed by a two-line subtitle of 8 seconds.&& assuming equivalent scores for visual context and complexity of subject matter..&& more time should be given when there are visuals that are important for following the plot.&& or when there is particularly difficult language..&& do not simplify sentences.&& unless the sentence construction is very difficult or sloppy..&& avoid splitting sentences across subtitles. unless this is unavoidable.&& keep to complete clauses..&& vocabulary should not be simplified..&& there should be no extra spaces inserted before punctuation..&& the subtitler should have a direct pre-broadcast-encoding feed from the broadcaster.&& so they can hear the output a few seconds earlier than if relying on the broadcast­ service..&& maintain a regular subtitle output with no long gaps (unless it is obvious from the picture that there is no commentary) even if this means subtitling the picture or providing background information rather than subtitling the commentary..&& aim for continuity in subtitles by following through a train of thought where possible.&& rather than sampling the commentary at intervals..&& do not subtitle over existing video captions where avoidable (in news.&& this is often unavoidable.&& in which case a speakers name can be included in the subtitle if available)..&& find out specialist vocabulary.&& and specific editorial guidelines for the genre (e.g. sport). familiarise yourself with prepared segments that have been subtitled and their place in the running order.&& but be prepared for the order to change..&& when available to the subtitler.&& pre-recorded segments should be subtitled prior to broadcast (not live) and cued out at the appropriate moment..&& when cueing prepared texts for scripted parts of the programme:.&& subtitles should use upper and lower case as appropriate..&& standard spelling and punctuation should be used at all times.&& even on the fastest programmes..&& produce complete sentences even for short comments because this makes the result look less staccato and hurried..&& strong or inappropriate language must not appear on screen in error..&& for news programmes.&& current affairs programmes and most other genres.&& subtitles should be verbatim.&& up to a subtitling speed of around 160-180wpm. above that speed.&& some editing would be expected..&& for some genres.&& such as in-play sporting action.&& the subtitling may be edited more heavily so as to convey vital commentary information while allowing better access to the visuals. (bbc-spg).&& any serious or misleading errors in real-time subtitling should be corrected clearly and promptly. the correction should be preceded by two dashes:.&& the minster’s shrew is unchanged -- view..&& however be aware that too many on-air corrections.&& or corrections that are not sufficiently prompt.&& can actually make the subtitles harder for a viewer to follow..&& ultimately the subtitler may have to decide whether to make a correction or omit some speech in order to catch up. sometimes this can be done without detracting from the integrity of the subtitling.&& but this is not always the case. do not correct minor errors where the reader can reasonably be expected to deduce the intended meaning (e.g. typos and misspellings)..&& if necessary.&& an apology should be made at the end of the programme. if possible.&& repeat the subtitle with the error corrected..&& live subtitles should appear word by word.&& from left to right.&& to allow maximum reading time. live subtitles are justified left (not centred)..&& live subtitles should be placed in an appropriately sized tt:region with a preset tts:origin x coordinate (for left to right text; for right to left text ensure the right edge is preset)..&& a style with tts:textalign set to start (always works) or left for left to right text only or right for right to left text only should be used..&& ebutts:multirowalign should be avoided (i.e. left unset.&& or set to auto) since it can result in lines being moved horizontally whenever a new word appears..&& two-lines of scrolling text should be used..&& for live subtitling.&& use a reduced set of formatting techniques. focus on colour and vertical positioning..&& subtitle vertical position can be set by referencing a tt:region with appropriate tts:origin.&& tts:extent and tts:displayalign attributes..&& an alternative strategy is to insert <tt:br/> elements as necessary; for example if tts:displayalign=after then every <tt:br/> element appended after a subtitle will raise that subtitle by the height of the line. although using line breaks for positioning is discouraged for prepared subtitles (see authoring font size).&& this technique saves time when live subtitling. note that if the region height is exceeded by entering too many line breaks.&& lines can fall off the top.&& and be clipped..&& if a subtitle needs to be moved while it is visible and inserting <tt:br/> elements is not possible then the <tt:p> should be ended and a new <tt:p> begun that references a differently positioned region. that new <tt:p> can contain the same words and style references..&& the format for prepared subtitles depends on the delivery route and platform. in general.&& subtitles for programmes scheduled for linear broadcast.&& including iplayer-first.&& are delivered to playout and to file based delivery as stl and ebu-tt part 1 files. online-only content not scheduled for linear broadcast is delivered as ebu-tt-d files.&& typically for uploading into a bbc content management system. there are some exceptions to this.&& so if in doubt ask your commissioning editor about the correct delivery route and files formats..&& format.&& extension.&& specification.&& notes.&& ebu-stl.&& .stl.&& https://tech.ebu.ch/publications/tech3264.&& required for linear broadcast legacy systems..&& ebu-tt.&& .xml.&& https://tech.ebu.ch/docs/tech/tech3350v1-0.pdf (to be replaced by v1.1).&& with the stl embedded. see below..&& note that the above standards support a larger set of characters than is allowed by the bbc. for linear playout.&& all characters for presentation must be in the set in appendix 1..&& the file name must follow this pattern: [uid with slash removed].stl.&& for example:.&& uid.&& file name.&& drib511w/02.&& drib511w02.stl.&& subtitles must conform to the ebu specification tech 3264-e. however.&& the bbc requires certain values in particular elements of the general subtitle information block. see the table below..&& gsi block data.&& short.&& value.&& notes.&& example.&& code page number.&& cpn.&& 850.&& required.&& disk format code.&& dfc.&& stl25.01.&& required.&& display standard code.&& dsc.&& 1.&& required.&& character code table.&& cct.&& 00.&& required.&& language code.&& lc.&& 09.&& required.&& original programme title.&& opt.&& required.&& snow white.&& original episode title.&& oet.&& [a tape number].&& required if a tape number exists..&& hds147457.&& translated programme title.&& tpt.&& required if translated.&& translated episode title.&& tet.&& optional.&& series 1.&& episode 1.&& translators name.&& tn.&& [up to 32 characters].&& optional.&& jane doe.&& translators contact details.&& tcd.&& [up to 32 characters].&& optional.&& subtitle list reference code.&& slr.&& [on-air uid].&& broadcast required for prepared linear.&& abc d123w/02.&& creation date.&& cd.&& [date in format yymmdd].&& required.&& 150125.&& revision date.&& rd.&& [date in format yymmdd].&& required.&& 150128.&& revision number.&& rn.&& [0 – 99].&& required.&& 1.&& total number of tti blocks.&& tnb.&& [0 – 99999].&& required. must accurately reflect the number of blocks in the file..&& 767.&& total number of subtitles.&& tns.&& [0 – 99999].&& required. must accurately reflect the number of subtitles in the file..&& 767.&& total number of subtitle groups.&& tng.&& 1.&& required. fixed at 1..&& 1.&& maximum number of displayable characters in any text row.&& mnc.&& [0 – 99].&& required.&& 37.&& maximum number of displayable rows.&& mnr.&& 11.&& required.&& time code: status.&& tcs.&& 1.&& required.&& time code: start-of-programme.&& tcp.&& [time in format hhmmssff].&& required.&& 10000000.&& 20000000.&& time code: first in-cue.&& tcf.&& [time in format hhmmssff].&& required. the timecode of the first in-cue in the subtitle list..&& total number of disks.&& tnd.&& [number of files].&& required. almost always 1. for very long programmes where the subtitles must be split into multiple files.&& contact the commissioning editor..&& 1.&& disk sequence number.&& dsn.&& [the file number of this file].&& required. always 1 when there is one stl file in the sequence. for very long programmes where the subtitles must be split into multiple files.&& contact the commissioning editor..&& 1.&& country of origin.&& co.&& [3-letter country code].&& required.&& gbr.&& publisher.&& pub.&& [up to 32 characters].&& required.&& company name.&& editors name.&& en.&& [up to 32 characters].&& required.&& john doe.&& editors contact details.&& ecd.&& [up to 32 characters].&& optional.&& spare bytes.&& sb.&& [empty].&& optional.&& user-defined area.&& uda.&& [up to 576 characters].&& not used..&& the time code out (tco) values in stl files are inclusive of the last frame; in other words the subtitle shall be visible on the frame indicated in the tco value but not on subsequent frames. this differs from the end time expressions in ebu-tt and ttml.&& which are exclusive..&& for example.&& in an stl file a subtitle with a tco of 10:10:10:20 would map in an ebu-tt document to an end attribute value of 10:10:10:21..&& it is common practice to place metadata (programme id.&& name etc.) in a subtitle at the beginning of the file. this first subtitle is typically known as subtitle zero and is used for example to check that the correct subtitles have been loaded during pre-roll. a subtitle zero is not intended to be broadcast.&& and this is achieved by setting the in-cue and out-cue times for this subtitle earlier than the first timecode value that occurs in the corresponding media (for example.&& setting subtitle zero to display between 00:00:00 and 00:00:02 when the programme starts at 10:00:00)..&& subtitle zero is optional but common in legacy stl files. when an stl file is embedded in an ebu-tt document.&& the subtitle zero must be handled as detailed below:.&& subtitle zero may be included in the body of the document..&& if the subtitle zero is included in the embedded stl file and is included in the body of the ebu-tt document then they shall be identical..&& if subtitle zero is not included in the embedded stl file then the ebu-tt file shall not contain a subtitle zero..&& subtitle zero may be included in the body of the document..&& if a subtitle zero is included in the embedded stl file then its content shall be copied into ebuttm:subtitlezero element..&& if the subtitle zero is included in the embedded stl file and is included in the body of the ebu-tt document then they shall be identical. see ebuttm:documentmetadata..&& if a subtitle zero is not included in the embedded stl file then the element ebuttm:subtitlezero shall not be included..&& ebu-tt is the bbcs strategic file format for capturing subtitles and associated metadata. the bbc needs to continue to operate systems that use older formats such as teletext: in cases where those legacy systems impose constraints.&& those constraints are incorporated into these guidelines. in the future.&& as legacy systems are phased out.&& the constrained requirements will be relaxed. where we have control over the distribution and presentation chain those constraints are already removed; for example the requirements for ebu-tt-d delivery for online distribution allow greater flexibility in how to achieve the presentation requirements..&& teletext and stl constraints.&& teletext is still used on some platforms to carry and/or display subtitles; the bbc expects ebu-tt files that preserve some aspects of this technology (or that have been converted from stl files). for example.&& teletext uses a fixed grid of 40x24 cells that (for bbc use) must be preserved in ebu-tt files authored for linear broadcast (ttp:cellresolution=40 24).&& even though ebu-tt does not require use of this specific grid. subtitles authored for non-linear platforms are already free of these constraints. for example.&& ebu-tt-d files for online distribution can use the default cell resolution of 32x15 (see ebu-tt-d cell resolution)..&& when present.&& the stl file(s) must be embedded in an ebu-tt document. see below for further details..&& embedded stl files may be omitted if the subtitles are created live and then captured..&& avoid pixel units.&& although ebu-tt allows pixel length units.&& the bbc requires that only percent or cell units are used. pixel length values are sometimes misunderstood in the context of video resolutions. it is less confusing to avoid use of pixel units when authoring resolution-independent content. it is also simpler to transform ebu-tt part 1 into ebu-tt-d if pixel units are not used.&& since no calculations need to be made relating pixel values to the tts:extent attribute of the tt:tt element..&& ebu-tt part 1 versions.&& the bbc currently uses version 1.0 of ebu-tt.&& but intends to move to version 1.1. significant changes were made to the metadata structure between the versions.&& with some elements moved from the bbc to the ebu namespace. both versions are given here but only v1.0 specifications are stable. delivery of v1.1 files must be approved in advance and the specification confirmed..&& the file name has this format:.&& [ebuttm:documentidentifier]-prerecorded.xml.&& see the rules for constructing ebuttm:documentidentifier below..&& the following table lists standard ebu-tt elements and their required values..&& attribute.&& value.&& notes.&& example.&& xml:space.&& optional.&& preserve.&& ttp:timebase.&& smpte.&& required.&& ttp:framerate.&& required. must match the frame rate of the associated video..&& 25.&& ttp:frameratemultiplier.&& required if ttp:timebase=smpte..&& 1 1.&& ttp:markermode.&& discontinuous.&& required..&& ttp:dropmode.&& required when ttp:timebase=smpte..&& nondrop.&& ttp:cellresolution.&& 40 24.&& required. this value is used to preserve teletext single line height.&& where the assumption is that a teletext font is readable with a line height equal to 100% of the font size.&& for both single and double height lines i.e. tts:fontsize=1c 1c or tts:fontsize=1c 2c and tts:lineheight=100%. it is also possible to define or configure in teletext-based implementations that tts:lineheight=normal shall be interpreted as 100% in the context of a document originally authored to teletext constraints..&& this approach is likely to change when we are no longer authoring to teletext constraints..&& xml:lang.&& en-gb.&& the below table lists the required document metadata values for bbc subtitle documents based on ebu-tt part 1 v1.&& which is the current actively used format..&& element.&& value.&& notes.&& example.&& ebuttm:documentebuttversion.&& v1.0.&& required.&& ebuttm:documentidentifier.&& see below..&& required if not live.&& abcd123w02-1.&& ebuttm:documentoriginatingsystem.&& [software and version].&& ttproducer 1.7.0.0.&& ebuttm:documentcopyright.&& bbc.&& ebuttm:documentreadingspeed.&& [calculate per document].&& 176.&& ebuttm:documenttargetaspectratio.&& 4:3 (16:9 allowed for online use only).&& ebuttm:documentintendedtargetformat.&& required if also targeting broadcast applications..&& wstteletextsubtitles.&& ebuttm:documentoriginalprogrammetitle.&& snow white.&& ebuttm:documentoriginalepisodetitle.&& series 1.&& episode 1.&& ebuttm:documentsubtitlelistreferencecode.&& [uid].&& abc d123w/02.&& ebuttm:documentcreationdate.&& [date in format yyyy-mm-dd].&& 2015-01-20.&& ebuttm:documentrevisiondate.&& [date in format yyyy-mm-dd].&& required if a revision.&& 2015-01-20.&& ebuttm:documentrevisionnumber.&& 1.&& ebuttm:documenttotalnumberofsubtitles.&& [calculated per document].&& 767.&& ebuttm:documentmaximumnumberofdisplayablecharacterinanyrow.&& 37.&& ebuttm:documentstartofprogramme.&& 10:00:00:00 | 20:00:00:00.&& required. value must match the timecode of the start of the programme content..&& ebuttm:documentcountryoforigin.&& gbr.&& required.&& ebuttm:documentpublisher.&& [string].&& required.&& company name.&& ebuttm:documenteditorsname.&& [string].&& required.&& john doe.&& the document identifier is obtained by reading the string from the embedded stls gsi reference code field (on air uid) and then deleting any spaces and / character. this string is appended with a hyphen and the value of the revision number field in the stls gsi block..&& bbc specifications based on version 1.1 of ebu-tt part 1 are still in development. information in this section is therefore subject to change..&& the below table lists the required document metadata values for bbc subtitle documents based on ebu-tt part 1 v1.1.&& which is not yet in active use..&& element.&& value.&& notes.&& example.&& ebuttm:conformstostandard.&& urn:ebu:tt:exchange:2015-09.&& required.&& ebuttm:documentidentifier.&& [onair uid]-[subtitle file version].&& required if not live.&& abcd123w02-1.&& ebuttm:documentoriginatingsystem.&& [software and version].&& ttproducer 1.7.0.0.&& ebuttm:documentcopyright.&& bbc.&& ebuttm:documentreadingspeed.&& [calculated per document].&& 176.&& ebuttm:documenttargetaspectratio.&& 4:3 (16:9 allowed for online use only).&& ebuttm:documenttargetactiveformatdescriptor.&& [one of the afd codes specified in smpte st 2016-1:2009 table 1].&& ebuttm:documentintendedtargetbardata.&& [bar data from smpte st 2016-1:2009 table 3. note additional attributes may be required. see the ebu-tt specification].&& optional.&& ebuttm:documentintendedtargetformat.&& enhanced teletext level 1 | dvbbitmapsubtititles | ebu-tt-d.&& all three are required.&& each in its own ebuttm:documentintendedtargetformat element. the uri of the classification scheme should be specified in the link attribute with the term id. for example.&& https://www.ebu.ch/metadata/cs/ebu-ttsubtitletargetformatcodecs.xml#1.11 for ebu-tt-d..&& ebuttm:documentcreationmode.&& live | prepared.&& required.&& ebuttm:documentcontenttype.&& hardofhearingsubtitles.&& required.&& ebuttm:sourcemediaidentifier.&& [onair uid][version #]-[sub file version].&& required.&& abcd123w02-1.&& ebuttm:relatedmediaidentifier.&& ebuttm:relatedobjectidentifier.&& optional.&& ebuttm:appliedprocessing.&& optional.&& ebuttm:relatedmediaduration.&& optional.&& ebuttm:documentbegindate.&& [date in yyyy-mm-dd format].&& required for live captured subtitles. the corresponding date of creation of the earliest begin time expression (i.e. the begin time expression that is the first coordinate in the document time line)..&& ebuttm:localtimeoffset.&& [timezone in iso 8601 when ttp:timebase=clock and ttp:clockmode=local].&& required for live captured subtitles..&& z.&& +01:00.&& ebuttm:referenceclockidentifier.&& optional. allows the reference clock source to be identified. permitted only when ttp:timebase=clock and ttp:clockmode=local or when ttp:timebase=smpte..&& optional. the list of all services is at https://api.live.bbc.co.uk/pips/api/v1/service/ (api access required). you may need to request the service identifier list prior to delivery..&& bbc1.&& cbeebies.&& ebuttm:documenttransitionstyle.&& [empty element. only the attributes inunit or outunit are specified]..&& optional.&& the following elements support the information that is present in the gsi block of the stl file. if more than one stl source file is used to generate an ebu-tt document.&& the gsi metadata cannot be mapped into ebuttm:documentmetadata unless the value of a gsi field is the same across all stl documents..&& ebuttm:documentoriginalprogrammetitle.&& [original programme title].&& snow white.&& ebuttm:documentoriginalepisodetitle.&& use bbctt:otherid (see below).&& ebuttm:documenttranslatedprogrammetitle.&& ebuttm:documenttranslatedepisodetitle.&& optional.&& series 1.&& episode 1.&& ebuttm:documenttranslatorsname.&& [up to 32 characters].&& optional.&& jane doe.&& ebuttm:documenttranslatorscontactdetails.&& [up to 32 characters].&& optional.&& ebuttm:documentsubtitlelistreferencecode.&& [on-air uid].&& broadcastrequired for prepared linear.&& abc d123w/02.&& ebuttm:documentcreationdate.&& [date in format yyyy-mm-dd].&& required.&& 2012-06-30.&& ebuttm:documentrevisiondate.&& [date in format yyyy-mm-dd].&& required if a revision.&& 2015-01-28.&& ebuttm:documentrevisionnumber.&& [0 – 99].&& required if a revision.&& 1.&& ebuttm:documenttotalnumberofsubtitles.&& [non-negative integer].&& required.&& 767.&& ebuttm:documentmaximumnumberofdisplayablecharacterinanyrow.&& [0 – 37].&& required.&& 58.&& ebuttm:documentstartofprogramme.&& [hh:mm:ss:ff].&& required.&& 10:00:00:00.&& 20:00:00:00.&& ebuttm:documentcountryoforigin.&& [3-letter country code].&& required.&& gbr.&& ebuttm:documentpublisher.&& [up to 32 characters].&& required.&& company name.&& ebuttm:documenteditorsname.&& [up to 32 characters].&& required.&& john doe.&& ebuttm:documenteditorscontactdetails.&& [up to 32 characters].&& optional.&& ebuttm:documentuserdefinedarea.&& [up to 576 characters].&& not used.&& ebuttm:stlcreationdate.&& [date in format yyyy-mm-dd].&& optional. if the stl file is embedded using ebuttm:binarydata.&& do not use this element. instead.&& use the creationdate attribute of ebuttm:binarydataelement..&& ebuttm:stlrevisiondate.&& [date in format yyyy-mm-dd].&& optional. if the stl file is embedded.&& use the revisiondate attribute of ebuttm:binarydataelement..&& ebuttm:stlrevisionnumber.&& [integer].&& optional. if the stl file is embedded.&& use the revisionnumber attribute of ebuttm:binarydataelement..&& ebuttm:subtitlezero.&& if the subtitle zero is present.&& copy the content of subtitle zero from the stl.&& optional.&& this section lists the required extended bbc metadata values for bbc subtitle documents based on ebu-tt part 1 v1.&& which is the current actively used format..&& in addition to the standard ebu-tt elements listed above.&& the bbc requires the below metadata elements within a <bbctt:metadata> element. the <bbctt:metadata> element is the last child of <tt:metadata>. see appendix 2 for a sample xml and appendix 3 for the xsd..&& in the following tables.&& prefixes are used as shortcuts for the following namespaces:.&& bbctt:schemaversion.&& cardinality.&& 1..1.&& parent.&& bbctt:metadata.&& description.&& the bbc metadata scheme used. currently v1.0..&& value.&& v1.0.&& example.&& bbctt:timedtexttype.&& cardinality.&& 1..1.&& parent.&& bbctt:metadata.&& description.&& indicates whether subtitles were live or prepared. if live subtitles are modified following broadcast.&& this value must be changed to prerecorded..&& value.&& prerecorded | audiodescription | recordedlive | editedlive.&& example.&& bbctt:timecodetype.&& cardinality.&& 1..1.&& parent.&& bbctt:metadata.&& description.&& indicates whether timecode uses programme time for pre-recorded subtitles or timeofday utc time for live authored subtitles..&& value.&& programme | timeofday.&& example.&& bbctt:programmeid.&& cardinality.&& 0..1.&& parent.&& bbctt:metadata.&& description.&& required if not live..&& value.&& [on-air uid].&& example.&& bbctt:otherid type=tapenumber.&& cardinality.&& 0..1. required if not live..&& parent.&& bbctt:metadata.&& description.&& use tape number for programmes that have a material reference. use mat id for programmes delivered as file..&& value.&& example.&& bbctt:housestyle owner=.&& cardinality.&& 0..*.&& parent.&& bbctt:metadata.&& description.&& required if live..&& value.&& example.&& bbctt:recordedliveservice.&& cardinality.&& 0..*.. required for a live recording if intended for broadcast. broadcast.&& parent.&& bbctt:metadata.&& description.&& required for subtitles created live only..&& value.&& example.&& bbctt:div.&& cardinality.&& 0..*.&& parent.&& bbctt:metadata.&& description.&& generic container of type shotchange or script.&& value.&& <systeminfo>.&& <chapter>.&& <item> or <event> elements.&& example.&& bbctt:systeminfo.&& cardinality.&& 1..1.&& parent.&& bbctt:div.&& description.&& the system that produced the sibling elements..&& value.&& single instance of bbctt:systeminfo and multiple instances of bbctt:event.&& example.&& bbctt:event.&& cardinality.&& 0..*.&& parent.&& bbctt:div.&& description.&& a single event.&& e.g. a shot change in a bbctt:div of type=shotchange.&& attributes.&& value.&& this is an empty element. information is represented as element attributes..&& example.&& bbctt:chapter id=.&& cardinality.&& 0..*.&& parent.&& bbctt:div.&& description.&& used to divide content into semantic chapters..&& value.&& one or more bbctt:item elements.&& example.&& bbctt:item.&& cardinality.&& in bbctt:div: 0..* | in bbctt:chapter: 1..*.&& parent.&& bbctt:div | bbctt:chapter.&& description.&& generic container for the programme script elements..&& attributes.&& xml:id.&& yes.&& string.&& begin.&& no.&& ebuttdt:timingtype.&& end.&& no.&& ebuttdt:timingtype.&& value.&& example.&& bbctt:itemid.&& cardinality.&& 0..*.&& parent.&& bbctt:item.&& description.&& used to link an item with an external system.&& value.&& bbctt:itemid.&& example.&& bbctt:title.&& cardinality.&& 0..1.&& parent.&& bbctt:item.&& description.&& used to link an item with an external system.&& value.&& [string].&& example.&& bbctt:associatedfile.&& cardinality.&& 0..1.&& parent.&& bbctt:item.&& description.&& used to link an item with an external system.&& value.&& bbctt:associatedfile.&& example.&& bbctt:p.&& cardinality.&& 1..*.&& parent.&& bbctt:item.&& description.&& a single script element (paragraph).&& value.&& single bbctt:span element.&& example.&& bbctt:span.&& cardinality.&& 1..1.&& parent.&& bbctt:p.&& description.&& a single line of script.&& value.&& [dialogue or direction text].&& example.&& bbc specifications for version 1.1 of ebu-tt part 1 are still in development and are not yet in active use. information in this section is therefore subject to change. this section lists the required extended bbc metadata values for bbc subtitle documents based on ebu-tt part 1 v1.1.&& which is the current actively used format..&& some metadata that the bbc requires in version 1.0 of ebu-tt part 1 were incorporated into version 1.1.&& meaning that bbc-specific elements (in the bbctt namespace) can be replaced by elements in the standard ebu-tt namespace ( ebuttm). the following table summarises the changes:.&& these are the bbc metadata required for ebu-tt v1.1..&& bbctt:schemaversion.&& cardinality.&& 1..1.&& parent.&& bbctt:metadata.&& description.&& the bbc metadata scheme used. currently v1.0..&& value.&& [tbc for v1.1].&& example.&& bbctt:timecodetype.&& cardinality.&& 1..1.&& parent.&& bbctt:metadata.&& description.&& indicates whether timecode uses programme (pre-recorded) or utc time (live).&& value.&& programme | timeofday.&& example.&& bbctt:div.&& cardinality.&& 0..*.&& parent.&& bbctt:metadata.&& description.&& generic container of type shotchange or script.&& value.&& <systeminfo>.&& <chapter>.&& <item> or <event> elements.&& example.&& bbctt:systeminfo.&& cardinality.&& 1..1.&& parent.&& bbctt:div.&& description.&& the system that produced the sibling elements..&& value.&& [single instance of bbctt:systeminfo and multiple instances of bbctt:event.&& example.&& bbctt:event.&& cardinality.&& 0..*.&& parent.&& bbctt:div.&& description.&& a single event.&& e.g. a shot change in a bbctt:div of type shotchange.&& attributes.&& yes.&& ad fades only.&& ad fades only.&& integer.&& no.&& ncname.&& ad fades only.&& integer.&& no.&& ncname.&& value.&& this is an empty element. information is represented as element attributes.&& example.&& bbctt:chapter id=.&& cardinality.&& 0..*.&& parent.&& bbctt:div.&& description.&& used to divide content into semantic chapters..&& value.&& one or more bbctt:item elements..&& example.&& bbctt:item.&& cardinality.&& in bbctt:div: 0..* | in bbctt:chapter: 1..*.&& parent.&& bbctt:div | bbctt:chapter.&& description.&& generic container for the programme script elements..&& attributes.&& xml:id.&& yes.&& string.&& begin.&& no.&& ebuttdt:timingtype.&& end.&& no.&& ebuttdt:timingtype.&& value.&& example.&& bbctt:itemid.&& cardinality.&& 0..*.&& parent.&& bbctt:item.&& description.&& used to link an item with an external system.&& value.&& bbctt:itemid.&& example.&& bbctt:title.&& cardinality.&& 0..1.&& parent.&& bbctt:item.&& description.&& used to link an item with an external system.&& value.&& [string].&& example.&& bbctt:associatedfile.&& cardinality.&& 0..1.&& parent.&& bbctt:item.&& description.&& used to link an item with an external system.&& value.&& bbctt:associatedfile.&& example.&& bbctt:p.&& cardinality.&& 1..*.&& parent.&& bbctt:item.&& description.&& a single script element (paragraph).&& value.&& [single bbctt:span element].&& example.&& bbctt:span.&& cardinality.&& 1..1.&& parent.&& bbctt:p.&& description.&& a single line of script.&& value.&& [dialogue or direction text].&& example.&& the stl file(s).&& if present.&& must be embedded within the ebu-tt file.&& within the element ebuttm:binarydata:.&& ebuttm:binarydata.&& cardinality.&& 0..*.&& parent.&& tt:metadata.&& description.&& transitional requirement.&& value.&& [the complete stl file.&& base64 encoded. type: ebu tech 3264].&& example.&& online the file must conform to both ebu-tt-d 1.0.1 and imsc 1.0.1 text profile standards. subtitles must be relative to a programme begin time of 00:00:00.000. the timebase must be set to media..&& to allow the file to be played on as many devices as possible.&& the ebu-tt-d must also conform to the imsc 1.0.1 text profile.&& a closely related profile of ttml. in general.&& a valid ebu-tt-d document that conforms to these guidelines will also conform to imsc 1.0.1.&& provided that:.&& imsc 1.0.1 also imposes complexity contraints.&& however these are not likely to be exceeded if you follow these guidelines..&& online for scheduled programmes (with an on air uid).&& the file must be named [uid with slash removed].ebuttd.xml. contact the commissioning editor for guidance on file names for for non-scheduled content (where no uid exists)..&& note that embedded stl files should not be included within ebu-tt-d documents..&& the file must be utf-8 encoded..&& there is no standard specification stating where the teletext rendering area is located over video. teletext was created when televisions had a 4:3 aspect ratio.&& so it is reasonable to assume that the teletext rendering area was intended also to be 4:3. however most implementations avoid the edges of the screen.&& because televisions typically overscanned.&& which meant that the edges were not visible to the viewer..&& as a rough basis then.&& positioning a 4:3 area in the central 90% vertically is a good starting point to keep the subtitles within the safe area. such an area within a 16:9 aspect ratio video would have a horizontal width of 67.5% of that root container region..&& however.&& whereas teletext was designed to be displayed using a monospaced font.&& modern systems typically use a proportionally spaced font. for double height text.&& as was traditionally used for subtitles.&& the teletext approach was simply to create glyphs twice as tall.&& without modifying the width. adopting the same approach today with proportionally spaced fonts is likely to result in text that is unpleasant to look at and hard to read: it would have to be a highly condensed variant of the font..&& instead.&& we need to find a balance between font size and line width that presents the text at a readable size while minimising the chance of unwanted line breaks in case the rendered text does not fit within the allocated space. therefore the width available is extended to 75% of the 16:9 video area.&& with any additional space needed to accommodate line padding added on either side..&& teletext specifies lines in the range 0-23.&& however no subtitles may be placed on line 0. double height lines in teletext occupy the line on which they are specified and the following line. therefore there are 23 addressable single height lines and 22 addressable double height lines..&& the top edge of text specified on line 1 must be positioned at 5% from the top of the root container region. the bottom edge of text specified on line 23 (single height) or line 23 (double height) must be positioned at 95% from the top of the root container region..&& the following diagram illustrates this in visual form. note that the underlying grid is virtual and that elements dont necessarily align to it. see ttp:cellresolution..&& teletext subtitle lines begin with at least 3 or 4 spacing control characters.&& which set the box colour and the text colour if not white. lines do not need to end with control characters.&& but may do so if the text does not run to the end of the line. therefore there are a maximum of 37 characters per line.&& occupying positions 3-39 inclusive (zero-indexed)..&& the left edge of a character at position 3 must be positioned no less than 12.5% from the left of the root container region. the right edge of a character at position 39 must be positioned no more than 87.5% from the left of the root container region..&& since teletext does not signal any authorial intent behind the positioning of text.&& implementations may need to make inferences about how to align groups of more than one adjacent line that are visible at the same time. the algorithms for making those inferences may include content-based preferences and analysis of sequences of subtitles as they change over time.&& for example..&& groups of lines may each be considered as being aligned horizontally to their centre position if they are within a character of that position. for example.&& if three adjacent lines have respective centre points at positions 20.5.&& 21.&& and 21.5.&& a heuristic may consider them all to be centered about position 21..&& lines that are aligned to a left or right position should have the same position for their first or last character respectively..&& in some cases it may be that more than one possible alignment exists. for example.&& those same three adjacent lines could all have the same left position. if there is any other indication of authorial intent available.&& then that should be honoured where possible. for example.&& within a sequence of left-aligned subtitles.&& a single centered subtitle looks strange.&& and is unlikely to have been intended. conversely.&& within a sequence of centered subtitles.&& a single left-aligned subtitle looks odd. when subtitles are cumulative.&& centered subtitles should not be preferred.&& because the change in position when words are added to a line makes the text difficult to read..&& such adjacent lines should be placed within the same tt:p element and separated by tt:br elements. the style applied to the tt:p element should include a tts:textalign attribute set to the value corresponding to their alignment edge (or centre)..&& those tt:p elements should be placed within regions positioned to apply the equivalent horizontal and vertical areas and whose tts:displayalign attribute is set to an appropriate value depending on the position in the root container region. for example.&& regions at the top should be before edge aligned.&& and those at the bottom should be after edge aligned. regions in the central vertical area may be center aligned..&& whereas teletext is a monospaced system.&& typically the resulting subtitles will be presented using a proportionally spaced font. when the text is rendered.&& it may occupy more width than the original teletext. to allow for this.&& where all the text in a tt:region has the same value of tts:textalign.&& the left and right edges of the region should be extended such that the text is in the same position.&& up to the limits specified above. this reduces the chance of unexpected line breaks..&& applying these rules should allow any text size customisation to retain appropriate relative positioning of each line.&& without introducing gaps between lines.&& for example..&& illustrative diagram:.&& broadcast prepared subtitles for linear programmes must use the smpte timebase with a start of programme aligned to the source media. this is usually (but not always) 10:00:00:00. see the bbc’s technical requirements for delivery as as-11 dpp files..&& online prepared subtitles for online exclusives must be relative to a programme begin time of 00:00:00.000 ..&& ebu-tt (part 1 v1) files captured from live created subtitles must set bbctt:timecodetype to timeofday. time expressions must be in utc. [ebu-tt 1.1] files should use ttp:timebase=clock and ttp:clockmode=utc to indicate this information. for implementation details.&& see ttp:timebase..&& this section contains detailed instruction for developers of subtitle authoring tools that output ebu-tt or ebu-tt-d documents.&& and for processors of those files. it is structured around the key ttml elements and attributes: see the example document below and click on elements and attributes to go to their respective section..&& this is intended to be a developer-friendly view of the specifications.&& but not to replace them. however where bbc-specific constraints exist they are described.&& in relation to the subtitle guidelines that they support. the specifications remain authoritative and they should be consulted alongside this document:.&& because closed subtitles are processed from file.&& it is possible for a presentation processor (e.g. a set-top box or a browser) to override the instructions in the subtitles file. generally.&& the processor should respect the authors intentions. however.&& where requirements exist that are specific for the authoring or processing of subtitle documents.&& they are listed separately under the relevant xml element..&& note that in the spirit of an iterative process.&& there may be further releases making improvements to the developer guidance..&& in particular.&& the focus here is on ebu-tt-d creation for online only subtitle delivery; where there is commonality with ebu-tt part 1 delivery for archive and downstream conversion to a distribution format this is described; however we do not expect that all existing ebu-tt part 1 delivery requirements are captured here..&& all feedback is welcome..&& ttml is a markup language based on xml.&& using structural elements like in html - head.&& body.&& div.&& p and span in the ttml namespace (shown in this document with the tt: prefix).&& with styling semantics taken from xsl-fo and timing semantics taken from smil. ebu-tt and ebu-tt-d are subsets of ttml with a couple of extensions. styling and layout are applicative.&& in other words styling and positional information are defined and identified.&& and content specifies the styles and positioning by referencing those identified style and regions..&& the top level <tt:tt> element carries parameters needed for presenting the content..&& the <tt:head> element carries styling.&& layout and document level metadata..&& the <tt:body> element carries the timed content that is to be presented.&& in a <tt:div>.&& <tt:p> and <tt:span>/<tt:br/> hierarchy. content elements can be timed using begin and end attributes..&& the following example illustrates this structure..&& this example can also be downloaded here..&& this illustration shows how the document above is interpreted (only the subtitle text and the black background will be displayed). note that the underlying grid is virtual and that elements dont necessarily align to it. see ttp:cellresolution..&& displayed between 00:00:10 and 00:00:20.&& displayed between 00:00:30 and 00:00:31.&& in the following tables.&& prefixes are used as shortcuts for the following namespaces:.&& note that although the examples in this document explicitly include the tt: prefix.&& there is no requirement that real world documents do so. for example a common approach is to declare the default xml namespace prefix to be the main ttml namespace.&& and then omit the relevant prefixes..&& bbc-specific requirements apply..&& defines the time coordinate system for all time expressions..&& ebu-tt-d ttp:timebase must be set to media and only a full-clock-value time expressions are allowed..&& shall requirement:.&& ebu-tt-d for ebu-tt-d output.&& set ttp:timebase to media and use full clock time expressions on begin and end attributes..&& example:.&& shall requirement:.&& ebu-tt 1.0 for ebu-tt output.&& set ttp:timebase=smpte.&& also set ttp:dropmode.&& ttp:markermode.&& ttp:framerate and ttp:frameratemultiplier.&& example:.&& shall requirement:.&& attempt to display subtitles as close as possible to their respective begin and end times.&& regardless of the actual displayed frame rate. see annex e of ebu-tt-d specification..&& bbc-specific requirements apply..&& expresses a virtual 2 dimensional grid of cells. the first value defines the number of columns and the second value defines the number of rows. the cell height (c unit) is used as the basis for calculating font size and therefore indirectly line height. for example.&& the default value 32 15 creates a cell with height 6.66% (=100/15) and width 3.125% (=100/32) of the root container regions height and width. the root container region is defined as the active video area in ebu-tt but implementation defined in ebu-tt-d..&& font size percentages are relative to the parent elements font size.&& or if none is set.&& the cell height. for example a font size of 100% set on an element with no ancestor that sets font size would be computed as 1/15 (=6.66%) of the root container region height; a line height of 120% applied to that would be 120% of the font size.&& i.e. 1.2 * 1/15 = 8%..&& ebu-tt 1.0 if the ‘cell’ measurement unit is used (e.g. as part of a tts:fontsize attribute value) then the ttp:cellresolution attribute must be specified..&& shall requirement:.&& ebu-tt 1.0 set the cell resolution explicitly even if using the default value..&& example:.&& shall requirement:.&& the calculated font size must fit within a line height of between 7% and 9% of the active video height. see section 10.2 font size.&& describes the area within the root container region that contains subtitles.&& i.e. the area that needs to be minimally visible to the viewer. this area typically fully contains all of the referenced regions within the document instance..&& the active area may be used by a player to ensure that the subtitles remain in the visible area of the screen if the player area is not the same shape as the video image.&& for example..&& should requirement:.&& ebu-tt-d specify the active area..&& should requirement:.&& the visible area of the video must include the specified active area occupied by subtitles. in normal conditions the registration or positional alignment of the subtitle rendering area against the video image must not be modified to achieve this. the exception would be if the subtitle rendering area is adjusted temporarily for example to accommodate controls..&& sets a generic or a named font family. this attribute can contain a prioritised list of font names.&& which are typically processed in order until a match is found.&& thus allowing predictable fallbacks to be used. this list may be evaluated on a per glyph basis to deal with the case where most glyphs are present in a font but later fonts include specific required glyphs omitted from earlier fonts.&& for example..&& shall requirement:.&& set to reith sans.&& fall back to device-specific and then generic proportional sans-serif fonts so that the end device uses its default font (e.g. roboto in android)..&& example:.&& shall requirement:.&& map a generic font family name to the best appropriate matching font on the device..&& shall requirement:.&& use downloadable fonts if available..&& shall requirement:.&& fall back to the system defined sans serif font if a downloadable font is not available. prefer proportional fonts if there is a choice..&& bbc-specific requirements apply..&& ebu-tt 1.0 sets the font size using percent.&& pixel or cell values. double values can be used to set height and width separately.&& known as anamorphic font sizing - this scales the font by different amounts horizontally and vertically..&& ebu-tt-d sets the font size using a percentage of cell height value (see cell resolution). a single value only can be used..&& percentage values are relative to the parent elements font size.&& or the cell size when the parent element (and every ancestor) has no specified font size..&& should requirement:.&& for bbc subtitles.&& set the font size to be approximately 1/15th (6.667%) of the height of the root container.&& for example by setting ttp:cellresolution to 32 15 and tts:fontsize to 100%..&& example:.&& shall requirement:.&& calculate percentage values relative to the parent elements font size.&& if specified.&& or the cell size otherwise..&& example:.&& should requirement:.&& apply a scaling factor if reith sans is being used and the line height is less than 133% of the font size. (see additional adjustments for reith sans font)..&& should requirement:.&& apply a scaling factor based on the devices physical screen size (see presentation font size)..&& example:.&& for a 32 tv and an authored font size corresponding to the authored font size guideline.&& apply a scaling factor of 0.67 so that the computed font size is as though the font size was specified at 67% of cell height..&& shall requirement:.&& apply scaling factors cumulatively..&& example:.&& a player supports reith sans and the subtitle document specifies that reith sans is to be used. the subtitle document specifies a line height of 120%.&& so a scaling factor of ~0.9 needs to be applied. the processor also needs to apply a scaling factor of 0.67 for display on a 32 tv..&& the actual scaling factor to be applied is 0.9 * 0.67 = ~0.6..&& sets inter-baseline separation between line areas..&& note that there is no uniform implementation of the value normal by css-based rendering processors. additionally.&& different browsers render different line heights for the same font and size. this contributes to a known issue where a gap appears between lines of text. see also itts:filllinegap..&& the example below illustrates this: different fonts of the same size were used.&& with a line height set to normal. processors should render as on the right example.&& without a gap between the lines:.&& .&& should requirement:.&& set the line height explicitly on a style applied to a <p> element using percentage values.&& evaluated relative to the computed font size..&& example:.&& should requirement:.&& set tts:lineheight=120% to accommodate commonly used web fonts..&& shall requirement:.&& calculate the line height for a line area using the fonts ascender.&& descender and linegap attributes.&& including leading if available..&& should requirement:.&& apply a scaling factor if reith sans is being used and the line height is less than 133% of the font size. (see additional adjustments for reith sans font)..&& alignment of inline areas in a containing block. the alignment values start and end depend on the value of the writing mode.&& which in turn depends on the unicode bidi mode and the style attributes tts:unicodebidi.&& tts:direction and tts:writingmode applied to the element..&& see also ebutts:multirowalign.&& which provides extra alignment options..&& shall requirement:.&& set this explicitly even if using defaults. ebu-tt 1.0.&& example:.&& should requirement if only supporting left to right scripts; shall requirement if support for any non-latin or non-left-to-right text is required:.&& support unicode characters and the unicode bidirectional algorithm (uax9)..&& shall requirement:.&& calculate text alignment correctly based on the value of tts:textalign.&& the unicode bidirectional algorithm.&& and all defined values of tts:unicodebidi and tts:direction and tts:writingmode..&& example:.&& shall requirement:.&& calculate text alignment relative to the region after taking into account any start or end padding..&& shall requirement:.&& align the line areas generated by a <tt:p> element after applying any line padding; for example.&& if there is 0.5c of line padding applied to each line area and 1c of start and end padding on the region.&& then the first glyph of a left aligned line area will be 1.5c to the right of the region origins x coordinate..&& ebu-tt-d only..&& in ebu-tt-d only.&& defines whether automatic line wrapping applies within an element. if the value is wrap.&& automated line-breaking occurs if the line overflows the region. if the value is nowrap.&& no automated line-breaking occurs and overflow is treated in accordance with the value of tts:overflow attribute of the corresponding region..&& note that if tts:wrapoption is set to nowrap.&& the region that corresponds to the affected content should have the attribute tts:overflow set to visible so that any overflowing text remains visible..&& although the default value is wrap.&& it is better to have the subtitler.&& rather than the software.&& control line breaks by inserting <tt:br/>. subtitlers and authoring software are expected to manage the width of text on each line so that the text does not overflow..&& there is no constraint on adding manual breaks regardless of the value of tts:wrapoption..&& should requirement:.&& disable automatic line wrapping so that the editor creates line break manually..&& examples:.&& set tts:wrapoption=nowrap;.&& separate lines of content by putting into separate <tt:p> elements or by inserting <tt:br/> elements.&& shall requirement:.&& ebu-tt 1.0 for ebu-tt 1.0.&& do not include this attribute..&& should requirement:.&& if tts:wrapoption is set to nowrap.&& set the attribute tts:overflow to visible on the region that corresponds to the affected content..&& should requirement:.&& when deriving break points.&& use the uax14 line breaking algorithm..&& should requirement:.&& use the uax14 line breaking algorithm..&& note that when the document has tts:wrapoption=nowrap the line breaking algorithm will not apply..&& shall requirement:.&& if the text overflows its region.&& attempt to display the overflow (even if ugly) so that viewers who depend on subtitles dont miss important information..&& shall requirement:.&& ebu-tt 1.0 for ebu-tt processing.&& this attribute should be ignored and manual line breaks used instead. see page 33 of the specification.&& defines how multiple ‘rows’ of inline areas are aligned relative to each other within a containing block area..&& this attribute acts as a ‘modifier’ to the action defined by the tts:textalign attribute value.&& whether that value is explicitly or implicitly specified. this attribute effectively creates additional alignment points for multiple rows of text.&& thus it has no effect if only a single row of text is present..&& ebutts:multirowalign modifies the behaviour of tts:textalign so that.&& rather than each line generated by the tt:p being aligned relative to the region.&& each line in the group can be left/centre/right aligned relative to the longest line and the group of lines is then aligned according to tts:textalign. see the references for more detail on this..&& ebu-tt 1.0 https://tech.ebu.ch/publications/tech3350 ebu-tt-d annex c in https://tech.ebu.ch/publications/tech3380.&& shall requirement:.&& if the ebutts:multirowalign attribute as specified on a tt:p element has the same value as tts:textalign or is set to auto.&& each generated line area in the tt:p shall be aligned according to the computed value of tts:textalign..&& example:.&& shall requirement:.&& the behaviour of this attribute in combination with tts:textalign is as defined in annex c in https://tech.ebu.ch/publications/tech3380..&& example:.&& ebu-tt-d only..&& bbc-specific requirements apply..&& in ebu-tt-d only.&& adds padding on the start and end edges of each rendered line. background color applies to the line area including the padding..&& application of padding affects the layout of text.&& for example by reducing the maximum width available in which to render text on a single line (see line length and region definition). note this attribute is different from tts:padding.&& which applies space to a region (and in ttml2.&& to other content elements). must be applied to tt:p only..&& shall requirement:.&& ebu-tt-d for ebu-tt-d.&& set line padding to approximately half a character width. this should be calculated from the aspect ratio.&& the grid and the font size. for the purposes of the calculation.&& 1em can be assumed to be equal to the font size..&& the following example calculation uses non-recommended values for illustration purposes only..&& assuming an aspect ratio of 16:9.&& a cellresolution of 32 15 and a font size of 80%:.&& should requirement:.&& if no line padding exists and there is sufficient space available.&& add 0.5c of padding on the sides of each line. note that the recommended behaviour for tts:overflow is that it is visible and that tts:wrapoption is nowrap..&& shall requirement:.&& when laying out line areas inset the line areas by twice the value of ebutts:linepadding from the start and end edges of the region.&& after having applied any tts:padding values..&& should requirement:.&& if scaling down the font size.&& also reduce the line padding..&& if scaling the line padding.&& it may be reduced by up to the same percentage as the relative reduction in font size (i.e..&& if multiplying the font size by 50%.&& the line padding may be multiplied by a value in the range 50%-100%)..&& bbc-specific requirements apply..&& the foreground (text) color of an area..&& shall requirement:.&& set the default font colour to white #ffffff.&& example:.&& shall requirement:.&& the attribute can have one of these values only (see speaker colours):.&& shall requirement:.&& apply the specified colour to text..&& bbc-specific requirements apply..&& background colour of an inline area generated by a <tt:span> element. this attribute can also be applied to block elements and other colours are supported.&& but bbc subtitles use black background applied to <tt:span> elements only..&& note that the ttml tts:opacity attribute is not supported by ebu-tt and ebu-tt-d but alpha values may be included on rgb colours..&& shall requirement:.&& set background colour to solid black (do not allow opacity)..&& example:.&& shall requirement:.&& apply background to <tt:span> elements only.&& example:.&& shall requirement:.&& avoid white space between adjacent <tt:span> elements. white space that is not styled with a background colour will appear in browsers as gaps in the background..&& required white space between words must be included inside a <tt:span> element.&& usually immediately before a word.&& at the beginning of the element contents..&& example of what not to do:.&& if the styles applied to the <span> define a background colour.&& the end of line character [eol] between the <tt:span>s is unstyled:.&& this will render as:.&& hey! what?.&& example of what to do instead:.&& shall requirement:.&& draw the background area behind each generated line area in the specified colour..&& shall requirement:.&& make the height of the background equal to the fonts computed line height so that no gap exists between lines. see tt:span..&& bbc-specific requirements apply..&& specifies whether any gap between the background areas of adjacent lines should be filled or left unfilled..&& the example below illustrates this: the same font and line height are specified.&& with itts:filllinegap set to false on the left.&& and true on the right..&& .&& shall requirement:.&& ebu-tt-d itts:filllinegap must be set to true..&& example:.&& shall requirement:.&& ebu-tt-d apply itts:filllinegap to <tt:p> elements only..&& example:.&& shall requirement:.&& make the height of the background area of each line extend so that there is no gap between adjacent line background areas.&& for every line area generated by a <tt:p> element whose computed value of itts:filllinegap is true..&& defines an area in which subtitle content is to be placed. tt:div and tt:p elements may reference a region..&& setting the width of a region to 71.25%.&& with zero padding.&& should be sufficient to carry all 38 possible characters across a teletext line and add 0.5c line padding. a region of such a size should be centred horizontally (i.e. have an origin x coordinate of 14.375%) to allow for it to be displayed in its entirety even if a centre cut out is used to display the central 4:3 area of a 16:9 root container region..&& if no tt:layout element (and therefore no tt:region elements) is defined in a document.&& the default region applies.&& which is the entire size of the rendering area; default values of the region style attributes also apply. this is extremely unlikely to be a desirable effect..&& note that legacy (non-ebu-tt) flavours of ttml may exist that omit the tt:layout element: at the time when those documents were created.&& the default region semantic may have been different. processors may therefore apply more sensible defaults in this scenario.&& for example locating subtitles in a predefined position such as bottom and centre..&& example:.&& shall requirement:.&& documents must not contain overlapping regions that are active at the same time (where a region is active if any content that is flowed into it is active)..&& shall requirement:.&& the regions origin x coordinate must be greater than or equal to 12.5% of the root container region for a 16:9 active video (this allows for a 4:3 centre cut)..&& shall requirement:.&& the sum of the regions origin x coordinate and extent width must be less than or equal to 87.5% of the root container region for a 16:9 active video (this allows for a 4:3 centre cut)..&& shall requirement:.&& the number of regions active at any one time must not exceed 4 (imsc 1 requirement)..&& should requirement:.&& support at least eight regions that are active at the same time..&& shall requirement:.&& support at least four regions that are active at the same time..&& should requirement:.&& if overlapping regions are active simultaneously draw them in region definition order.&& i.e. the order of regions in the layout element..&& note that this is not permitted in ebu-tt and ebu-tt-d documents..&& the x and y coordinates of the top left corner of a region with respect to the root container region.&& which is the active video for ebu-tt 1.0.&& and some implementation dependent rendering plane for ebu-tt-d.&& but generally expected to match the displayed video. presentation implementations are expected to map these to device pixels for optimum display of text..&& example: with tts:origin=20% 80% the top left corner of the region is 20% of the root container region width from the left and 80% of the root container region height from the top..&& shall requirement:.&& the sum of the value for the x-coordinate of the region and the value for the width of the region (specified by tts:extent) must be less than or equal to 100%..&& shall requirement:.&& the sum of the value for the y-coordinate of the region and the value for the height of the region (specified by tts:extent) must be less or equal to 100%..&& this attribute can be specified on either tt:region or tt:tt elements. it sets the width and height of the region area.&& being either the root container region.&& when specified on the tt:tt element or a defined region within that.&& when specified on a tt:region element..&& note that where pixel coordinates are used they are logical coordinates in the ttml space only and do not need to match actual encoded video or device pixels..&& ebu-tt-d only percentage values are allowed..&& ebu-tt-d tts:extent is only permitted on region elements..&& ebu-tt 1.0 only length expressions in pixels are allowed on tts:extent when specified on the tt element..&& ebu-tt 1.0 if pixel length expressions are used anywhere in a document then tts:extent must be present on the tt element..&& ebu-tt 1.0 percentage and pixel values are allowed..&& shall requirement:.&& the sum of the value for the x-coordinate of the region and the value for the width of the region (specified by tts:extent) must be less than or equal to 100%..&& shall requirement:.&& the sum of the value for the y-coordinate of the region and the value for the height of the region (specified by tts:extent) must be less or equal to 100%..&& shall requirement:.&& ebu-tt 1.0 the tts:extent must be present on the tt:tt element if any length unit in the document is expressed in pixels..&& example:.&& shall requirement:.&& ebu-tt-d tts:extent must not be present on any element other than tt:region.&& shall requirement:.&& ebu-tt-d ebu-tt-d document must not express the value of tts:extent in pixel units..&& example:.&& should requirement:.&& clip any region that extends beyond the root container region (the rectangle corresponding to an origin of 0% 0% with an extent 100% 100%) to the area that intersects with the root container region..&& alignment in the block progression direction. when block progression direction is top-to-bottom.&& before would result in top alignment and after would result in bottom alignment..&& shall requirement:.&& a tts:displayalign attribute shall be present on every region element..&& shall requirement:.&& the active lines within the region are aligned in the block progression direction to the before edge of the region (for before.&& usually the top for top to bottom left to right).&& the middle (for center) or the after edge (for after.&& usually the bottom for top to bottom left to right)..&& shall requirement:.&& ebu-tt 1.0 in an ebu-tt part 1 v1.0 document if no tts:displayalign attribute is present the default of after shall be applied..&& shall requirement:.&& in an ebu-tt-d or other ttml document (e.g. ebu-tt part 1 v1.1 etc) or if the document type is undetermined then if no tts:displayalign attribute is present the ttml default of before shall be applied..&& defines the directions for stacking block and inline areas within a region area. applies to region elements only. this attributes interacts with tts:direction and tts:unicodebidi..&& should requirement:.&& specify tts:writingmode on a region..&& example:.&& may requirement (where support for latin scripts or left-to-right-top-to-bottom scripts only is required):.&& support writingmode semantics..&& shall requirement (where support for any non left-to-right-top-to-bottom script is required):.&& support writingmode semantics..&& ebu-tt-d only..&& bbc-specific requirements apply..&& defines whether a region area is clipped if the content of the region overflows the specified extent of the region. if the author intends to avoid truncated content the tts:overflow attribute should always be specified and be set to visible. note that setting the value to visible does not guarantee that content that overflows the region will be presented.&& for example if it overflows the active video region (root container). see also tts:wrapoption..&& this attribute is required (cardinality: 1..1)..&& the value must be set to visible..&& shall requirement:.&& set overflow to visible so that subtitles are visible even if they overflow..&& a logical container of subtitle text. intended to hold semantic information.&& for example sections within a programme. <div>s may be placed in regions.&& which apply to the div and all its descendants. a <div> may have style references.&& which are inherited by all of its descendants except where a descendant overrides it with a different style. begin and end times are not permitted on <div>s: this is a constraint in ebu-tt and ebu-tt-d rather than in ttml..&& where <div>s are used for semantic information.&& it may be specified as metadata.&& using attributes such as ttm:role.&& xml:lang etc and/or a metadata element..&& shall requirement:.&& a tt:div must contain at least one tt:p element..&& example:.&& represents a logical paragraph. when reference is made to a subtitle it is most closely analogous to a tt:p element in general..&& any subtitle text in a <tt:p> must be within a <tt:span> element so that the background color is correctly applied..&& multiple line subtitles should be placed within a single tt:p element so that any processor that permits customisation of the size of text can scale and position all the lines together as a group rather than each line separately; when lines are in separate <tt:p> elements this can lead to gaps or alignment errors between lines..&& timing may be applied to a tt:p element using the begin and end attributes.&& or to each span inside the element.&& but in ebu-tt-d such timing must not be present in both. cumulative subtitles.&& for example where words are appended at different times.&& should be represented by timed <tt:span>s within a <tt:p>; this approach is preferred to a set of differently timed <tt:p> elements each being the same as the previous but with the new word or phrase appended.&& because it is simpler to extract the plain text version when this approach is used..&& every <tt:p> is required by ebu-tt and ebu-tt-d to have an xml:id attribute..&& where <tt:p>s are used for semantic information.&& it may be specified as metadata.&& using attributes such as ttm:role.&& xml:lang etc and/or a metadata element..&& shall requirement:.&& subtitle text (character content) must not be outside a <tt:span> element..&& example:.&& shall requirement:.&& each tt:p element must have an xml:id attribute value that is unique in the document..&& example:.&& shall requirement:.&& do not infer subtitle sequence from xml:id..&& bbc-specific requirements apply..&& used to apply style information to the enclosed textual content. this style information is added to or overwrites style information from the currently active context..&& background colour must be applied to this element (rather than <tt:p> or <tt:div> so that the background is applied to the text area)..&& for cumulative subtitles.&& set begin and end time on parts of a subtitle using <tt:span> (see example)..&& ebu-tt 1.0 may include nested <tt:span>..&& ebu-tt-d must not include nested <tt:span>..&& shall requirement:.&& all subtitle text must be wrapped in a <tt:span> with a black background style applied..&& example:.&& should requirement:.&& for every <tt:span> with background applied.&& make the background height equal to the calculated line height regardless of other specifications. this is to help ensure no gap exists between lines..&& characters in code table 00 - latin alphabet. reproduced from ebu tech. 3264-e..&& this is an example of a prepared subtitle file. this is not a complete file: multiple instances of elements have been removed and long values shortened. not all possible elements are included (for example.&& elements required for live subtitles are not included)..&& sample file: ebu-tt v1.0 pre-prepared.&& sample file (raw xml) abcd123a02-1-prerecorded.xml.&& when this sample ebu-tt file is converted for distribution as ebu-tt-d and imsc 1 text profile it generates the following output:.&& sample file: ebu-tt-d and imsc 1 text profile distribution subtitle document..&& sample file (raw xml) abcd123a02-1-prerecorded.ebuttd.xml.&& this is the xsd for the bbc metadata section of the ebu-tt document. it includes elements for audio description and signs-language documents that can be omitted for subtitle files. to validate the document fully an ebu-tt schema should also be used..&& sample file: xml schema definition for bbc ebu-tt metadata.&& this section provides a step-by-step guide for making an ebu-tt-d file using a template for online distribution only. these instructions assume no prior knowledge and if followed closely will produce a valid but minimal file. you can then use this file as a basis for additional styling such elements such as colour..&& note that these instructions are for creating a bare-bones file that does not include many of the features required by the bbc. all subtitles will appear in white text on a black background and centred at the bottom of the screen. this minimal formatting excludes features like colour (to identify speakers).&& positioning (to avoid obscuring important information) and cumulative subtitles. you should therefore check with the commissioning editor that this minimal file is suitable..&& this is important: do not follow these instructions if you need to deliver subtitles for broadcast or if the presentation requires more than simple white-on-black text centred at the bottom of the screen. consult the rest of this guidelines document for these cases..&& prepare the text. if available.&& begin with a transcript file so you dont have to type in the text. add labels if required (e.g. to describe action)..&& add line breaks and timings. this is commonly done with an authoring tool. ideally.&& the tool should allow you to configure all of the features that determine line length (line padding.&& region definition.&& cell resolution.&& font family and font size). this will allow you to preview the subtitles as reliably as possible (the final appearance will be determined by the users system). if your tool does not support these features.&& use a wysiwyg tool to define a subtitle region of 71.25% of the width of the video (for a 16:9 video). use a wide font such as verdana to minimise the risk of text overflowing the region when rendered in the final display font. it is not recommended to control line length using a character count limit only: this is a crude method that does not take into account the width of individual letters and fonts. although 37 characters would fit most of the time.&& in some cases they might not (e.g. too many ms and ws). if you use this method you should test your subtitles in different browsers and operating systems before delivery..&& timings must be relative to a programme begin time of 00:00:00.000.&& format timings. timings must be in the format hh:mm:ss followed by a fraction (e.g. 00:01:29.265). in ebu-tt-d.&& the begin time of the subtitle is inclusive.&& but the end time is exclusive. this means that if you want one subtitle to follow another without any gaps.&& you should set the end time of the first subtitle to be the same as the begin time of the following subtitle..&& format lines. ensure that lines are not too long and that a <tt:br/> tag is present for every line break within a subtitle. remove unnecessary line breaks and white space at the beginning or end of a subtitle..&& escape characters. replace special characters with their escaped version as detailed in encoding characters..&& update the copyright. enter the correct year in the copyright element in the template: <ttm:copyright>bbc 2021</ttm:copyright>.&& save. save the file with a .ebuttd.xml file extension. for the file name.&& see ebu-tt-d file..&& this chart is a high-level view of current subtitle workflows:.&& ebu-tt-d application samples provided by institut für rundfunktechnik..&& ttml examples provided by w3c timed text working group..&& ↑][subtitle guidelines, 1 introduction, 1.1 document conventions, 1.2 navigation, 1.3 document status, 1.4 how to contribute, presentation, 2 editing text, 2.1 prefer verbatim, 2.2 don’t simplify, 2.3 retain speaker’s first and last words, 2.4 edit evenly, 2.5 keep names, 2.6 preserve the style, 2.7 consider the previous subtitle, 2.8 keep the form of the verb, 2.9 keep words that can be easily lip-read, 2.10 subtitle illegible text, 2.11 strong language, 3 line breaks, 3.1 line length, 3.2 subtitles should contain single sentences, 3.3 avoid 3 lines or more, 3.4 break at natural points, 3.5 breaks in justified subtitles, 3.6 consider the image, 3.7 consider speaker positioning, 3.8 short sentences, 3.9 long sentences, 3.10 prioritise editing and timing over line breaks, 4 timing, 4.1 target minimum timing, 4.2 when to give less time, 4.3 when to give extra time, 4.4 use consistent timing, 4.5 gaps, 5 synchronisation, 5.1 match subtitle to speech onset, 5.2 match subtitle to pace of speaking, 5.3 display subtitles when lips are moving, 5.4 keep lag behind speech to a minimum, 5.5 do not pre-empt an effect, 5.6 keep speakers separate, 6 matching shots, 6.1 match subtitles to shot, 6.2 maintain a minimum gap when mismatched, 6.3 avoid straddling shot changes, 6.4 merge subtitles for short shots, 6.5 end subtitle with speech, 6.6 end subtitle with scene, 6.7 wait for scene change to subtitle speaker, 7 identifying speakers, 7.1 use colours, 7.2 use horizontal positioning, 7.3 use dashes, 7.4 use single quotes for voice-over, 7.5 use single quotes for out-of-vision speaker, 7.6 use double quotes for mechanical speech and for quoting, 7.7 use arrows for off-screen voices, 7.8 use labels for off-screen voices, 7.9 use metadata to identify speakers, 8 colours, 8.1 use white on black, 8.2 avoid coloured background, 8.3 speaker colours, 8.4 apply speaker colour consistently, 8.5 multiple speakers in white, 9 typography, 9.1 fonts, 9.2 size, 9.3 supported characters, 10 positioning, 10.1 vertical positioning, 10.2 under image positioning, 10.3 horizontal positioning, 11 intonation and emotion, 11.1 sarcasm, 11.2 stress, 11.3 whisper, 11.4 incredulous question, 12 accents, 12.1 indicate accent only when required, 12.2 indicate accent sparingly, 12.3 incorrect grammar, 12.4 use label, 13 difficult speech, 13.1 edit lightly, 13.2 consider the dramatic effect, 13.3 use labels for incoherent speech, 13.4 use labels for inaudible speech, 13.5 explain pauses in speech, 13.6 break up subtitles slow speech, 13.7 indicate stammer, 14 hesitation and interruption, 14.1 indicate hesitation only if important, 14.2 within a single subtitle, 14.3 across subtitles, 15 humour, 15.1 separate punchlines, 15.2 reactions, 15.3 keep catchphrases, 16 music and songs, 16.1 label source music, 16.2 describe incidental music, 16.3 combine source and incidental music, 16.4 label mood music only when required, 16.5 indicate song lyrics with #, 16.6 avoid editing lyrics, 16.7 synchronise with audio, 16.8 centre lyrics subtitles, 16.9 punctuation, 17 sound effects, 17.1 subtitle effects only when necessary, 17.2 describe sounds, not actions, 17.3 format, 17.4 subject + verb, 17.5 in-vision translations, 17.6 animal noises, 18 numbers, 18.1 spelling out, 18.2 dates, 18.3 money, 18.4 time, 18.5 measurement, 19 cumulative subtitles, 19.1 use only when necessary, 19.2 common scenarios, 19.3 timing, 19.4 avoid cumulative where shots change, 19.5 avoid obscuring important information, 19.6 stick to three lines, 20 children’s subtitling, 20.1 editing, 20.2 preferred timing, 20.3 avoid variable timing, 20.4 allow more time for visuals, 20.5 syntax and vocabulary, 21 live subtitling (bbc-asp, ofcom-iqls, ofcom-gss), 21.1 general, 21.2 preparation, 21.3 editing, 21.4 corrections, 21.5 formatting, file format, 22 files, 23 stl file, 23.1 file name, 23.2 general subtitle information (gsi) block, 23.3 timecode, 23.4 subtitle zero, 24 ebu-tt file, 24.1 file name, 24.2 tt:tt attributes, 24.3 ebuttm:documentmetadata elements (v1.0), document identifier, 24.4 ebuttm:documentmetadata elements (v1.1), 24.5 extended bbc metadata (v1.0), 24.6 extended bbc metadata (v1.1), 24.7 embedded stl, 25 ebu-tt-d file, 25.1 conformance with imsc 1.0.1 text profile, 25.2 file name, 25.3 character encoding, 25.4 mapping teletext positions to percentage positions, 26 timecode, 27 ebu-tt and ebu-tt-d documents in detail, 27.1 introduction to the ttml document structure, 27.2 example ebu-tt-d document, 27.3 namespaces, 27.4 parameter attributes, 27.5 style attributes, 27.6 regions, 27.7 content elements, appendices, 28 appendix 1: teletext character set, 29 appendix 2: sample files, 30 appendix 3: bbc metadata xsd, 31 appendix 4: quick ebu-tt-d how-to, 32 appendix 5: bbc subtitle workflows, 33 appendix 6: references]bbc subtitle guidelines[platform, max length, notes, colour, rgb hex, notes, platform, delivery, description, format, extension, specification, notes, uid, file name, gsi block data, short, value, notes, example, attribute, value, notes, example, element, value, notes, example, element, value, notes, example, bbctt:schemaversion, bbctt:timedtexttype, bbctt:timecodetype, bbctt:programmeid, bbctt:otherid type=tapenumber, bbctt:housestyle owner=, bbctt:recordedliveservice, bbctt:div, bbctt:systeminfo, bbctt:event, bbctt:chapter id=, bbctt:item, bbctt:itemid, bbctt:title, bbctt:associatedfile, bbctt:p, bbctt:span, bbctt:schemaversion, bbctt:timecodetype, bbctt:div, bbctt:systeminfo, bbctt:event, bbctt:chapter id=, bbctt:item, bbctt:itemid, bbctt:title, bbctt:associatedfile, bbctt:p, bbctt:span, ebuttm:binarydata, shall, shall, shall, shall, shall, should, should, shall, shall, shall, shall, note, should, shall, should, should, shall, should, should, shall, should, shall, should, shall, shall, shall, shall, should, shall, should, should, should, shall, shall, shall, shall, shall, should, shall, should, shall, shall, shall, shall, shall, shall, shall, shall, shall, shall, shall, shall, shall, shall, shall, should, shall, should, shall, shall, shall, shall, shall, shall, shall, should, shall, shall, shall, shall, should, may, shall, shall, shall, shall, shall, shall, shall, should, this is important:][the bbc academy has produced an online guide to subtitling. if you are new to subtitling, please start there., authors of subtitle (respeakers, stenographers, editors);, producers and distributors of content;, developers of software tools for authoring, validating, converting and presenting subtitles;, anyone involved in controlling subtitle quality and compliance., an overview of subtitles: read this introduction and the first few sections of presentation, timing, identifying speakers and ebu-tt and ebu-tt-d documents in detail. scanning through the examples will also give you a good understanding of how subtitles are made., editing and styling subtitles: read the presentation section for text, format and timing guidelines., making subtitle files for online-only content: if your software does not support ebu-tt-d you will need to create an xml file yourself. assuming you are familiar with xml and css, start with introduction to the ttml document structure and example ebu-tt-d document. then follow the quick ebu-tt-d how-to., when the window is wide enough, the table of contents appears on the left hand side instead of the top., the table of contents by default just shows the top level headings - headings with a triangle next to them can be expanded by clicking the triangle., by hovering over a heading in the main part of the document a link icon appears - this may be used to get a direct link to that section., clicking on a heading in the main part of the document will make sure the heading is visible in the table of contents. if its already visible it will flash the heading off and on., minor clarifications to presentation guidelines in response to comments received, for example: the wording about use of reaction shots to gain time. the word rate for live subtitles has been adjusted to 160-180wpm from 130-150wpm. the use of numbers. capitalisation in speech., the wording about use of reaction shots to gain time., the word rate for live subtitles has been adjusted to 160-180wpm from 130-150wpm., the use of numbers., capitalisation in speech., technical details moved to the end, in the file format section, including specification references and bbc-specific requirements., added details about delivery, including multiple stl files and online exclusives., added a section describing the details of ebu-tt and ebu-tt-d documents with a downloadable example document and further links to examples provided by irt., added links from the presentation sections to the technical implementation details., added links from the technical implementation details to the presentation requirements they support., added anchor links by headings for ease of reference., made table of contents expandable, set to include top level details only on load., accessibility improvements., added details on positioning, including mapping of teletext positions to percentage positions in ebu-tt-d/imsc., added more details about authoring and presentation font family, font size and line height, size customisation options and the use of reith sans font., updated the references., added requirement for compatibility of ebu-tt-d with imsc; added technical details of itts:filllinegap and ittp:activearea., improved formatting of examples, code blocks and requirements., made page layout more responsive to work better with smaller and larger screens., added downloadable examples of an ebu-tt document and the result following conversion to ebu-tt-d., can viewers read the subtitles at the rate of speech?, should you edit out some words to allow more time?, can subtitles carry over to the next scene so they ‘catch up’ with the speaker?, should you use cumulative subtitles to convey the rhythm of speech (for example, if rapping)?, if there are shot changes within the sequence, should the subtitles be synchronised with those?, should you use one, two or three lines of subtitles?, should you change the position of the subtitle to avoid obscuring important visual information or to indicate the speaker?, register: mother vs mum; deceased vs dead; intercourse vs sex;, nationality: mom vs mum; trousers vs pants;, era: wireless vs radio; hackney cab vs taxi., tt:region (tts:extent attribute), ttp:cellresolution, tts:fontfamily, tts:fontsize, ebutts:linepadding, article and noun (e.g. the + table; a + book), preposition and following phrase (e.g. on + the table; in + a way; about + his life), conjunction and following phrase/clause (e.g. and + those books; but + i went there), pronoun and verb (e.g. he + is; they + will come; it + comes), parts of a complex verb (e.g. have + eaten; will + have + been + doing), colour: this is the preferred method that should be used in most cases., single quotes: used to indicate an out-of-vision speaker, such as someone speaking via telephone, or to distinguish between in- and out-of-vision voices when both are spoken by the same character (or by the narrator) and therefore using the same colour (e.g. a narrator who is sometimes in-vision)., arrows: used to indicate the direction of out-of-vision sounds when the origin of the sound is not apparent. (infrequently used), label: can be used to resolve ambiguity as to who is speaking., horizontal positioning: this is a legacy technique for identifying in-vision speakers, but it is still used for indicating off-screen speech. it is also used with vertical positioning to avoid obscuring important information., dashes: this is a legacy technique. must only be used with colour when unavoidable., tts:direction (ttml1 specification link), tts:textalign, ebutts:multirowalign, tts:unicodebidi (ttml1 specification link), tts:writingmode, the tts:lineheight should be set to a value used for common fonts, such as 120%., the tts:fontsize should be set so that the computed font size multiplied by the line height is no more than 8% of the video height., compute an adjustment factor that is the line height divided by 133%. for example, if a line height of 120% is chosen, then the adjustment ratio would be 120/133 = 0.9., reduce the font size, multiplying its computed value by the adjustment factor., increase the line height, dividing its computed value by the adjustment factor., scaling the root container to avoid overlap, detecting and resolving screen area clashes by moving subtitles around, pausing the presentation while the overlays are visible., avoid obscuring important information (such as captions and mouths) when vertical positioning is not sufficient (see below)., indicate the direction of off-screen sounds. see arrows for off-screen voices., identifying in-vision speakers (legacy technique). see identifying speakers with horizontal positioning., in cases where you consider the visual information on the screen to be more important than the song lyrics, leave the screen free of subtitles., where snippets of a song are interspersed with any kind of speech, and it would be confusing to subtitle both the lyrics and the speech, it is better to put up a music label and to leave the lyrics unsubtitled., edit the lyrics to give viewers more time to read them, combine song-lines wherever possible, do a mixture of both - edit and combine song-lines., for jokes - to keep punch lines separate, in quizzes - to separate questions and answers, in songs - e.g. for backing singers. they are particularly effective when one line starts before the previous one finishes, to delay dramatic responses (however, if a response is not expected, a cumulative can give the game away), when an exclamation/sound effect label occurs just before a shot-change, and would otherwise need to be merged with the preceding subtitle, to distinguish between two or more white speakers in the same shot, try to cue the texts of pre-recorded segments so that they closely match the spoken words in terms of start time., do not cue texts out rapidly to catch up if you get left behind - skip some and continue from the correct place., try to include speakers names if available where in-vision captions have been obliterated., a change of speaker should always be indicated by a change of colour., scrolling subtitles, while usually appearing at the bottom of the screen, should be raised as appropriate in order to avoid any vital action, visual information, name labels, etc. subtitle vertical position can be set by referencing a tt:region with appropriate tts:origin, tts:extent and tts:displayalign attributes. an alternative strategy is to insert <tt:br/> elements as necessary; for example if tts:displayalign=after then every <tt:br/> element appended after a subtitle will raise that subtitle by the height of the line. although using line breaks for positioning is discouraged for prepared subtitles (see authoring font size), this technique saves time when live subtitling. note that if the region height is exceeded by entering too many line breaks, lines can fall off the top, and be clipped. if a subtitle needs to be moved while it is visible and inserting <tt:br/> elements is not possible then the <tt:p> should be ended and a new <tt:p> begun that references a differently positioned region. that new <tt:p> can contain the same words and style references., it uses utf-8 encoding, no more than 4 regions are active at the same time (any number of regions can be defined in the document, but no more than four can be used simultaneously)., the metadata element ebuttm:conformstostandard is included with the value that corresponds to imsc 1.0.1 (as well as the value that corresponds to ebu-tt-d 1.0.1): 
<ebuttm:conformstostandard>http://www.w3.org/ns/ttml/profile/imsc1/text</ebuttm:conformstostandard>
<ebuttm:conformstostandard>urn:ebu:tt:distribution:2018-04</ebuttm:conformstostandard>, ttml 1, ebu-tt 1.0, ebu-tt-d 1.0.1, if the timebase is smpte, subtitle begin and end time expressions are interpreted in the smpte 12m-1-2008 system: hh:mm:ss:ff (hour:minute:second:frame). if this timebase is used, ttp:markermode, ttp:dropmode, ttp:framerate and ttp:frameratemultiplier attributes must be specified on the tt element., if the timebase is media, begin and end times denote a coordinate on the time-line of a media object. this can be either: full-clock-value: hh:mm:ss followed by an optional fraction with a leading period, e.g. 02:30:03, 01:00:10.25 timecount-value: value followed by an optional fraction and a symbol for the time metric, e.g. 3.2h (3 hours and 12 minutes). allowed time metrics are h, m, s, ms (millisecond), full-clock-value: hh:mm:ss followed by an optional fraction with a leading period, e.g. 02:30:03, 01:00:10.25, timecount-value: value followed by an optional fraction and a symbol for the time metric, e.g. 3.2h (3 hours and 12 minutes). allowed time metrics are h, m, s, ms (millisecond), shall requirement: ebu-tt-d for ebu-tt-d output, set ttp:timebase to media and use full clock time expressions on begin and end attributes. example: 
<!-- 
ebu-tt-d must use media timebase and 
full clock format time expressions.
-->
<tt:tt ttp:timebase=media ... />
...
<!-- 
begin and end times in full clock, 
optional fraction with leading period 
-->
<tt:p begin=01:00:10.25 end=01:00:11 ... >
<tt:span style=spanstyle>subtitle text.</tt:span>
</tt:p>
<tt:p begin=01:00:12.345 end=01:00:23.456 ... >
<tt:span style=spanstyle>more subtitle text.</tt:span>
</tt:p>
..., shall requirement: ebu-tt 1.0 for ebu-tt output, set ttp:timebase=smpte, also set ttp:dropmode, ttp:markermode, ttp:framerate and ttp:frameratemultiplier example: 
<!-- 
if smpte timebase is used, these elements 
are also required: 
ttp:framerate - used to 
interpret smpte time expressions 
ttp:frameratemultiplier - applied to 
compute the effective frame rate.
if the frame rate is a whole number of 
frames per second then the value 
of frameratemultiplier is 1 1 
ttp:markermode -  value must be 
discontinuous. 
see specification for details.
ttp:dropmode - specifies constraints on 
the interpretation and use of 
frame counts associated with smpte timebase.
when the calculation of the framerate from
the ttp:framerate and  ttp:frameratemultiplier 
results in an integer then the value is nondrop. 
see ttml 
-->
<tt:tt 
ttp:timebase=smpte ttp:framerate=24 
ttp:frameratemultiplier=1 1 ttp:markermode=discontinuous  
ttp:dropmode =nondrop... />
...
<!-- begin and end times in hh:mm:ss:ff smpte format -->
<tt:p begin=01:31:59:07 end=01:32:04:22 ... >
    <tt:span style=spanstyle>subtitle text.</tt:span>
</tt:p>
..., shall requirement: attempt to display subtitles as close as possible to their respective begin and end times, regardless of the actual displayed frame rate. see annex e of ebu-tt-d specification., shall requirement: ebu-tt 1.0 set the cell resolution explicitly even if using the default value. example: 
<tt:tt ttp:cellresolution=32 15 ... >, shall requirement: the calculated font size must fit within a line height of between 7% and 9% of the active video height. see section 10.2 font size, should requirement: ebu-tt-d specify the active area. 
<tt:tt ... ittp:activearea=12% 5% 76% 90% ... >, should requirement: the visible area of the video must include the specified active area occupied by subtitles. in normal conditions the registration or positional alignment of the subtitle rendering area against the video image must not be modified to achieve this. the exception would be if the subtitle rendering area is adjusted temporarily for example to accommodate controls., shall requirement: set to reith sans, fall back to device-specific and then generic proportional sans-serif fonts so that the end device uses its default font (e.g. roboto in android). example: 
<tt:style xml:id=s0
   tts:fontfamily=reithsans, arial, roboto, proportionalsansserif, default ...>, shall requirement: map a generic font family name to the best appropriate matching font on the device., shall requirement: use downloadable fonts if available., shall requirement: fall back to the system defined sans serif font if a downloadable font is not available. prefer proportional fonts if there is a choice., should requirement: for bbc subtitles, set the font size to be approximately 1/15th (6.667%) of the height of the root container, for example by setting ttp:cellresolution to 32 15 and tts:fontsize to 100%. example: 
<tt:tt 
   [namespace, parameter, style attributes etc.]
   ttp:cellresolution=32 15>
...
   <tt:style
      xml:id=defaultspanstyle 
      [other style attributes]
      tts:fontsize=100% />, shall requirement: calculate percentage values relative to the parent elements font size, if specified, or the cell size otherwise. example: 
<tt:tt 
   [namespace, other parameter, style attributes etc.] 
   ttp:cellresolution=32 15>
...
   <tt:style
      xml:id=bigstyle 
      tts:fontsize=150%/>
   <tt:style 
      xml:id=smallstyle 
      tts:fontsize=50%/>
...
   <tt:div style=bigstyle>
      <tt:p>big text</>
      <!-- 
      the text on the above line will
      render at 150% of the cell height 
      -->
      <tt:p style=smallstyle>small text</tt:p>
      <!-- 
      the text on the above line will render at
      50% of 150% (i.e. 75%) of the cell height 
      -->
   </tt:div>, should requirement: apply a scaling factor if reith sans is being used and the line height is less than 133% of the font size. (see additional adjustments for reith sans font)., should requirement: apply a scaling factor based on the devices physical screen size (see presentation font size). example: for a 32 tv and an authored font size corresponding to the authored font size guideline, apply a scaling factor of 0.67 so that the computed font size is as though the font size was specified at 67% of cell height., shall requirement: apply scaling factors cumulatively. example: a player supports reith sans and the subtitle document specifies that reith sans is to be used. the subtitle document specifies a line height of 120%, so a scaling factor of ~0.9 needs to be applied. the processor also needs to apply a scaling factor of 0.67 for display on a 32 tv. the actual scaling factor to be applied is 0.9 * 0.67 = ~0.6., should requirement: set the line height explicitly on a style applied to a <p> element using percentage values, evaluated relative to the computed font size. example: 
<tt:style xml:id=paragraphstyle tts:lineheight=120% ... />
...
<tt:p xml:id=p123 style=paragraphstyle>...</tt:p>, should requirement: set tts:lineheight=120% to accommodate commonly used web fonts., shall requirement: calculate the line height for a line area using the fonts ascender, descender and linegap attributes, including leading if available., should requirement: apply a scaling factor if reith sans is being used and the line height is less than 133% of the font size. (see additional adjustments for reith sans font)., shall requirement: set this explicitly even if using defaults. ebu-tt 1.0 example: 
<tt:style xml:id=paragraphstyle tts:textalign=center/>
...
<tt:p xml:id=p123 style=paragraphstyle>...</tt:p>, should requirement if only supporting left to right scripts; shall requirement if support for any non-latin or non-left-to-right text is required: support unicode characters and the unicode bidirectional algorithm (uax9)., shall requirement: calculate text alignment correctly based on the value of tts:textalign, the unicode bidirectional algorithm, and all defined values of tts:unicodebidi and tts:direction and tts:writingmode. example: 
<tt:region
   xml:id=topregion 
   [origin, extent, other attributes]
   tts:writingmode=lrtb />
<tt:style
   xml:id=startstyle 
   [other style attributes]
   tts:textalign=start/>
<tt:style
   xml:id=rtlstyle
   tts:unicodebidi=bidioverride
   tts:direction=rtl/>
...
<!-- 
the lines below will be left aligned 
(start = left here) 
-->
<tt:p region=topregion style=leftstyle> 
little birds are playing<br/>
bagpipes on the shore,<br/>
<!-- 
the line below will display
.erons stsiruot eht erehw 
and will be right aligned 
(start = right for rtl) 
-->
  <tt:span style=rtlstyle>
    where the tourists snore.
  </tt:span>
</tt:p>, shall requirement: calculate text alignment relative to the region after taking into account any start or end padding., shall requirement: align the line areas generated by a <tt:p> element after applying any line padding; for example, if there is 0.5c of line padding applied to each line area and 1c of start and end padding on the region, then the first glyph of a left aligned line area will be 1.5c to the right of the region origins x coordinate., should requirement: disable automatic line wrapping so that the editor creates line break manually. examples: set tts:wrapoption=nowrap; separate lines of content by putting into separate <tt:p> elements or by inserting <tt:br/> elements, set tts:wrapoption=nowrap;, separate lines of content by putting into separate <tt:p> elements or by inserting <tt:br/> elements, shall requirement: ebu-tt 1.0 for ebu-tt 1.0, do not include this attribute., should requirement: if tts:wrapoption is set to nowrap, set the attribute tts:overflow to visible on the region that corresponds to the affected content., should requirement: when deriving break points, use the uax14 line breaking algorithm., should requirement: use the uax14 line breaking algorithm. note that when the document has tts:wrapoption=nowrap the line breaking algorithm will not apply., shall requirement: if the text overflows its region, attempt to display the overflow (even if ugly) so that viewers who depend on subtitles dont miss important information., shall requirement: ebu-tt 1.0 for ebu-tt processing, this attribute should be ignored and manual line breaks used instead. see page 33 of the specification, shall requirement: if the ebutts:multirowalign attribute as specified on a tt:p element has the same value as tts:textalign or is set to auto, each generated line area in the tt:p shall be aligned according to the computed value of tts:textalign. example: 
<tt:style xml:id=paragraphstyle 
tts:textalign=center 
ebutts:multirowalign=center 
tts:lineheight=120%/>
...
<tt:p xml:id=subtitle1 region=top 
begin=00:00:30.000 end=00:00:31.000 
style=paragraphstyle>
these two lines <tt:br/>
will be centred.
</tt:p>, shall requirement: the behaviour of this attribute in combination with tts:textalign is as defined in annex c in https://tech.ebu.ch/publications/tech3380. example: 
<tt:style xml:id=startend 
tts:textalign=start 
ebutts:multirowalign=end/>
...
<tt:p xml:id=subtitle1 region=regiontop 
style=startend begin=00:00:00 
end=00:00:03>
  longer line left-aligned in the region.
  <tt:br/>
  shorter right-aligned with region..
</tt:p>, shall requirement: ebu-tt-d for ebu-tt-d, set line padding to approximately half a character width. this should be calculated from the aspect ratio, the grid and the font size. for the purposes of the calculation, 1em can be assumed to be equal to the font size. the following example calculation uses non-recommended values for illustration purposes only. assuming an aspect ratio of 16:9, a cellresolution of 32 15 and a font size of 80%: font height = 5.33% of video height (80% x 100% / 15) font width (also 1em), expressed as a fraction of the width of the root container region: 2.99% (5.33% x 9 / 16) 0.5em = 1.495% (2.99 / 2) expressed in cells: 0.47 (32 * 1.495 / 100) ebutts:linepadding=0.47c, font height = 5.33% of video height (80% x 100% / 15), font width (also 1em), expressed as a fraction of the width of the root container region: 2.99% (5.33% x 9 / 16), 0.5em = 1.495% (2.99 / 2), expressed in cells: 0.47 (32 * 1.495 / 100), should requirement: if no line padding exists and there is sufficient space available, add 0.5c of padding on the sides of each line. note that the recommended behaviour for tts:overflow is that it is visible and that tts:wrapoption is nowrap., shall requirement: when laying out line areas inset the line areas by twice the value of ebutts:linepadding from the start and end edges of the region, after having applied any tts:padding values., should requirement: if scaling down the font size, also reduce the line padding. if scaling the line padding, it may be reduced by up to the same percentage as the relative reduction in font size (i.e., if multiplying the font size by 50%, the line padding may be multiplied by a value in the range 50%-100%)., shall requirement: set the default font colour to white #ffffff example: 
<tt:style 
   xml:id=defaultparagraphstyle
   tts:color=#ffffff 
   tts:textalign=center 
   ebutts:multirowalign=center 
   tts:lineheight=120%/>
<tt:style 
   xml:id=defaultspanstyle 
   tts:backgroundcolor=#000000/>
<tt:style 
   xml:id=yellowspan 
   tts:color=#ffff00 />
...
<tt:p 
   xml:id=subtitle3 
   begin=00:00:30.000 end=00:00:31.000 
   style=defaultparagraphstyle>
   <tt:span 
      style=defaultspanstyle yellowspan>
      this subtitle is in yellow that overrides 
      the white in the defaultparagraph style.
   </tt:span>
</tt:p>, shall requirement: the attribute can have one of these values only (see speaker colours): #ffffff (white), #ffff00 (yellow), #00ffff (cyan), #00ff00 (green), #ffffff (white),, #ffff00 (yellow),, #00ffff (cyan),, #00ff00 (green), shall requirement: apply the specified colour to text., shall requirement: set background colour to solid black (do not allow opacity). example: tts:backgroundcolor=#000000, shall requirement: apply background to <tt:span> elements only example: 
<tt:style
   xml:id=spanstyle 
   [other style attributes] 
   tts:backgroundcolor=#000000 />
...
<tt:p>
   <tt:span style=spanstyle>
      beware the jubjub bird, and shun
      <tt:br/>
      the frumious bandersnatch!
    </tt:span>
</tt:p>, shall requirement: avoid white space between adjacent <tt:span> elements. white space that is not styled with a background colour will appear in browsers as gaps in the background. required white space between words must be included inside a <tt:span> element, usually immediately before a word, at the beginning of the element contents. example of what not to do: if the styles applied to the <span> define a background colour, the end of line character [eol] between the <tt:span>s is unstyled: 
<tt:p>[eol]
  <tt:span style=white>hey!</tt:span>[eol]
  <tt:span style=yellow>what?</tt:span>[eol]
<tt:p>[eol]
 this will render as: hey! what? example of what to do instead: 
<tt:style
   xml:id=spanstyle1 
   [other style attributes] 
   tts:backgroundcolor=#000000 />
<tt:style
   xml:id=spanstyle2 
   [other style attributes] 
   tts:backgroundcolor=#000000 />

...
<tt:p>
   <tt:span style=spanstyle1>
   beware the jubjub bird <tt:br/></tt:span><tt:span 
   style=spanstyle2>and shun the 
   frumious bandersnatch!</tt:span>
</tt:p>, shall requirement: draw the background area behind each generated line area in the specified colour., shall requirement: make the height of the background equal to the fonts computed line height so that no gap exists between lines. see tt:span., shall requirement: ebu-tt-d itts:filllinegap must be set to true. example: 
<tt:style xml:id=pstyle itts:filllinegap=true ... >
...
<tt:p style=pstyle ...>, shall requirement: ebu-tt-d apply itts:filllinegap to <tt:p> elements only. example: 
<style
   xml:id=pstyle 
   [other style attributes] 
   itts:filllinegap=true />
<style
   xml:id=spanstyle 
   [other style attributes] 
   tts:backgroundcolor=#000000 />...
<tt:p style=pstyle>
   <tt:span style=spanstyle>
      beware the jubjub bird, and shun<tt:br/>
      the frumious bandersnatch!
    </tt:span>
</tt:p>, shall requirement: make the height of the background area of each line extend so that there is no gap between adjacent line background areas, for every line area generated by a <tt:p> element whose computed value of itts:filllinegap is true., shall requirement: documents must not contain overlapping regions that are active at the same time (where a region is active if any content that is flowed into it is active)., shall requirement: the regions origin x coordinate must be greater than or equal to 12.5% of the root container region for a 16:9 active video (this allows for a 4:3 centre cut)., shall requirement: the sum of the regions origin x coordinate and extent width must be less than or equal to 87.5% of the root container region for a 16:9 active video (this allows for a 4:3 centre cut)., shall requirement: the number of regions active at any one time must not exceed 4 (imsc 1 requirement)., should requirement: support at least eight regions that are active at the same time., shall requirement: support at least four regions that are active at the same time., should requirement: if overlapping regions are active simultaneously draw them in region definition order, i.e. the order of regions in the layout element. note that this is not permitted in ebu-tt and ebu-tt-d documents., shall requirement: the sum of the value for the x-coordinate of the region and the value for the width of the region (specified by tts:extent) must be less than or equal to 100%., shall requirement: the sum of the value for the y-coordinate of the region and the value for the height of the region (specified by tts:extent) must be less or equal to 100%., shall requirement: the sum of the value for the x-coordinate of the region and the value for the width of the region (specified by tts:extent) must be less than or equal to 100%., shall requirement: the sum of the value for the y-coordinate of the region and the value for the height of the region (specified by tts:extent) must be less or equal to 100%., shall requirement: ebu-tt 1.0 the tts:extent must be present on the tt:tt element if any length unit in the document is expressed in pixels. example: <tt:tt tts:extent=400px 300px>, shall requirement: ebu-tt-d tts:extent must not be present on any element other than tt:region, shall requirement: ebu-tt-d ebu-tt-d document must not express the value of tts:extent in pixel units. example: <tt:region xml:id=r0 tts:extent=68.5% 7.826% .../>, should requirement: clip any region that extends beyond the root container region (the rectangle corresponding to an origin of 0% 0% with an extent 100% 100%) to the area that intersects with the root container region., shall requirement: a tts:displayalign attribute shall be present on every region element. 
<tt:region xml:id=r0 tts:displayalign=after ... />, shall requirement: the active lines within the region are aligned in the block progression direction to the before edge of the region (for before, usually the top for top to bottom left to right), the middle (for center) or the after edge (for after, usually the bottom for top to bottom left to right)., shall requirement: ebu-tt 1.0 in an ebu-tt part 1 v1.0 document if no tts:displayalign attribute is present the default of after shall be applied., shall requirement: in an ebu-tt-d or other ttml document (e.g. ebu-tt part 1 v1.1 etc) or if the document type is undetermined then if no tts:displayalign attribute is present the ttml default of before shall be applied., lrtb: left to right top to bottom, rltb: right to left top to bottom, tbrl: top to bottom right to left, tblr: top to bottom left to right, lr: left to right top to bottom, rl: right to left top to bottom, tb: top to bottom right to left, should requirement: specify tts:writingmode on a region. example: 
<tt:style xml:id=paragraphstyle 
tts:direction=rtl tts:unicodebidi=bidioverride/>
...
<tt:region xml:id=r1 tts:writingmode=rltb 
tts:origin=15% 16% tts:extent=70% 24%/>
...
<tt:p region=r1 style=paragraphstyle>
<!-- this line will display .uoy evol i, right aligned. -->
i love you.
</tt:p>, may requirement (where support for latin scripts or left-to-right-top-to-bottom scripts only is required): support writingmode semantics., shall requirement (where support for any non left-to-right-top-to-bottom script is required): support writingmode semantics., shall requirement: set overflow to visible so that subtitles are visible even if they overflow. 
                                                
<region xml:id=r0 tts:overflow=visible>, shall requirement: a tt:div must contain at least one tt:p element. example: 
<tt:p xml:id=subtitle1 region=top 
begin=00:00:30.000 end=00:00:31.000 
style=paragraphstyle>
  <tt:span style=spanstyle>
  this subtitle is in the top region.
  </tt:span> 
</tt:p>, shall requirement: subtitle text (character content) must not be outside a <tt:span> element. example: 
<tt:p xml:id=subtitle1 region=top begin=00:00:30.000 
end=00:00:31.000 style=paragraphstyle>
  <tt:span style=spanstyle>
  this subtitle is in the top region
  </tt:span>
</tt:p>, shall requirement: each tt:p element must have an xml:id attribute value that is unique in the document. example: 
<tt:p xml:id=s2874 region=top begin=00:00:30.000 
end=00:00:31.000 style=paragraphstyle>
  <tt:span style=spanstyle>
  this subtitle is in the top region
  </tt:span>
</tt:p>, shall requirement: do not infer subtitle sequence from xml:id., shall requirement: all subtitle text must be wrapped in a <tt:span> with a black background style applied. example: 
<tt:style xml:id=spanstyle tts:wrapoption=nowrap 
ebutts:linepadding=0.5c 
tts:fontfamily=proportionalsansserif 
tts:fontsize=100% tts:backgroundcolor=#000000 />
...
<tt:p>
  <tt:span style=spanstyle begin=00:01:30 end=00:01:35>
  this subtitle is displayed for 5 seconds.
  </tt:span>
  <tt:span style=spanstyle begin=00.01.33 end=00:01:35>
  this one is added after 3 and remains on screen for 2.
  </tt:span>
</tt:p>, should requirement: for every <tt:span> with background applied, make the background height equal to the calculated line height regardless of other specifications. this is to help ensure no gap exists between lines., prepare the text. if available, begin with a transcript file so you dont have to type in the text. add labels if required (e.g. to describe action)., add line breaks and timings. this is commonly done with an authoring tool. ideally, the tool should allow you to configure all of the features that determine line length (line padding, region definition, cell resolution, font family and font size). this will allow you to preview the subtitles as reliably as possible (the final appearance will be determined by the users system). if your tool does not support these features, use a wysiwyg tool to define a subtitle region of 71.25% of the width of the video (for a 16:9 video). use a wide font such as verdana to minimise the risk of text overflowing the region when rendered in the final display font. it is not recommended to control line length using a character count limit only: this is a crude method that does not take into account the width of individual letters and fonts. although 37 characters would fit most of the time, in some cases they might not (e.g. too many ms and ws). if you use this method you should test your subtitles in different browsers and operating systems before delivery. if you dont have access to an authoring tool, you can use a simple text editor, although this method is slow and error-prone. create a paragraph with manual line breaks for each subtitle and add timings for each paragraph. in this case you can only control line length by counting characters per line, and you should test your file thoroughly on different browsers and systems before delivery. timings must be relative to a programme begin time of 00:00:00.000, if you dont have access to an authoring tool, you can use a simple text editor, although this method is slow and error-prone. create a paragraph with manual line breaks for each subtitle and add timings for each paragraph. in this case you can only control line length by counting characters per line, and you should test your file thoroughly on different browsers and systems before delivery., save or export the subtitles as a simple text file. the file should include nothing but the subtitle text with line breaks and timings., format timings. timings must be in the format hh:mm:ss followed by a fraction (e.g. 00:01:29.265). in ebu-tt-d, the begin time of the subtitle is inclusive, but the end time is exclusive. this means that if you want one subtitle to follow another without any gaps, you should set the end time of the first subtitle to be the same as the begin time of the following subtitle., format lines. ensure that lines are not too long and that a <tt:br/> tag is present for every line break within a subtitle. remove unnecessary line breaks and white space at the beginning or end of a subtitle., escape characters. replace special characters with their escaped version as detailed in encoding characters., create the span elements. wrap each subtitle in a <tt:span> element with a style attribute, so you have a list of subtitles like this: 
    <tt:span style=spanstyle>first line<tt:br/>second line</tt:span>
    <tt:span style=spanstyle>this subtitle has one line</tt:span>
    <tt:span style=spanstyle>next subtitle...</tt:span>, create the paragraph elements. wrap each of the spans in a <tt:p> element. each must have begin and end times and an identifier (which must begin with a letter). in this minimal example region and style attributes are fixed for all subtitles so they are set in the container div . the identifier must be unique for each subtitle. for the begin and end times use the timings youve prepared. you will end up with something like this: 
    <tt:p xml:id=subtitle1 begin=00:00:10.000 end=00:00:20.000>
     <tt:span style=spanstyle>first line<tt:br/>second line</tt:span>
    </tt:p>
    <tt:p xml:id=subtitle2 begin=00:00:20.000 end=00:00:20.748>
    <tt:span style=spanstyle>this subtitle has one line</tt:span>
    </tt:p>
    <tt:p xml:id=subtitle3 begin=00:00:21.12 end=00:00:21.54>
    <tt:span style=spanstyle>next subtitle...</tt:span>    
    </tt:p>, place the subtitles inside a template. save a copy of the ebu-tt-d template and open it with a simple text editor (avoid word processors such as word). copy the list of paragraph elements you created in the previous step and paste it between <tt:div> and </tt:div>, replacing the entire comment line (from <!-- to --> inclusive)., update the copyright. enter the correct year in the copyright element in the template: <ttm:copyright>bbc 2021</ttm:copyright>, save. save the file with a .ebuttd.xml file extension. for the file name, see ebu-tt-d file., ‘bbc access services presentation & style guidelines’ (internal document). 2012, ‘bbc.co.uk online subtitling editorial guidelines v1.1’. 2009. (archived via the wayback machine), bbc r&d white paper 287 (pdf): a survey of uk television viewing conditions. 2015, ‘specification of the ebu subtitling data exchange format, tech. 3264-e. 1991, ebu-tt part 1 subtitling format definition, tech3350 (version 1.0), ebu-tt part 1 - subtitle format definition, tech3350 (version 1.1), ebu-tt-d subtitling distribution format, tech3380, ‘itc guidance on standards for subtitling’. 1999. (word document download), the quality of live subtitling - improving the viewer experience. 2013, ofcom., ttml profiles for internet media subtitles and captions 1.0.1 (imsc1)]